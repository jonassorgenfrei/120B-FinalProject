
jsorg002_finalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000b0  00800100  00002fbc  00003050  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002fbc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000046  008001b0  008001b0  00003100  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003100  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000315c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000270  00000000  00000000  0000319c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003aa2  00000000  00000000  0000340c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ef3  00000000  00000000  00006eae  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000019f1  00000000  00000000  00007da1  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000918  00000000  00000000  00009794  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b9e  00000000  00000000  0000a0ac  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003de9  00000000  00000000  0000ac4a  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f8  00000000  00000000  0000ea33  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5b c1       	rjmp	.+694    	; 0x2b8 <__ctors_end>
       2:	00 00       	nop
       4:	78 c1       	rjmp	.+752    	; 0x2f6 <__bad_interrupt>
       6:	00 00       	nop
       8:	76 c1       	rjmp	.+748    	; 0x2f6 <__bad_interrupt>
       a:	00 00       	nop
       c:	74 c1       	rjmp	.+744    	; 0x2f6 <__bad_interrupt>
       e:	00 00       	nop
      10:	72 c1       	rjmp	.+740    	; 0x2f6 <__bad_interrupt>
      12:	00 00       	nop
      14:	70 c1       	rjmp	.+736    	; 0x2f6 <__bad_interrupt>
      16:	00 00       	nop
      18:	6e c1       	rjmp	.+732    	; 0x2f6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6c c1       	rjmp	.+728    	; 0x2f6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	6a c1       	rjmp	.+724    	; 0x2f6 <__bad_interrupt>
      22:	00 00       	nop
      24:	68 c1       	rjmp	.+720    	; 0x2f6 <__bad_interrupt>
      26:	00 00       	nop
      28:	66 c1       	rjmp	.+716    	; 0x2f6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	64 c1       	rjmp	.+712    	; 0x2f6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	62 c1       	rjmp	.+708    	; 0x2f6 <__bad_interrupt>
      32:	00 00       	nop
      34:	9e c2       	rjmp	.+1340   	; 0x572 <__vector_13>
      36:	00 00       	nop
      38:	5e c1       	rjmp	.+700    	; 0x2f6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5c c1       	rjmp	.+696    	; 0x2f6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	5a c1       	rjmp	.+692    	; 0x2f6 <__bad_interrupt>
      42:	00 00       	nop
      44:	58 c1       	rjmp	.+688    	; 0x2f6 <__bad_interrupt>
      46:	00 00       	nop
      48:	56 c1       	rjmp	.+684    	; 0x2f6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	54 c1       	rjmp	.+680    	; 0x2f6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	52 c1       	rjmp	.+676    	; 0x2f6 <__bad_interrupt>
      52:	00 00       	nop
      54:	50 c1       	rjmp	.+672    	; 0x2f6 <__bad_interrupt>
      56:	00 00       	nop
      58:	4e c1       	rjmp	.+668    	; 0x2f6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4c c1       	rjmp	.+664    	; 0x2f6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	4a c1       	rjmp	.+660    	; 0x2f6 <__bad_interrupt>
      62:	00 00       	nop
      64:	48 c1       	rjmp	.+656    	; 0x2f6 <__bad_interrupt>
      66:	00 00       	nop
      68:	46 c1       	rjmp	.+652    	; 0x2f6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	44 c1       	rjmp	.+648    	; 0x2f6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	42 c1       	rjmp	.+644    	; 0x2f6 <__bad_interrupt>
      72:	00 00       	nop
      74:	40 c1       	rjmp	.+640    	; 0x2f6 <__bad_interrupt>
      76:	00 00       	nop
      78:	3e c1       	rjmp	.+636    	; 0x2f6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	3c c1       	rjmp	.+632    	; 0x2f6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	3a c1       	rjmp	.+628    	; 0x2f6 <__bad_interrupt>
      82:	00 00       	nop
      84:	38 c1       	rjmp	.+624    	; 0x2f6 <__bad_interrupt>
      86:	00 00       	nop
      88:	36 c1       	rjmp	.+620    	; 0x2f6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <FONT_CHARS>:
      d8:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      e8:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      f8:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     108:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     118:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     128:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     138:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     148:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     158:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     168:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     178:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     188:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     198:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     1a8:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     1b8:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     1c8:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1d8:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1e8:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     1f8:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     208:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     218:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     228:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     238:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     248:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     258:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     268:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     278:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     288:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     298:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     2a8:	00 00 41 36 08 00 08 08 2a 1c 08 08 1c 2a 08 08     ..A6....*....*..

000002b8 <__ctors_end>:
     2b8:	11 24       	eor	r1, r1
     2ba:	1f be       	out	0x3f, r1	; 63
     2bc:	cf ef       	ldi	r28, 0xFF	; 255
     2be:	d0 e4       	ldi	r29, 0x40	; 64
     2c0:	de bf       	out	0x3e, r29	; 62
     2c2:	cd bf       	out	0x3d, r28	; 61

000002c4 <__do_copy_data>:
     2c4:	11 e0       	ldi	r17, 0x01	; 1
     2c6:	a0 e0       	ldi	r26, 0x00	; 0
     2c8:	b1 e0       	ldi	r27, 0x01	; 1
     2ca:	ec eb       	ldi	r30, 0xBC	; 188
     2cc:	ff e2       	ldi	r31, 0x2F	; 47
     2ce:	00 e0       	ldi	r16, 0x00	; 0
     2d0:	0b bf       	out	0x3b, r16	; 59
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <__do_copy_data+0x14>
     2d4:	07 90       	elpm	r0, Z+
     2d6:	0d 92       	st	X+, r0
     2d8:	a0 3b       	cpi	r26, 0xB0	; 176
     2da:	b1 07       	cpc	r27, r17
     2dc:	d9 f7       	brne	.-10     	; 0x2d4 <__do_copy_data+0x10>

000002de <__do_clear_bss>:
     2de:	21 e0       	ldi	r18, 0x01	; 1
     2e0:	a0 eb       	ldi	r26, 0xB0	; 176
     2e2:	b1 e0       	ldi	r27, 0x01	; 1
     2e4:	01 c0       	rjmp	.+2      	; 0x2e8 <.do_clear_bss_start>

000002e6 <.do_clear_bss_loop>:
     2e6:	1d 92       	st	X+, r1

000002e8 <.do_clear_bss_start>:
     2e8:	a6 3f       	cpi	r26, 0xF6	; 246
     2ea:	b2 07       	cpc	r27, r18
     2ec:	e1 f7       	brne	.-8      	; 0x2e6 <.do_clear_bss_loop>
     2ee:	0e 94 69 0f 	call	0x1ed2	; 0x1ed2 <main>
     2f2:	0c 94 dc 17 	jmp	0x2fb8	; 0x2fb8 <_exit>

000002f6 <__bad_interrupt>:
     2f6:	84 ce       	rjmp	.-760    	; 0x0 <__vectors>

000002f8 <LCD_SetUpPorts>:
	LCD_WriteCommand(0x06);
	LCD_WriteCommand(0x01);				 
}

void LCD_SetUpPorts(){
	DDRC = 0xFF; 
     2f8:	8f ef       	ldi	r24, 0xFF	; 255
     2fa:	87 b9       	out	0x07, r24	; 7
	PORTC = 0x00;
     2fc:	18 b8       	out	0x08, r1	; 8
     2fe:	08 95       	ret

00000300 <delay_ms>:
}

void delay_ms(int miliSec) //for 8 Mhz crystal
{
    int i,j;
    for(i=0;i<miliSec;i++)
     300:	18 16       	cp	r1, r24
     302:	19 06       	cpc	r1, r25
     304:	5c f0       	brlt	.+22     	; 0x31c <delay_ms+0x1c>
     306:	08 95       	ret
    for(j=0;j<775;j++)
  {
   asm("nop");
     308:	00 00       	nop
     30a:	21 50       	subi	r18, 0x01	; 1
     30c:	31 09       	sbc	r19, r1

void delay_ms(int miliSec) //for 8 Mhz crystal
{
    int i,j;
    for(i=0;i<miliSec;i++)
    for(j=0;j<775;j++)
     30e:	e1 f7       	brne	.-8      	; 0x308 <delay_ms+0x8>
}

void delay_ms(int miliSec) //for 8 Mhz crystal
{
    int i,j;
    for(i=0;i<miliSec;i++)
     310:	4f 5f       	subi	r20, 0xFF	; 255
     312:	5f 4f       	sbci	r21, 0xFF	; 255
     314:	84 17       	cp	r24, r20
     316:	95 07       	cpc	r25, r21
     318:	19 f4       	brne	.+6      	; 0x320 <delay_ms+0x20>
     31a:	08 95       	ret
     31c:	40 e0       	ldi	r20, 0x00	; 0
     31e:	50 e0       	ldi	r21, 0x00	; 0
											// 16x2 LCD: column - 9
   }
}

void delay_ms(int miliSec) //for 8 Mhz crystal
{
     320:	27 e0       	ldi	r18, 0x07	; 7
     322:	33 e0       	ldi	r19, 0x03	; 3
     324:	f1 cf       	rjmp	.-30     	; 0x308 <delay_ms+0x8>

00000326 <LCD_WriteCommand>:
	DDRC = 0xFF; 
	PORTC = 0x00;
}

void LCD_WriteCommand (unsigned char Command) {
	CONTROL_BUS &= ~(1<<RS);// To write Commands
     326:	42 98       	cbi	0x08, 2	; 8
	char z1 = Command << 4;// To shift 4 bits
	Command &= 0b11110000; //masking lower 4 bits
	CONTROL_BUS = (CONTROL_BUS & 0x0F)|Command; // sending data to LCD
     328:	98 b1       	in	r25, 0x08	; 8
     32a:	9f 70       	andi	r25, 0x0F	; 15
     32c:	28 2f       	mov	r18, r24
     32e:	20 7f       	andi	r18, 0xF0	; 240
     330:	92 2b       	or	r25, r18
     332:	98 b9       	out	0x08, r25	; 8
	
	CONTROL_BUS |= (1<<E);//send falling edge to send data to LCD
     334:	43 9a       	sbi	0x08, 3	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     336:	ef e9       	ldi	r30, 0x9F	; 159
     338:	ff e0       	ldi	r31, 0x0F	; 15
     33a:	31 97       	sbiw	r30, 0x01	; 1
     33c:	f1 f7       	brne	.-4      	; 0x33a <LCD_WriteCommand+0x14>
     33e:	00 c0       	rjmp	.+0      	; 0x340 <LCD_WriteCommand+0x1a>
     340:	00 00       	nop
	_delay_ms(1);
	CONTROL_BUS &= ~(1<<3);
     342:	43 98       	cbi	0x08, 3	; 8
     344:	ef e9       	ldi	r30, 0x9F	; 159
     346:	ff e0       	ldi	r31, 0x0F	; 15
     348:	31 97       	sbiw	r30, 0x01	; 1
     34a:	f1 f7       	brne	.-4      	; 0x348 <LCD_WriteCommand+0x22>
     34c:	00 c0       	rjmp	.+0      	; 0x34e <LCD_WriteCommand+0x28>
     34e:	00 00       	nop
	_delay_ms(1);
	z1 &= 0b11110000;//Again masking lower 4 bits
	CONTROL_BUS = (CONTROL_BUS & 0x0F)|z1;//Sending Remaining Data to LCD
     350:	98 b1       	in	r25, 0x08	; 8
     352:	9f 70       	andi	r25, 0x0F	; 15
     354:	82 95       	swap	r24
     356:	80 7f       	andi	r24, 0xF0	; 240
     358:	89 2b       	or	r24, r25
     35a:	88 b9       	out	0x08, r24	; 8
	
	CONTROL_BUS |= (1<<E);//send falling edge to send data to LCD
     35c:	43 9a       	sbi	0x08, 3	; 8
	delay_ms(1);
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	ce df       	rcall	.-100    	; 0x300 <delay_ms>
	CONTROL_BUS &= ~(1<<E);
     364:	43 98       	cbi	0x08, 3	; 8
	delay_ms(1);
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	ca cf       	rjmp	.-108    	; 0x300 <delay_ms>
     36c:	08 95       	ret

0000036e <LCD_ClearScreen>:
#define E 3			// pin number of uC connected to pin 6 of LCD disp.

/*-------------------------------------------------------------------------*/

void LCD_ClearScreen(void) {
   LCD_WriteCommand(0x01);
     36e:	81 e0       	ldi	r24, 0x01	; 1
     370:	da cf       	rjmp	.-76     	; 0x326 <LCD_WriteCommand>
     372:	08 95       	ret

00000374 <LCD_init>:
}

void LCD_init(void) {
	LCD_WriteCommand(0x02);
     374:	82 e0       	ldi	r24, 0x02	; 2
     376:	d7 df       	rcall	.-82     	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(0x28);
     378:	88 e2       	ldi	r24, 0x28	; 40
     37a:	d5 df       	rcall	.-86     	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(0x0c);
     37c:	8c e0       	ldi	r24, 0x0C	; 12
     37e:	d3 df       	rcall	.-90     	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(0x06);
     380:	86 e0       	ldi	r24, 0x06	; 6
     382:	d1 df       	rcall	.-94     	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(0x01);				 
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	cf cf       	rjmp	.-98     	; 0x326 <LCD_WriteCommand>
     388:	08 95       	ret

0000038a <LCD_Cursor>:
     38a:	81 31       	cpi	r24, 0x11	; 17
	sprintf(str3, "%03d",b);
	pos = LCD_APPEND_DisplayString(pos, str3);
}

void LCD_Cursor(unsigned char column) {
   if ( column < 17 ) { // 16x1 LCD: column < 9
     38c:	18 f4       	brcc	.+6      	; 0x394 <LCD_Cursor+0xa>
						// 16x2 LCD: column < 17
      LCD_WriteCommand(0x80 + column - 1);
     38e:	81 58       	subi	r24, 0x81	; 129
     390:	ca cf       	rjmp	.-108    	; 0x326 <LCD_WriteCommand>
     392:	08 95       	ret
   } else {
      LCD_WriteCommand(0xB8 + column - 9);	// 16x1 LCD: column - 1
     394:	81 55       	subi	r24, 0x51	; 81
     396:	c7 cf       	rjmp	.-114    	; 0x326 <LCD_WriteCommand>
     398:	08 95       	ret

0000039a <LCD_WriteData>:
	CONTROL_BUS &= ~(1<<E);
	delay_ms(1);
	
}

void LCD_WriteData(unsigned char Data) {
     39a:	cf 93       	push	r28
     39c:	c8 2f       	mov	r28, r24
	CONTROL_BUS |= (1 << RS);// To write Data
     39e:	42 9a       	sbi	0x08, 2	; 8
	char t1 = Data << 4;// To shift 4 bits
	Data &= 0b11110000;// for masking the lower 4 bits
	CONTROL_BUS = (CONTROL_BUS & 0x0F)|Data;//sending data
     3a0:	88 b1       	in	r24, 0x08	; 8
     3a2:	8f 70       	andi	r24, 0x0F	; 15
     3a4:	9c 2f       	mov	r25, r28
     3a6:	90 7f       	andi	r25, 0xF0	; 240
     3a8:	89 2b       	or	r24, r25
     3aa:	88 b9       	out	0x08, r24	; 8

	CONTROL_BUS |= (1<<E); //send falling edge to send data to LCD
     3ac:	43 9a       	sbi	0x08, 3	; 8
	delay_ms(1);
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	a6 df       	rcall	.-180    	; 0x300 <delay_ms>
	CONTROL_BUS &= ~(1<<E);
     3b4:	43 98       	cbi	0x08, 3	; 8
	delay_ms(1);
     3b6:	81 e0       	ldi	r24, 0x01	; 1
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	a2 df       	rcall	.-188    	; 0x300 <delay_ms>
	
	t1 &= 0b11110000;//Again masking lower 4 bits
	CONTROL_BUS = (CONTROL_BUS & 0x0F)|t1;// Sending remaining data
     3bc:	88 b1       	in	r24, 0x08	; 8
     3be:	8f 70       	andi	r24, 0x0F	; 15
     3c0:	c2 95       	swap	r28
     3c2:	c0 7f       	andi	r28, 0xF0	; 240
     3c4:	c8 2b       	or	r28, r24
     3c6:	c8 b9       	out	0x08, r28	; 8
	
	CONTROL_BUS |= (1<<E);//send falling edge to send data to LCD
     3c8:	43 9a       	sbi	0x08, 3	; 8
	delay_ms(1);
     3ca:	81 e0       	ldi	r24, 0x01	; 1
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	98 df       	rcall	.-208    	; 0x300 <delay_ms>
	CONTROL_BUS &= ~(1<<E);
	delay_ms(1);
     3d0:	43 98       	cbi	0x08, 3	; 8
     3d2:	81 e0       	ldi	r24, 0x01	; 1
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	94 df       	rcall	.-216    	; 0x300 <delay_ms>
	
}
     3d8:	cf 91       	pop	r28
     3da:	08 95       	ret

000003dc <LCD_DisplayString>:

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
     3dc:	0f 93       	push	r16
     3de:	1f 93       	push	r17
     3e0:	cf 93       	push	r28
     3e2:	df 93       	push	r29
     3e4:	18 2f       	mov	r17, r24
     3e6:	eb 01       	movw	r28, r22
   LCD_ClearScreen();
     3e8:	c2 df       	rcall	.-124    	; 0x36e <LCD_ClearScreen>
   unsigned char c = column;
   while(*string) {
     3ea:	88 81       	ld	r24, Y
     3ec:	88 23       	and	r24, r24
     3ee:	51 f0       	breq	.+20     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
      LCD_Cursor(c++);
     3f0:	01 e0       	ldi	r16, 0x01	; 1
     3f2:	01 0f       	add	r16, r17
     3f4:	81 2f       	mov	r24, r17
     3f6:	c9 df       	rcall	.-110    	; 0x38a <LCD_Cursor>
      LCD_WriteData(*string++);
     3f8:	89 91       	ld	r24, Y+
     3fa:	cf df       	rcall	.-98     	; 0x39a <LCD_WriteData>
     3fc:	10 2f       	mov	r17, r16

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
   LCD_ClearScreen();
   unsigned char c = column;
   while(*string) {
      LCD_Cursor(c++);
     3fe:	88 81       	ld	r24, Y
}

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
   LCD_ClearScreen();
   unsigned char c = column;
   while(*string) {
     400:	81 11       	cpse	r24, r1
     402:	f6 cf       	rjmp	.-20     	; 0x3f0 <LCD_DisplayString+0x14>
     404:	df 91       	pop	r29
      LCD_Cursor(c++);
      LCD_WriteData(*string++);
   }
}
     406:	cf 91       	pop	r28
     408:	1f 91       	pop	r17
     40a:	0f 91       	pop	r16
     40c:	08 95       	ret

0000040e <LCD_APPEND_DisplayString>:
     40e:	1f 93       	push	r17

static unsigned char LCD_APPEND_DisplayString( unsigned char column, const unsigned char* string) {
     410:	cf 93       	push	r28
     412:	df 93       	push	r29
	   unsigned char c = column;
	   while(*string) {
     414:	fb 01       	movw	r30, r22
     416:	90 81       	ld	r25, Z
     418:	99 23       	and	r25, r25
     41a:	59 f0       	breq	.+22     	; 0x432 <LCD_APPEND_DisplayString+0x24>
     41c:	eb 01       	movw	r28, r22
		   LCD_Cursor(c++);
     41e:	11 e0       	ldi	r17, 0x01	; 1
     420:	18 0f       	add	r17, r24
     422:	b3 df       	rcall	.-154    	; 0x38a <LCD_Cursor>
		   LCD_WriteData(*string++);
     424:	89 91       	ld	r24, Y+
     426:	b9 df       	rcall	.-142    	; 0x39a <LCD_WriteData>
}

static unsigned char LCD_APPEND_DisplayString( unsigned char column, const unsigned char* string) {
	   unsigned char c = column;
	   while(*string) {
		   LCD_Cursor(c++);
     428:	81 2f       	mov	r24, r17
   }
}

static unsigned char LCD_APPEND_DisplayString( unsigned char column, const unsigned char* string) {
	   unsigned char c = column;
	   while(*string) {
     42a:	98 81       	ld	r25, Y
     42c:	91 11       	cpse	r25, r1
     42e:	f7 cf       	rjmp	.-18     	; 0x41e <LCD_APPEND_DisplayString+0x10>
     430:	01 c0       	rjmp	.+2      	; 0x434 <LCD_APPEND_DisplayString+0x26>
      LCD_WriteData(*string++);
   }
}

static unsigned char LCD_APPEND_DisplayString( unsigned char column, const unsigned char* string) {
	   unsigned char c = column;
     432:	18 2f       	mov	r17, r24
	   while(*string) {
		   LCD_Cursor(c++);
		   LCD_WriteData(*string++);
	   }
	   return c;
}
     434:	81 2f       	mov	r24, r17
     436:	df 91       	pop	r29
     438:	cf 91       	pop	r28
     43a:	1f 91       	pop	r17
     43c:	08 95       	ret

0000043e <LCD_printfRGB>:

void LCD_printfRGB(char r, char g, char b){
     43e:	ac e0       	ldi	r26, 0x0C	; 12
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 98 14 	jmp	0x2930	; 0x2930 <__prologue_saves__+0x12>
     44a:	b6 2e       	mov	r11, r22
     44c:	d4 2e       	mov	r13, r20
	//LCD_ClearScreen();
	unsigned char pos = 1;
	unsigned char str1[4];
	sprintf(str1, "%03d",r);
     44e:	1f 92       	push	r1
     450:	8f 93       	push	r24
     452:	02 e2       	ldi	r16, 0x22	; 34
     454:	11 e0       	ldi	r17, 0x01	; 1
     456:	1f 93       	push	r17
     458:	0f 93       	push	r16
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	7c 01       	movw	r14, r24
     460:	9f 93       	push	r25
     462:	8f 93       	push	r24
     464:	0e 94 01 15 	call	0x2a02	; 0x2a02 <sprintf>
	pos = LCD_APPEND_DisplayString(pos, "Color:          R");
     468:	67 e2       	ldi	r22, 0x27	; 39
     46a:	71 e0       	ldi	r23, 0x01	; 1
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	cf df       	rcall	.-98     	; 0x40e <LCD_APPEND_DisplayString>
	pos = LCD_APPEND_DisplayString(pos, str1);
     470:	b7 01       	movw	r22, r14
     472:	cd df       	rcall	.-102    	; 0x40e <LCD_APPEND_DisplayString>
	pos = LCD_APPEND_DisplayString(pos, "|G");
     474:	69 e3       	ldi	r22, 0x39	; 57
     476:	71 e0       	ldi	r23, 0x01	; 1
     478:	ca df       	rcall	.-108    	; 0x40e <LCD_APPEND_DisplayString>
     47a:	c8 2e       	mov	r12, r24
	unsigned char str2[4];
	sprintf(str2, "%03d",g);
     47c:	1f 92       	push	r1
     47e:	bf 92       	push	r11
     480:	1f 93       	push	r17
     482:	0f 93       	push	r16
     484:	7e 01       	movw	r14, r28
     486:	95 e0       	ldi	r25, 0x05	; 5
     488:	e9 0e       	add	r14, r25
     48a:	f1 1c       	adc	r15, r1
     48c:	ff 92       	push	r15
     48e:	ef 92       	push	r14
     490:	0e 94 01 15 	call	0x2a02	; 0x2a02 <sprintf>
	pos = LCD_APPEND_DisplayString(pos, str2);
     494:	b7 01       	movw	r22, r14
     496:	8c 2d       	mov	r24, r12
	pos = LCD_APPEND_DisplayString(pos, "|B");
     498:	ba df       	rcall	.-140    	; 0x40e <LCD_APPEND_DisplayString>
     49a:	6c e3       	ldi	r22, 0x3C	; 60
     49c:	71 e0       	ldi	r23, 0x01	; 1
     49e:	b7 df       	rcall	.-146    	; 0x40e <LCD_APPEND_DisplayString>
     4a0:	f8 2e       	mov	r15, r24
	unsigned char str3[4];
	sprintf(str3, "%03d",b);
     4a2:	1f 92       	push	r1
     4a4:	df 92       	push	r13
     4a6:	1f 93       	push	r17
     4a8:	0f 93       	push	r16
     4aa:	8e 01       	movw	r16, r28
     4ac:	07 5f       	subi	r16, 0xF7	; 247
     4ae:	1f 4f       	sbci	r17, 0xFF	; 255
     4b0:	1f 93       	push	r17
     4b2:	0f 93       	push	r16
     4b4:	0e 94 01 15 	call	0x2a02	; 0x2a02 <sprintf>
	pos = LCD_APPEND_DisplayString(pos, str3);
     4b8:	b8 01       	movw	r22, r16
     4ba:	8f 2d       	mov	r24, r15
     4bc:	a8 df       	rcall	.-176    	; 0x40e <LCD_APPEND_DisplayString>
}
     4be:	0f b6       	in	r0, 0x3f	; 63
     4c0:	f8 94       	cli
     4c2:	de bf       	out	0x3e, r29	; 62
     4c4:	0f be       	out	0x3f, r0	; 63
     4c6:	cd bf       	out	0x3d, r28	; 61
     4c8:	2c 96       	adiw	r28, 0x0c	; 12
     4ca:	e9 e0       	ldi	r30, 0x09	; 9
     4cc:	0c 94 b4 14 	jmp	0x2968	; 0x2968 <__epilogue_restores__+0x12>

000004d0 <SMTICK1>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
     4d0:	00 97       	sbiw	r24, 0x00	; 0
     4d2:	19 f0       	breq	.+6      	; 0x4da <SMTICK1+0xa>
     4d4:	01 97       	sbiw	r24, 0x01	; 1
     4d6:	29 f0       	breq	.+10     	; 0x4e2 <SMTICK1+0x12>
     4d8:	11 c0       	rjmp	.+34     	; 0x4fc <SMTICK1+0x2c>
     4da:	6f e3       	ldi	r22, 0x3F	; 63
     4dc:	71 e0       	ldi	r23, 0x01	; 1
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	7d df       	rcall	.-262    	; 0x3dc <LCD_DisplayString>
     4e2:	80 91 e5 01 	lds	r24, 0x01E5	; 0x8001e5 <newInput>
     4e6:	81 11       	cpse	r24, r1
     4e8:	0c c0       	rjmp	.+24     	; 0x502 <SMTICK1+0x32>
     4ea:	e3 e0       	ldi	r30, 0x03	; 3
     4ec:	f1 e0       	ldi	r31, 0x01	; 1
     4ee:	42 81       	ldd	r20, Z+2	; 0x02
     4f0:	61 81       	ldd	r22, Z+1	; 0x01
     4f2:	80 81       	ld	r24, Z
     4f4:	a4 df       	rcall	.-184    	; 0x43e <LCD_printfRGB>
     4f6:	81 e0       	ldi	r24, 0x01	; 1
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	08 95       	ret
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	08 95       	ret
     502:	81 e0       	ldi	r24, 0x01	; 1
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	08 95       	ret

00000508 <TimerSet>:
     508:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <_avr_timer_M>
     50c:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <_avr_timer_M+0x1>
     510:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_avr_timer_M+0x2>
     514:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_avr_timer_M+0x3>
     518:	60 93 e6 01 	sts	0x01E6, r22	; 0x8001e6 <_avr_timer_cntcurr>
     51c:	70 93 e7 01 	sts	0x01E7, r23	; 0x8001e7 <_avr_timer_cntcurr+0x1>
     520:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <_avr_timer_cntcurr+0x2>
     524:	90 93 e9 01 	sts	0x01E9, r25	; 0x8001e9 <_avr_timer_cntcurr+0x3>
     528:	08 95       	ret

0000052a <TimerOn>:
     52a:	8b e0       	ldi	r24, 0x0B	; 11
     52c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     530:	8d e7       	ldi	r24, 0x7D	; 125
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     538:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     53c:	82 e0       	ldi	r24, 0x02	; 2
     53e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     542:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     546:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     54a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_avr_timer_M>
     54e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_avr_timer_M+0x1>
     552:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_avr_timer_M+0x2>
     556:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_avr_timer_M+0x3>
     55a:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <_avr_timer_cntcurr>
     55e:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <_avr_timer_cntcurr+0x1>
     562:	a0 93 e8 01 	sts	0x01E8, r26	; 0x8001e8 <_avr_timer_cntcurr+0x2>
     566:	b0 93 e9 01 	sts	0x01E9, r27	; 0x8001e9 <_avr_timer_cntcurr+0x3>
     56a:	8f b7       	in	r24, 0x3f	; 63
     56c:	80 68       	ori	r24, 0x80	; 128
     56e:	8f bf       	out	0x3f, r24	; 63
     570:	08 95       	ret

00000572 <__vector_13>:
     572:	1f 92       	push	r1
     574:	0f 92       	push	r0
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	0f 92       	push	r0
     57a:	11 24       	eor	r1, r1
     57c:	8f 93       	push	r24
     57e:	9f 93       	push	r25
     580:	af 93       	push	r26
     582:	bf 93       	push	r27
     584:	80 91 e6 01 	lds	r24, 0x01E6	; 0x8001e6 <_avr_timer_cntcurr>
     588:	90 91 e7 01 	lds	r25, 0x01E7	; 0x8001e7 <_avr_timer_cntcurr+0x1>
     58c:	a0 91 e8 01 	lds	r26, 0x01E8	; 0x8001e8 <_avr_timer_cntcurr+0x2>
     590:	b0 91 e9 01 	lds	r27, 0x01E9	; 0x8001e9 <_avr_timer_cntcurr+0x3>
     594:	01 97       	sbiw	r24, 0x01	; 1
     596:	a1 09       	sbc	r26, r1
     598:	b1 09       	sbc	r27, r1
     59a:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <_avr_timer_cntcurr>
     59e:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <_avr_timer_cntcurr+0x1>
     5a2:	a0 93 e8 01 	sts	0x01E8, r26	; 0x8001e8 <_avr_timer_cntcurr+0x2>
     5a6:	b0 93 e9 01 	sts	0x01E9, r27	; 0x8001e9 <_avr_timer_cntcurr+0x3>
     5aa:	89 2b       	or	r24, r25
     5ac:	8a 2b       	or	r24, r26
     5ae:	8b 2b       	or	r24, r27
     5b0:	99 f4       	brne	.+38     	; 0x5d8 <__vector_13+0x66>
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <TimerFlag>
     5b8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_avr_timer_M>
     5bc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_avr_timer_M+0x1>
     5c0:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_avr_timer_M+0x2>
     5c4:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_avr_timer_M+0x3>
     5c8:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <_avr_timer_cntcurr>
     5cc:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <_avr_timer_cntcurr+0x1>
     5d0:	a0 93 e8 01 	sts	0x01E8, r26	; 0x8001e8 <_avr_timer_cntcurr+0x2>
     5d4:	b0 93 e9 01 	sts	0x01E9, r27	; 0x8001e9 <_avr_timer_cntcurr+0x3>
     5d8:	bf 91       	pop	r27
     5da:	af 91       	pop	r26
     5dc:	9f 91       	pop	r25
     5de:	8f 91       	pop	r24
     5e0:	0f 90       	pop	r0
     5e2:	0f be       	out	0x3f, r0	; 63
     5e4:	0f 90       	pop	r0
     5e6:	1f 90       	pop	r1
     5e8:	18 95       	reti

000005ea <hsvtorgb>:
     5ea:	a8 e0       	ldi	r26, 0x08	; 8
     5ec:	b0 e0       	ldi	r27, 0x00	; 0
     5ee:	eb ef       	ldi	r30, 0xFB	; 251
     5f0:	f2 e0       	ldi	r31, 0x02	; 2
     5f2:	0c 94 8f 14 	jmp	0x291e	; 0x291e <__prologue_saves__>
     5f6:	6b 01       	movw	r12, r22
     5f8:	7c 01       	movw	r14, r24
     5fa:	29 83       	std	Y+1, r18	; 0x01
     5fc:	64 2f       	mov	r22, r20
     5fe:	70 e0       	ldi	r23, 0x00	; 0
     600:	80 e0       	ldi	r24, 0x00	; 0
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	0e 94 4c 12 	call	0x2498	; 0x2498 <__floatunsisf>
     608:	20 e0       	ldi	r18, 0x00	; 0
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	4f e7       	ldi	r20, 0x7F	; 127
     60e:	53 e4       	ldi	r21, 0x43	; 67
     610:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     614:	4b 01       	movw	r8, r22
     616:	5c 01       	movw	r10, r24
     618:	29 81       	ldd	r18, Y+1	; 0x01
     61a:	62 2f       	mov	r22, r18
     61c:	70 e0       	ldi	r23, 0x00	; 0
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	0e 94 4c 12 	call	0x2498	; 0x2498 <__floatunsisf>
     626:	20 e0       	ldi	r18, 0x00	; 0
     628:	30 e0       	ldi	r19, 0x00	; 0
     62a:	4f e7       	ldi	r20, 0x7F	; 127
     62c:	53 e4       	ldi	r21, 0x43	; 67
     62e:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     632:	68 87       	std	Y+8, r22	; 0x08
     634:	7f 83       	std	Y+7, r23	; 0x07
     636:	18 2f       	mov	r17, r24
     638:	09 2f       	mov	r16, r25
     63a:	c7 01       	movw	r24, r14
     63c:	b6 01       	movw	r22, r12
     63e:	0e 94 4c 12 	call	0x2498	; 0x2498 <__floatunsisf>
     642:	6b 01       	movw	r12, r22
     644:	7c 01       	movw	r14, r24
     646:	20 e0       	ldi	r18, 0x00	; 0
     648:	30 e0       	ldi	r19, 0x00	; 0
     64a:	44 eb       	ldi	r20, 0xB4	; 180
     64c:	53 e4       	ldi	r21, 0x43	; 67
     64e:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     652:	88 23       	and	r24, r24
     654:	0c f0       	brlt	.+2      	; 0x658 <hsvtorgb+0x6e>
     656:	45 c1       	rjmp	.+650    	; 0x8e2 <hsvtorgb+0x2f8>
     658:	20 e0       	ldi	r18, 0x00	; 0
     65a:	30 e0       	ldi	r19, 0x00	; 0
     65c:	40 e7       	ldi	r20, 0x70	; 112
     65e:	52 e4       	ldi	r21, 0x42	; 66
     660:	c7 01       	movw	r24, r14
     662:	b6 01       	movw	r22, r12
     664:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     668:	6b 01       	movw	r12, r22
     66a:	7c 01       	movw	r14, r24
     66c:	0e 94 1b 12 	call	0x2436	; 0x2436 <__fixsfsi>
     670:	0e 94 4e 12 	call	0x249c	; 0x249c <__floatsisf>
     674:	9b 01       	movw	r18, r22
     676:	ac 01       	movw	r20, r24
     678:	c7 01       	movw	r24, r14
     67a:	b6 01       	movw	r22, r12
     67c:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     680:	6b 83       	std	Y+3, r22	; 0x03
     682:	7c 83       	std	Y+4, r23	; 0x04
     684:	8d 83       	std	Y+5, r24	; 0x05
     686:	9e 83       	std	Y+6, r25	; 0x06
     688:	a5 01       	movw	r20, r10
     68a:	94 01       	movw	r18, r8
     68c:	60 e0       	ldi	r22, 0x00	; 0
     68e:	70 e0       	ldi	r23, 0x00	; 0
     690:	80 e8       	ldi	r24, 0x80	; 128
     692:	9f e3       	ldi	r25, 0x3F	; 63
     694:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     698:	28 85       	ldd	r18, Y+8	; 0x08
     69a:	3f 81       	ldd	r19, Y+7	; 0x07
     69c:	41 2f       	mov	r20, r17
     69e:	50 2f       	mov	r21, r16
     6a0:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     6a4:	36 2e       	mov	r3, r22
     6a6:	27 2e       	mov	r2, r23
     6a8:	68 2e       	mov	r6, r24
     6aa:	79 2e       	mov	r7, r25
     6ac:	2b 81       	ldd	r18, Y+3	; 0x03
     6ae:	3c 81       	ldd	r19, Y+4	; 0x04
     6b0:	4d 81       	ldd	r20, Y+5	; 0x05
     6b2:	5e 81       	ldd	r21, Y+6	; 0x06
     6b4:	c5 01       	movw	r24, r10
     6b6:	b4 01       	movw	r22, r8
     6b8:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     6bc:	9b 01       	movw	r18, r22
     6be:	ac 01       	movw	r20, r24
     6c0:	60 e0       	ldi	r22, 0x00	; 0
     6c2:	70 e0       	ldi	r23, 0x00	; 0
     6c4:	80 e8       	ldi	r24, 0x80	; 128
     6c6:	9f e3       	ldi	r25, 0x3F	; 63
     6c8:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     6cc:	28 85       	ldd	r18, Y+8	; 0x08
     6ce:	3f 81       	ldd	r19, Y+7	; 0x07
     6d0:	41 2f       	mov	r20, r17
     6d2:	50 2f       	mov	r21, r16
     6d4:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     6d8:	69 83       	std	Y+1, r22	; 0x01
     6da:	7a 83       	std	Y+2, r23	; 0x02
     6dc:	48 2e       	mov	r4, r24
     6de:	59 2e       	mov	r5, r25
     6e0:	2b 81       	ldd	r18, Y+3	; 0x03
     6e2:	3c 81       	ldd	r19, Y+4	; 0x04
     6e4:	4d 81       	ldd	r20, Y+5	; 0x05
     6e6:	5e 81       	ldd	r21, Y+6	; 0x06
     6e8:	60 e0       	ldi	r22, 0x00	; 0
     6ea:	70 e0       	ldi	r23, 0x00	; 0
     6ec:	80 e8       	ldi	r24, 0x80	; 128
     6ee:	9f e3       	ldi	r25, 0x3F	; 63
     6f0:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     6f4:	a5 01       	movw	r20, r10
     6f6:	94 01       	movw	r18, r8
     6f8:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     6fc:	9b 01       	movw	r18, r22
     6fe:	ac 01       	movw	r20, r24
     700:	60 e0       	ldi	r22, 0x00	; 0
     702:	70 e0       	ldi	r23, 0x00	; 0
     704:	80 e8       	ldi	r24, 0x80	; 128
     706:	9f e3       	ldi	r25, 0x3F	; 63
     708:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     70c:	28 85       	ldd	r18, Y+8	; 0x08
     70e:	3f 81       	ldd	r19, Y+7	; 0x07
     710:	41 2f       	mov	r20, r17
     712:	50 2f       	mov	r21, r16
     714:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     718:	a6 2e       	mov	r10, r22
     71a:	b7 2e       	mov	r11, r23
     71c:	98 2e       	mov	r9, r24
     71e:	89 2e       	mov	r8, r25
     720:	20 e0       	ldi	r18, 0x00	; 0
     722:	30 e0       	ldi	r19, 0x00	; 0
     724:	a9 01       	movw	r20, r18
     726:	c7 01       	movw	r24, r14
     728:	b6 01       	movw	r22, r12
     72a:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     72e:	88 23       	and	r24, r24
     730:	5c f0       	brlt	.+22     	; 0x748 <hsvtorgb+0x15e>
     732:	20 e0       	ldi	r18, 0x00	; 0
     734:	30 e0       	ldi	r19, 0x00	; 0
     736:	40 e8       	ldi	r20, 0x80	; 128
     738:	5f e3       	ldi	r21, 0x3F	; 63
     73a:	c7 01       	movw	r24, r14
     73c:	b6 01       	movw	r22, r12
     73e:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     742:	88 23       	and	r24, r24
     744:	0c f4       	brge	.+2      	; 0x748 <hsvtorgb+0x15e>
     746:	7d c0       	rjmp	.+250    	; 0x842 <hsvtorgb+0x258>
     748:	20 e0       	ldi	r18, 0x00	; 0
     74a:	30 e0       	ldi	r19, 0x00	; 0
     74c:	40 e8       	ldi	r20, 0x80	; 128
     74e:	5f e3       	ldi	r21, 0x3F	; 63
     750:	c7 01       	movw	r24, r14
     752:	b6 01       	movw	r22, r12
     754:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     758:	88 23       	and	r24, r24
     75a:	5c f0       	brlt	.+22     	; 0x772 <hsvtorgb+0x188>
     75c:	20 e0       	ldi	r18, 0x00	; 0
     75e:	30 e0       	ldi	r19, 0x00	; 0
     760:	40 e0       	ldi	r20, 0x00	; 0
     762:	50 e4       	ldi	r21, 0x40	; 64
     764:	c7 01       	movw	r24, r14
     766:	b6 01       	movw	r22, r12
     768:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     76c:	88 23       	and	r24, r24
     76e:	0c f4       	brge	.+2      	; 0x772 <hsvtorgb+0x188>
     770:	d4 c0       	rjmp	.+424    	; 0x91a <hsvtorgb+0x330>
     772:	20 e0       	ldi	r18, 0x00	; 0
     774:	30 e0       	ldi	r19, 0x00	; 0
     776:	40 e0       	ldi	r20, 0x00	; 0
     778:	50 e4       	ldi	r21, 0x40	; 64
     77a:	c7 01       	movw	r24, r14
     77c:	b6 01       	movw	r22, r12
     77e:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     782:	88 23       	and	r24, r24
     784:	5c f0       	brlt	.+22     	; 0x79c <hsvtorgb+0x1b2>
     786:	20 e0       	ldi	r18, 0x00	; 0
     788:	30 e0       	ldi	r19, 0x00	; 0
     78a:	40 e4       	ldi	r20, 0x40	; 64
     78c:	50 e4       	ldi	r21, 0x40	; 64
     78e:	c7 01       	movw	r24, r14
     790:	b6 01       	movw	r22, r12
     792:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     796:	88 23       	and	r24, r24
     798:	0c f4       	brge	.+2      	; 0x79c <hsvtorgb+0x1b2>
     79a:	5e c0       	rjmp	.+188    	; 0x858 <hsvtorgb+0x26e>
     79c:	20 e0       	ldi	r18, 0x00	; 0
     79e:	30 e0       	ldi	r19, 0x00	; 0
     7a0:	40 e4       	ldi	r20, 0x40	; 64
     7a2:	50 e4       	ldi	r21, 0x40	; 64
     7a4:	c7 01       	movw	r24, r14
     7a6:	b6 01       	movw	r22, r12
     7a8:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     7ac:	88 23       	and	r24, r24
     7ae:	5c f0       	brlt	.+22     	; 0x7c6 <hsvtorgb+0x1dc>
     7b0:	20 e0       	ldi	r18, 0x00	; 0
     7b2:	30 e0       	ldi	r19, 0x00	; 0
     7b4:	40 e8       	ldi	r20, 0x80	; 128
     7b6:	50 e4       	ldi	r21, 0x40	; 64
     7b8:	c7 01       	movw	r24, r14
     7ba:	b6 01       	movw	r22, r12
     7bc:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     7c0:	88 23       	and	r24, r24
     7c2:	0c f4       	brge	.+2      	; 0x7c6 <hsvtorgb+0x1dc>
     7c4:	52 c0       	rjmp	.+164    	; 0x86a <hsvtorgb+0x280>
     7c6:	20 e0       	ldi	r18, 0x00	; 0
     7c8:	30 e0       	ldi	r19, 0x00	; 0
     7ca:	40 e8       	ldi	r20, 0x80	; 128
     7cc:	50 e4       	ldi	r21, 0x40	; 64
     7ce:	c7 01       	movw	r24, r14
     7d0:	b6 01       	movw	r22, r12
     7d2:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     7d6:	88 23       	and	r24, r24
     7d8:	5c f0       	brlt	.+22     	; 0x7f0 <hsvtorgb+0x206>
     7da:	20 e0       	ldi	r18, 0x00	; 0
     7dc:	30 e0       	ldi	r19, 0x00	; 0
     7de:	40 ea       	ldi	r20, 0xA0	; 160
     7e0:	50 e4       	ldi	r21, 0x40	; 64
     7e2:	c7 01       	movw	r24, r14
     7e4:	b6 01       	movw	r22, r12
     7e6:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     7ea:	88 23       	and	r24, r24
     7ec:	0c f4       	brge	.+2      	; 0x7f0 <hsvtorgb+0x206>
     7ee:	4e c0       	rjmp	.+156    	; 0x88c <hsvtorgb+0x2a2>
     7f0:	20 e0       	ldi	r18, 0x00	; 0
     7f2:	30 e0       	ldi	r19, 0x00	; 0
     7f4:	40 ea       	ldi	r20, 0xA0	; 160
     7f6:	50 e4       	ldi	r21, 0x40	; 64
     7f8:	c7 01       	movw	r24, r14
     7fa:	b6 01       	movw	r22, r12
     7fc:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     800:	88 23       	and	r24, r24
     802:	0c f4       	brge	.+2      	; 0x806 <hsvtorgb+0x21c>
     804:	54 c0       	rjmp	.+168    	; 0x8ae <hsvtorgb+0x2c4>
     806:	20 e0       	ldi	r18, 0x00	; 0
     808:	30 e0       	ldi	r19, 0x00	; 0
     80a:	40 ec       	ldi	r20, 0xC0	; 192
     80c:	50 e4       	ldi	r21, 0x40	; 64
     80e:	c7 01       	movw	r24, r14
     810:	b6 01       	movw	r22, r12
     812:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     816:	88 23       	and	r24, r24
     818:	0c f0       	brlt	.+2      	; 0x81c <hsvtorgb+0x232>
     81a:	56 c0       	rjmp	.+172    	; 0x8c8 <hsvtorgb+0x2de>
     81c:	39 81       	ldd	r19, Y+1	; 0x01
     81e:	2a 81       	ldd	r18, Y+2	; 0x02
     820:	94 2d       	mov	r25, r4
     822:	85 2d       	mov	r24, r5
     824:	48 85       	ldd	r20, Y+8	; 0x08
     826:	49 83       	std	Y+1, r20	; 0x01
     828:	4f 81       	ldd	r20, Y+7	; 0x07
     82a:	4a 83       	std	Y+2, r20	; 0x02
     82c:	41 2e       	mov	r4, r17
     82e:	50 2e       	mov	r5, r16
     830:	38 86       	std	Y+8, r3	; 0x08
     832:	2f 82       	std	Y+7, r2	; 0x07
     834:	16 2d       	mov	r17, r6
     836:	07 2d       	mov	r16, r7
     838:	33 2e       	mov	r3, r19
     83a:	22 2e       	mov	r2, r18
     83c:	69 2e       	mov	r6, r25
     83e:	78 2e       	mov	r7, r24
     840:	6c c0       	rjmp	.+216    	; 0x91a <hsvtorgb+0x330>
     842:	88 85       	ldd	r24, Y+8	; 0x08
     844:	89 83       	std	Y+1, r24	; 0x01
     846:	2f 81       	ldd	r18, Y+7	; 0x07
     848:	2a 83       	std	Y+2, r18	; 0x02
     84a:	41 2e       	mov	r4, r17
     84c:	50 2e       	mov	r5, r16
     84e:	a8 86       	std	Y+8, r10	; 0x08
     850:	bf 82       	std	Y+7, r11	; 0x07
     852:	19 2d       	mov	r17, r9
     854:	08 2d       	mov	r16, r8
     856:	61 c0       	rjmp	.+194    	; 0x91a <hsvtorgb+0x330>
     858:	39 82       	std	Y+1, r3	; 0x01
     85a:	2a 82       	std	Y+2, r2	; 0x02
     85c:	46 2c       	mov	r4, r6
     85e:	57 2c       	mov	r5, r7
     860:	3a 2c       	mov	r3, r10
     862:	2b 2c       	mov	r2, r11
     864:	69 2c       	mov	r6, r9
     866:	78 2c       	mov	r7, r8
     868:	58 c0       	rjmp	.+176    	; 0x91a <hsvtorgb+0x330>
     86a:	39 81       	ldd	r19, Y+1	; 0x01
     86c:	2a 81       	ldd	r18, Y+2	; 0x02
     86e:	94 2d       	mov	r25, r4
     870:	85 2d       	mov	r24, r5
     872:	39 82       	std	Y+1, r3	; 0x01
     874:	2a 82       	std	Y+2, r2	; 0x02
     876:	46 2c       	mov	r4, r6
     878:	57 2c       	mov	r5, r7
     87a:	38 84       	ldd	r3, Y+8	; 0x08
     87c:	2f 80       	ldd	r2, Y+7	; 0x07
     87e:	61 2e       	mov	r6, r17
     880:	70 2e       	mov	r7, r16
     882:	38 87       	std	Y+8, r19	; 0x08
     884:	2f 83       	std	Y+7, r18	; 0x07
     886:	19 2f       	mov	r17, r25
     888:	08 2f       	mov	r16, r24
     88a:	47 c0       	rjmp	.+142    	; 0x91a <hsvtorgb+0x330>
     88c:	38 85       	ldd	r19, Y+8	; 0x08
     88e:	2f 81       	ldd	r18, Y+7	; 0x07
     890:	91 2f       	mov	r25, r17
     892:	80 2f       	mov	r24, r16
     894:	38 86       	std	Y+8, r3	; 0x08
     896:	2f 82       	std	Y+7, r2	; 0x07
     898:	16 2d       	mov	r17, r6
     89a:	07 2d       	mov	r16, r7
     89c:	33 2e       	mov	r3, r19
     89e:	22 2e       	mov	r2, r18
     8a0:	69 2e       	mov	r6, r25
     8a2:	78 2e       	mov	r7, r24
     8a4:	a9 82       	std	Y+1, r10	; 0x01
     8a6:	ba 82       	std	Y+2, r11	; 0x02
     8a8:	49 2c       	mov	r4, r9
     8aa:	58 2c       	mov	r5, r8
     8ac:	36 c0       	rjmp	.+108    	; 0x91a <hsvtorgb+0x330>
     8ae:	31 2c       	mov	r3, r1
     8b0:	21 2c       	mov	r2, r1
     8b2:	61 2c       	mov	r6, r1
     8b4:	71 2c       	mov	r7, r1
     8b6:	18 86       	std	Y+8, r1	; 0x08
     8b8:	1f 82       	std	Y+7, r1	; 0x07
     8ba:	10 e0       	ldi	r17, 0x00	; 0
     8bc:	00 e0       	ldi	r16, 0x00	; 0
     8be:	19 82       	std	Y+1, r1	; 0x01
     8c0:	1a 82       	std	Y+2, r1	; 0x02
     8c2:	41 2c       	mov	r4, r1
     8c4:	51 2c       	mov	r5, r1
     8c6:	29 c0       	rjmp	.+82     	; 0x91a <hsvtorgb+0x330>
     8c8:	31 2c       	mov	r3, r1
     8ca:	21 2c       	mov	r2, r1
     8cc:	61 2c       	mov	r6, r1
     8ce:	71 2c       	mov	r7, r1
     8d0:	18 86       	std	Y+8, r1	; 0x08
     8d2:	1f 82       	std	Y+7, r1	; 0x07
     8d4:	10 e0       	ldi	r17, 0x00	; 0
     8d6:	00 e0       	ldi	r16, 0x00	; 0
     8d8:	19 82       	std	Y+1, r1	; 0x01
     8da:	1a 82       	std	Y+2, r1	; 0x02
     8dc:	41 2c       	mov	r4, r1
     8de:	51 2c       	mov	r5, r1
     8e0:	1c c0       	rjmp	.+56     	; 0x91a <hsvtorgb+0x330>
     8e2:	a5 01       	movw	r20, r10
     8e4:	94 01       	movw	r18, r8
     8e6:	60 e0       	ldi	r22, 0x00	; 0
     8e8:	70 e0       	ldi	r23, 0x00	; 0
     8ea:	80 e8       	ldi	r24, 0x80	; 128
     8ec:	9f e3       	ldi	r25, 0x3F	; 63
     8ee:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     8f2:	28 85       	ldd	r18, Y+8	; 0x08
     8f4:	3f 81       	ldd	r19, Y+7	; 0x07
     8f6:	41 2f       	mov	r20, r17
     8f8:	50 2f       	mov	r21, r16
     8fa:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     8fe:	36 2e       	mov	r3, r22
     900:	27 2e       	mov	r2, r23
     902:	68 2e       	mov	r6, r24
     904:	79 2e       	mov	r7, r25
     906:	48 85       	ldd	r20, Y+8	; 0x08
     908:	49 83       	std	Y+1, r20	; 0x01
     90a:	8f 81       	ldd	r24, Y+7	; 0x07
     90c:	8a 83       	std	Y+2, r24	; 0x02
     90e:	41 2e       	mov	r4, r17
     910:	50 2e       	mov	r5, r16
     912:	38 86       	std	Y+8, r3	; 0x08
     914:	2f 82       	std	Y+7, r2	; 0x07
     916:	16 2d       	mov	r17, r6
     918:	07 2d       	mov	r16, r7
     91a:	20 e0       	ldi	r18, 0x00	; 0
     91c:	30 e0       	ldi	r19, 0x00	; 0
     91e:	4f e7       	ldi	r20, 0x7F	; 127
     920:	53 e4       	ldi	r21, 0x43	; 67
     922:	69 81       	ldd	r22, Y+1	; 0x01
     924:	7a 81       	ldd	r23, Y+2	; 0x02
     926:	84 2d       	mov	r24, r4
     928:	95 2d       	mov	r25, r5
     92a:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     92e:	0e 94 20 12 	call	0x2440	; 0x2440 <__fixunssfsi>
     932:	f6 2e       	mov	r15, r22
     934:	20 e0       	ldi	r18, 0x00	; 0
     936:	30 e0       	ldi	r19, 0x00	; 0
     938:	4f e7       	ldi	r20, 0x7F	; 127
     93a:	53 e4       	ldi	r21, 0x43	; 67
     93c:	68 85       	ldd	r22, Y+8	; 0x08
     93e:	7f 81       	ldd	r23, Y+7	; 0x07
     940:	81 2f       	mov	r24, r17
     942:	90 2f       	mov	r25, r16
     944:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     948:	0e 94 20 12 	call	0x2440	; 0x2440 <__fixunssfsi>
     94c:	69 83       	std	Y+1, r22	; 0x01
     94e:	20 e0       	ldi	r18, 0x00	; 0
     950:	30 e0       	ldi	r19, 0x00	; 0
     952:	4f e7       	ldi	r20, 0x7F	; 127
     954:	53 e4       	ldi	r21, 0x43	; 67
     956:	63 2d       	mov	r22, r3
     958:	72 2d       	mov	r23, r2
     95a:	86 2d       	mov	r24, r6
     95c:	97 2d       	mov	r25, r7
     95e:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     962:	0e 94 20 12 	call	0x2440	; 0x2440 <__fixunssfsi>
     966:	86 2f       	mov	r24, r22
     968:	6f 2d       	mov	r22, r15
     96a:	79 81       	ldd	r23, Y+1	; 0x01
     96c:	28 96       	adiw	r28, 0x08	; 8
     96e:	e2 e1       	ldi	r30, 0x12	; 18
     970:	0c 94 ab 14 	jmp	0x2956	; 0x2956 <__epilogue_restores__>

00000974 <rgbtohsv>:
     974:	a7 e1       	ldi	r26, 0x17	; 23
     976:	b0 e0       	ldi	r27, 0x00	; 0
     978:	e0 ec       	ldi	r30, 0xC0	; 192
     97a:	f4 e0       	ldi	r31, 0x04	; 4
     97c:	0c 94 8f 14 	jmp	0x291e	; 0x291e <__prologue_saves__>
     980:	e7 2e       	mov	r14, r23
     982:	f8 2e       	mov	r15, r24
     984:	70 e0       	ldi	r23, 0x00	; 0
     986:	80 e0       	ldi	r24, 0x00	; 0
     988:	90 e0       	ldi	r25, 0x00	; 0
     98a:	0e 94 4c 12 	call	0x2498	; 0x2498 <__floatunsisf>
     98e:	20 e0       	ldi	r18, 0x00	; 0
     990:	30 e0       	ldi	r19, 0x00	; 0
     992:	4f e7       	ldi	r20, 0x7F	; 127
     994:	53 e4       	ldi	r21, 0x43	; 67
     996:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     99a:	26 2e       	mov	r2, r22
     99c:	37 2e       	mov	r3, r23
     99e:	08 2f       	mov	r16, r24
     9a0:	19 2f       	mov	r17, r25
     9a2:	6e 2d       	mov	r22, r14
     9a4:	70 e0       	ldi	r23, 0x00	; 0
     9a6:	80 e0       	ldi	r24, 0x00	; 0
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	0e 94 4c 12 	call	0x2498	; 0x2498 <__floatunsisf>
     9ae:	20 e0       	ldi	r18, 0x00	; 0
     9b0:	30 e0       	ldi	r19, 0x00	; 0
     9b2:	4f e7       	ldi	r20, 0x7F	; 127
     9b4:	53 e4       	ldi	r21, 0x43	; 67
     9b6:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     9ba:	e6 2e       	mov	r14, r22
     9bc:	d7 2e       	mov	r13, r23
     9be:	c8 2e       	mov	r12, r24
     9c0:	a9 2e       	mov	r10, r25
     9c2:	6f 2d       	mov	r22, r15
     9c4:	70 e0       	ldi	r23, 0x00	; 0
     9c6:	80 e0       	ldi	r24, 0x00	; 0
     9c8:	90 e0       	ldi	r25, 0x00	; 0
     9ca:	0e 94 4c 12 	call	0x2498	; 0x2498 <__floatunsisf>
     9ce:	20 e0       	ldi	r18, 0x00	; 0
     9d0:	30 e0       	ldi	r19, 0x00	; 0
     9d2:	4f e7       	ldi	r20, 0x7F	; 127
     9d4:	53 e4       	ldi	r21, 0x43	; 67
     9d6:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     9da:	46 2e       	mov	r4, r22
     9dc:	67 2e       	mov	r6, r23
     9de:	88 2e       	mov	r8, r24
     9e0:	9b 87       	std	Y+11, r25	; 0x0b
     9e2:	2e 2d       	mov	r18, r14
     9e4:	3d 2d       	mov	r19, r13
     9e6:	4c 2d       	mov	r20, r12
     9e8:	5a 2d       	mov	r21, r10
     9ea:	62 2d       	mov	r22, r2
     9ec:	73 2d       	mov	r23, r3
     9ee:	80 2f       	mov	r24, r16
     9f0:	91 2f       	mov	r25, r17
     9f2:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     9f6:	88 23       	and	r24, r24
     9f8:	94 f4       	brge	.+36     	; 0xa1e <rgbtohsv+0xaa>
     9fa:	24 2d       	mov	r18, r4
     9fc:	36 2d       	mov	r19, r6
     9fe:	48 2d       	mov	r20, r8
     a00:	5b 85       	ldd	r21, Y+11	; 0x0b
     a02:	6e 2d       	mov	r22, r14
     a04:	7d 2d       	mov	r23, r13
     a06:	8c 2d       	mov	r24, r12
     a08:	9a 2d       	mov	r25, r10
     a0a:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     a0e:	88 23       	and	r24, r24
     a10:	0c f4       	brge	.+2      	; 0xa14 <rgbtohsv+0xa0>
     a12:	57 c1       	rjmp	.+686    	; 0xcc2 <rgbtohsv+0x34e>
     a14:	5e 2c       	mov	r5, r14
     a16:	7d 2c       	mov	r7, r13
     a18:	9c 2c       	mov	r9, r12
     a1a:	ba 2c       	mov	r11, r10
     a1c:	1d c0       	rjmp	.+58     	; 0xa58 <rgbtohsv+0xe4>
     a1e:	24 2d       	mov	r18, r4
     a20:	36 2d       	mov	r19, r6
     a22:	48 2d       	mov	r20, r8
     a24:	5b 85       	ldd	r21, Y+11	; 0x0b
     a26:	62 2d       	mov	r22, r2
     a28:	73 2d       	mov	r23, r3
     a2a:	80 2f       	mov	r24, r16
     a2c:	91 2f       	mov	r25, r17
     a2e:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     a32:	88 23       	and	r24, r24
     a34:	0c f4       	brge	.+2      	; 0xa38 <rgbtohsv+0xc4>
     a36:	4a c1       	rjmp	.+660    	; 0xccc <rgbtohsv+0x358>
     a38:	2e 2d       	mov	r18, r14
     a3a:	3d 2d       	mov	r19, r13
     a3c:	4c 2d       	mov	r20, r12
     a3e:	5a 2d       	mov	r21, r10
     a40:	62 2d       	mov	r22, r2
     a42:	73 2d       	mov	r23, r3
     a44:	80 2f       	mov	r24, r16
     a46:	91 2f       	mov	r25, r17
     a48:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     a4c:	88 23       	and	r24, r24
     a4e:	ac f4       	brge	.+42     	; 0xa7a <rgbtohsv+0x106>
     a50:	52 2c       	mov	r5, r2
     a52:	73 2c       	mov	r7, r3
     a54:	90 2e       	mov	r9, r16
     a56:	b1 2e       	mov	r11, r17
     a58:	24 2d       	mov	r18, r4
     a5a:	36 2d       	mov	r19, r6
     a5c:	48 2d       	mov	r20, r8
     a5e:	5b 85       	ldd	r21, Y+11	; 0x0b
     a60:	62 2d       	mov	r22, r2
     a62:	73 2d       	mov	r23, r3
     a64:	80 2f       	mov	r24, r16
     a66:	91 2f       	mov	r25, r17
     a68:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     a6c:	88 23       	and	r24, r24
     a6e:	d4 f0       	brlt	.+52     	; 0xaa4 <rgbtohsv+0x130>
     a70:	4f 82       	std	Y+7, r4	; 0x07
     a72:	6c 86       	std	Y+12, r6	; 0x0c
     a74:	88 8a       	std	Y+16, r8	; 0x10
     a76:	fb 84       	ldd	r15, Y+11	; 0x0b
     a78:	27 c0       	rjmp	.+78     	; 0xac8 <rgbtohsv+0x154>
     a7a:	52 2c       	mov	r5, r2
     a7c:	73 2c       	mov	r7, r3
     a7e:	90 2e       	mov	r9, r16
     a80:	b1 2e       	mov	r11, r17
     a82:	24 2d       	mov	r18, r4
     a84:	36 2d       	mov	r19, r6
     a86:	48 2d       	mov	r20, r8
     a88:	5b 85       	ldd	r21, Y+11	; 0x0b
     a8a:	6e 2d       	mov	r22, r14
     a8c:	7d 2d       	mov	r23, r13
     a8e:	8c 2d       	mov	r24, r12
     a90:	9a 2d       	mov	r25, r10
     a92:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     a96:	88 23       	and	r24, r24
     a98:	54 f0       	brlt	.+20     	; 0xaae <rgbtohsv+0x13a>
     a9a:	4f 82       	std	Y+7, r4	; 0x07
     a9c:	6c 86       	std	Y+12, r6	; 0x0c
     a9e:	88 8a       	std	Y+16, r8	; 0x10
     aa0:	fb 84       	ldd	r15, Y+11	; 0x0b
     aa2:	12 c0       	rjmp	.+36     	; 0xac8 <rgbtohsv+0x154>
     aa4:	2f 82       	std	Y+7, r2	; 0x07
     aa6:	3c 86       	std	Y+12, r3	; 0x0c
     aa8:	08 8b       	std	Y+16, r16	; 0x10
     aaa:	f1 2e       	mov	r15, r17
     aac:	0d c0       	rjmp	.+26     	; 0xac8 <rgbtohsv+0x154>
     aae:	ef 82       	std	Y+7, r14	; 0x07
     ab0:	dc 86       	std	Y+12, r13	; 0x0c
     ab2:	c8 8a       	std	Y+16, r12	; 0x10
     ab4:	fa 2c       	mov	r15, r10
     ab6:	08 c0       	rjmp	.+16     	; 0xac8 <rgbtohsv+0x154>
     ab8:	54 2c       	mov	r5, r4
     aba:	76 2c       	mov	r7, r6
     abc:	98 2c       	mov	r9, r8
     abe:	bb 84       	ldd	r11, Y+11	; 0x0b
     ac0:	2f 82       	std	Y+7, r2	; 0x07
     ac2:	3c 86       	std	Y+12, r3	; 0x0c
     ac4:	08 8b       	std	Y+16, r16	; 0x10
     ac6:	f1 2e       	mov	r15, r17
     ac8:	20 e0       	ldi	r18, 0x00	; 0
     aca:	30 e0       	ldi	r19, 0x00	; 0
     acc:	4f e7       	ldi	r20, 0x7F	; 127
     ace:	53 e4       	ldi	r21, 0x43	; 67
     ad0:	65 2d       	mov	r22, r5
     ad2:	77 2d       	mov	r23, r7
     ad4:	89 2d       	mov	r24, r9
     ad6:	9b 2d       	mov	r25, r11
     ad8:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     adc:	6c 8b       	std	Y+20, r22	; 0x14
     ade:	7d 8b       	std	Y+21, r23	; 0x15
     ae0:	8e 8b       	std	Y+22, r24	; 0x16
     ae2:	9f 8b       	std	Y+23, r25	; 0x17
     ae4:	2f 81       	ldd	r18, Y+7	; 0x07
     ae6:	3c 85       	ldd	r19, Y+12	; 0x0c
     ae8:	48 89       	ldd	r20, Y+16	; 0x10
     aea:	5f 2d       	mov	r21, r15
     aec:	65 2d       	mov	r22, r5
     aee:	77 2d       	mov	r23, r7
     af0:	89 2d       	mov	r24, r9
     af2:	9b 2d       	mov	r25, r11
     af4:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     af8:	6f 83       	std	Y+7, r22	; 0x07
     afa:	78 87       	std	Y+8, r23	; 0x08
     afc:	89 87       	std	Y+9, r24	; 0x09
     afe:	9a 87       	std	Y+10, r25	; 0x0a
     b00:	20 e0       	ldi	r18, 0x00	; 0
     b02:	30 e0       	ldi	r19, 0x00	; 0
     b04:	a9 01       	movw	r20, r18
     b06:	65 2d       	mov	r22, r5
     b08:	77 2d       	mov	r23, r7
     b0a:	89 2d       	mov	r24, r9
     b0c:	9b 2d       	mov	r25, r11
     b0e:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     b12:	18 16       	cp	r1, r24
     b14:	6c f5       	brge	.+90     	; 0xb70 <rgbtohsv+0x1fc>
     b16:	25 2d       	mov	r18, r5
     b18:	37 2d       	mov	r19, r7
     b1a:	49 2d       	mov	r20, r9
     b1c:	5b 2d       	mov	r21, r11
     b1e:	6f 81       	ldd	r22, Y+7	; 0x07
     b20:	78 85       	ldd	r23, Y+8	; 0x08
     b22:	89 85       	ldd	r24, Y+9	; 0x09
     b24:	9a 85       	ldd	r25, Y+10	; 0x0a
     b26:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     b2a:	20 e0       	ldi	r18, 0x00	; 0
     b2c:	30 e0       	ldi	r19, 0x00	; 0
     b2e:	4f e7       	ldi	r20, 0x7F	; 127
     b30:	53 e4       	ldi	r21, 0x43	; 67
     b32:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     b36:	68 8b       	std	Y+16, r22	; 0x10
     b38:	79 8b       	std	Y+17, r23	; 0x11
     b3a:	8a 8b       	std	Y+18, r24	; 0x12
     b3c:	9b 8b       	std	Y+19, r25	; 0x13
     b3e:	2f e6       	ldi	r18, 0x6F	; 111
     b40:	32 e1       	ldi	r19, 0x12	; 18
     b42:	43 e8       	ldi	r20, 0x83	; 131
     b44:	5a e3       	ldi	r21, 0x3A	; 58
     b46:	65 2d       	mov	r22, r5
     b48:	77 2d       	mov	r23, r7
     b4a:	89 2d       	mov	r24, r9
     b4c:	9b 2d       	mov	r25, r11
     b4e:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     b52:	6c 87       	std	Y+12, r22	; 0x0c
     b54:	7d 87       	std	Y+13, r23	; 0x0d
     b56:	8e 87       	std	Y+14, r24	; 0x0e
     b58:	9f 87       	std	Y+15, r25	; 0x0f
     b5a:	9b 01       	movw	r18, r22
     b5c:	ac 01       	movw	r20, r24
     b5e:	62 2d       	mov	r22, r2
     b60:	73 2d       	mov	r23, r3
     b62:	80 2f       	mov	r24, r16
     b64:	91 2f       	mov	r25, r17
     b66:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     b6a:	18 16       	cp	r1, r24
     b6c:	44 f0       	brlt	.+16     	; 0xb7e <rgbtohsv+0x20a>
     b6e:	2c c0       	rjmp	.+88     	; 0xbc8 <rgbtohsv+0x254>
     b70:	19 82       	std	Y+1, r1	; 0x01
     b72:	1a 82       	std	Y+2, r1	; 0x02
     b74:	1b 82       	std	Y+3, r1	; 0x03
     b76:	1c 82       	std	Y+4, r1	; 0x04
     b78:	1d 82       	std	Y+5, r1	; 0x05
     b7a:	1e 82       	std	Y+6, r1	; 0x06
     b7c:	b9 c0       	rjmp	.+370    	; 0xcf0 <rgbtohsv+0x37c>
     b7e:	2f e6       	ldi	r18, 0x6F	; 111
     b80:	32 e1       	ldi	r19, 0x12	; 18
     b82:	43 e8       	ldi	r20, 0x83	; 131
     b84:	5a e3       	ldi	r21, 0x3A	; 58
     b86:	65 2d       	mov	r22, r5
     b88:	77 2d       	mov	r23, r7
     b8a:	89 2d       	mov	r24, r9
     b8c:	9b 2d       	mov	r25, r11
     b8e:	0e 94 e6 10 	call	0x21cc	; 0x21cc <__addsf3>
     b92:	9b 01       	movw	r18, r22
     b94:	ac 01       	movw	r20, r24
     b96:	62 2d       	mov	r22, r2
     b98:	73 2d       	mov	r23, r3
     b9a:	80 2f       	mov	r24, r16
     b9c:	91 2f       	mov	r25, r17
     b9e:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     ba2:	88 23       	and	r24, r24
     ba4:	8c f4       	brge	.+34     	; 0xbc8 <rgbtohsv+0x254>
     ba6:	24 2d       	mov	r18, r4
     ba8:	36 2d       	mov	r19, r6
     baa:	48 2d       	mov	r20, r8
     bac:	5b 85       	ldd	r21, Y+11	; 0x0b
     bae:	6e 2d       	mov	r22, r14
     bb0:	7d 2d       	mov	r23, r13
     bb2:	8c 2d       	mov	r24, r12
     bb4:	9a 2d       	mov	r25, r10
     bb6:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     bba:	2f 81       	ldd	r18, Y+7	; 0x07
     bbc:	38 85       	ldd	r19, Y+8	; 0x08
     bbe:	49 85       	ldd	r20, Y+9	; 0x09
     bc0:	5a 85       	ldd	r21, Y+10	; 0x0a
     bc2:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     bc6:	4d c0       	rjmp	.+154    	; 0xc62 <rgbtohsv+0x2ee>
     bc8:	2c 85       	ldd	r18, Y+12	; 0x0c
     bca:	3d 85       	ldd	r19, Y+13	; 0x0d
     bcc:	4e 85       	ldd	r20, Y+14	; 0x0e
     bce:	5f 85       	ldd	r21, Y+15	; 0x0f
     bd0:	6e 2d       	mov	r22, r14
     bd2:	7d 2d       	mov	r23, r13
     bd4:	8c 2d       	mov	r24, r12
     bd6:	9a 2d       	mov	r25, r10
     bd8:	0e 94 5c 13 	call	0x26b8	; 0x26b8 <__gesf2>
     bdc:	18 16       	cp	r1, r24
     bde:	5c f5       	brge	.+86     	; 0xc36 <rgbtohsv+0x2c2>
     be0:	2f e6       	ldi	r18, 0x6F	; 111
     be2:	32 e1       	ldi	r19, 0x12	; 18
     be4:	43 e8       	ldi	r20, 0x83	; 131
     be6:	5a e3       	ldi	r21, 0x3A	; 58
     be8:	65 2d       	mov	r22, r5
     bea:	77 2d       	mov	r23, r7
     bec:	89 2d       	mov	r24, r9
     bee:	9b 2d       	mov	r25, r11
     bf0:	0e 94 e6 10 	call	0x21cc	; 0x21cc <__addsf3>
     bf4:	9b 01       	movw	r18, r22
     bf6:	ac 01       	movw	r20, r24
     bf8:	6e 2d       	mov	r22, r14
     bfa:	7d 2d       	mov	r23, r13
     bfc:	8c 2d       	mov	r24, r12
     bfe:	9a 2d       	mov	r25, r10
     c00:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     c04:	88 23       	and	r24, r24
     c06:	bc f4       	brge	.+46     	; 0xc36 <rgbtohsv+0x2c2>
     c08:	22 2d       	mov	r18, r2
     c0a:	33 2d       	mov	r19, r3
     c0c:	40 2f       	mov	r20, r16
     c0e:	51 2f       	mov	r21, r17
     c10:	64 2d       	mov	r22, r4
     c12:	76 2d       	mov	r23, r6
     c14:	88 2d       	mov	r24, r8
     c16:	9b 85       	ldd	r25, Y+11	; 0x0b
     c18:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     c1c:	2f 81       	ldd	r18, Y+7	; 0x07
     c1e:	38 85       	ldd	r19, Y+8	; 0x08
     c20:	49 85       	ldd	r20, Y+9	; 0x09
     c22:	5a 85       	ldd	r21, Y+10	; 0x0a
     c24:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     c28:	20 e0       	ldi	r18, 0x00	; 0
     c2a:	30 e0       	ldi	r19, 0x00	; 0
     c2c:	40 e0       	ldi	r20, 0x00	; 0
     c2e:	50 e4       	ldi	r21, 0x40	; 64
     c30:	0e 94 e6 10 	call	0x21cc	; 0x21cc <__addsf3>
     c34:	16 c0       	rjmp	.+44     	; 0xc62 <rgbtohsv+0x2ee>
     c36:	2e 2d       	mov	r18, r14
     c38:	3d 2d       	mov	r19, r13
     c3a:	4c 2d       	mov	r20, r12
     c3c:	5a 2d       	mov	r21, r10
     c3e:	62 2d       	mov	r22, r2
     c40:	73 2d       	mov	r23, r3
     c42:	80 2f       	mov	r24, r16
     c44:	91 2f       	mov	r25, r17
     c46:	0e 94 e5 10 	call	0x21ca	; 0x21ca <__subsf3>
     c4a:	2f 81       	ldd	r18, Y+7	; 0x07
     c4c:	38 85       	ldd	r19, Y+8	; 0x08
     c4e:	49 85       	ldd	r20, Y+9	; 0x09
     c50:	5a 85       	ldd	r21, Y+10	; 0x0a
     c52:	0e 94 b3 11 	call	0x2366	; 0x2366 <__divsf3>
     c56:	20 e0       	ldi	r18, 0x00	; 0
     c58:	30 e0       	ldi	r19, 0x00	; 0
     c5a:	40 e8       	ldi	r20, 0x80	; 128
     c5c:	50 e4       	ldi	r21, 0x40	; 64
     c5e:	0e 94 e6 10 	call	0x21cc	; 0x21cc <__addsf3>
     c62:	20 e0       	ldi	r18, 0x00	; 0
     c64:	30 e0       	ldi	r19, 0x00	; 0
     c66:	40 e7       	ldi	r20, 0x70	; 112
     c68:	52 e4       	ldi	r21, 0x42	; 66
     c6a:	0e 94 67 13 	call	0x26ce	; 0x26ce <__mulsf3>
     c6e:	6b 01       	movw	r12, r22
     c70:	7c 01       	movw	r14, r24
     c72:	20 e0       	ldi	r18, 0x00	; 0
     c74:	30 e0       	ldi	r19, 0x00	; 0
     c76:	a9 01       	movw	r20, r18
     c78:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     c7c:	88 23       	and	r24, r24
     c7e:	54 f4       	brge	.+20     	; 0xc94 <rgbtohsv+0x320>
     c80:	20 e0       	ldi	r18, 0x00	; 0
     c82:	30 e0       	ldi	r19, 0x00	; 0
     c84:	44 eb       	ldi	r20, 0xB4	; 180
     c86:	53 e4       	ldi	r21, 0x43	; 67
     c88:	c7 01       	movw	r24, r14
     c8a:	b6 01       	movw	r22, r12
     c8c:	0e 94 e6 10 	call	0x21cc	; 0x21cc <__addsf3>
     c90:	6b 01       	movw	r12, r22
     c92:	7c 01       	movw	r14, r24
     c94:	c7 01       	movw	r24, r14
     c96:	b6 01       	movw	r22, r12
     c98:	0e 94 20 12 	call	0x2440	; 0x2440 <__fixunssfsi>
     c9c:	69 83       	std	Y+1, r22	; 0x01
     c9e:	7a 83       	std	Y+2, r23	; 0x02
     ca0:	8b 83       	std	Y+3, r24	; 0x03
     ca2:	9c 83       	std	Y+4, r25	; 0x04
     ca4:	68 89       	ldd	r22, Y+16	; 0x10
     ca6:	79 89       	ldd	r23, Y+17	; 0x11
     ca8:	8a 89       	ldd	r24, Y+18	; 0x12
     caa:	9b 89       	ldd	r25, Y+19	; 0x13
     cac:	0e 94 20 12 	call	0x2440	; 0x2440 <__fixunssfsi>
     cb0:	6d 83       	std	Y+5, r22	; 0x05
     cb2:	6c 89       	ldd	r22, Y+20	; 0x14
     cb4:	7d 89       	ldd	r23, Y+21	; 0x15
     cb6:	8e 89       	ldd	r24, Y+22	; 0x16
     cb8:	9f 89       	ldd	r25, Y+23	; 0x17
     cba:	0e 94 20 12 	call	0x2440	; 0x2440 <__fixunssfsi>
     cbe:	6e 83       	std	Y+6, r22	; 0x06
     cc0:	17 c0       	rjmp	.+46     	; 0xcf0 <rgbtohsv+0x37c>
     cc2:	54 2c       	mov	r5, r4
     cc4:	76 2c       	mov	r7, r6
     cc6:	98 2c       	mov	r9, r8
     cc8:	bb 84       	ldd	r11, Y+11	; 0x0b
     cca:	c6 ce       	rjmp	.-628    	; 0xa58 <rgbtohsv+0xe4>
     ccc:	2e 2d       	mov	r18, r14
     cce:	3d 2d       	mov	r19, r13
     cd0:	4c 2d       	mov	r20, r12
     cd2:	5a 2d       	mov	r21, r10
     cd4:	62 2d       	mov	r22, r2
     cd6:	73 2d       	mov	r23, r3
     cd8:	80 2f       	mov	r24, r16
     cda:	91 2f       	mov	r25, r17
     cdc:	0e 94 ac 11 	call	0x2358	; 0x2358 <__cmpsf2>
     ce0:	88 23       	and	r24, r24
     ce2:	0c f4       	brge	.+2      	; 0xce6 <rgbtohsv+0x372>
     ce4:	e9 ce       	rjmp	.-558    	; 0xab8 <rgbtohsv+0x144>
     ce6:	54 2c       	mov	r5, r4
     ce8:	76 2c       	mov	r7, r6
     cea:	98 2c       	mov	r9, r8
     cec:	bb 84       	ldd	r11, Y+11	; 0x0b
     cee:	c9 ce       	rjmp	.-622    	; 0xa82 <rgbtohsv+0x10e>
     cf0:	29 81       	ldd	r18, Y+1	; 0x01
     cf2:	3a 81       	ldd	r19, Y+2	; 0x02
     cf4:	4b 81       	ldd	r20, Y+3	; 0x03
     cf6:	5c 81       	ldd	r21, Y+4	; 0x04
     cf8:	6d 81       	ldd	r22, Y+5	; 0x05
     cfa:	7e 81       	ldd	r23, Y+6	; 0x06
     cfc:	80 e0       	ldi	r24, 0x00	; 0
     cfe:	90 e0       	ldi	r25, 0x00	; 0
     d00:	67 96       	adiw	r28, 0x17	; 23
     d02:	e2 e1       	ldi	r30, 0x12	; 18
     d04:	0c 94 ab 14 	jmp	0x2956	; 0x2956 <__epilogue_restores__>

00000d08 <TFT_SetupPorts>:
     d08:	8f ef       	ldi	r24, 0xFF	; 255
     d0a:	84 b9       	out	0x04, r24	; 4
     d0c:	28 9a       	sbi	0x05, 0	; 5
     d0e:	08 95       	ret

00000d10 <TFT_msDelay>:
     d10:	18 16       	cp	r1, r24
     d12:	19 06       	cpc	r1, r25
     d14:	6c f4       	brge	.+26     	; 0xd30 <TFT_msDelay+0x20>
     d16:	20 e0       	ldi	r18, 0x00	; 0
     d18:	30 e0       	ldi	r19, 0x00	; 0
     d1a:	ef e9       	ldi	r30, 0x9F	; 159
     d1c:	ff e0       	ldi	r31, 0x0F	; 15
     d1e:	31 97       	sbiw	r30, 0x01	; 1
     d20:	f1 f7       	brne	.-4      	; 0xd1e <TFT_msDelay+0xe>
     d22:	00 c0       	rjmp	.+0      	; 0xd24 <TFT_msDelay+0x14>
     d24:	00 00       	nop
     d26:	2f 5f       	subi	r18, 0xFF	; 255
     d28:	3f 4f       	sbci	r19, 0xFF	; 255
     d2a:	82 17       	cp	r24, r18
     d2c:	93 07       	cpc	r25, r19
     d2e:	a9 f7       	brne	.-22     	; 0xd1a <TFT_msDelay+0xa>
     d30:	08 95       	ret

00000d32 <intsqrt>:
     d32:	4f 92       	push	r4
     d34:	5f 92       	push	r5
     d36:	6f 92       	push	r6
     d38:	7f 92       	push	r7
     d3a:	8f 92       	push	r8
     d3c:	9f 92       	push	r9
     d3e:	af 92       	push	r10
     d40:	bf 92       	push	r11
     d42:	cf 92       	push	r12
     d44:	df 92       	push	r13
     d46:	ef 92       	push	r14
     d48:	ff 92       	push	r15
     d4a:	2b 01       	movw	r4, r22
     d4c:	3c 01       	movw	r6, r24
     d4e:	67 2b       	or	r22, r23
     d50:	68 2b       	or	r22, r24
     d52:	69 2b       	or	r22, r25
     d54:	51 f1       	breq	.+84     	; 0xdaa <intsqrt+0x78>
     d56:	e0 e1       	ldi	r30, 0x10	; 16
     d58:	f0 e0       	ldi	r31, 0x00	; 0
     d5a:	c1 2c       	mov	r12, r1
     d5c:	d1 2c       	mov	r13, r1
     d5e:	76 01       	movw	r14, r12
     d60:	81 2c       	mov	r8, r1
     d62:	91 2c       	mov	r9, r1
     d64:	54 01       	movw	r10, r8
     d66:	68 94       	set
     d68:	97 f8       	bld	r9, 7
     d6a:	c8 28       	or	r12, r8
     d6c:	d9 28       	or	r13, r9
     d6e:	ea 28       	or	r14, r10
     d70:	fb 28       	or	r15, r11
     d72:	a7 01       	movw	r20, r14
     d74:	96 01       	movw	r18, r12
     d76:	c7 01       	movw	r24, r14
     d78:	b6 01       	movw	r22, r12
     d7a:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
     d7e:	46 16       	cp	r4, r22
     d80:	57 06       	cpc	r5, r23
     d82:	68 06       	cpc	r6, r24
     d84:	79 06       	cpc	r7, r25
     d86:	50 f4       	brcc	.+20     	; 0xd9c <intsqrt+0x6a>
     d88:	d5 01       	movw	r26, r10
     d8a:	c4 01       	movw	r24, r8
     d8c:	80 95       	com	r24
     d8e:	90 95       	com	r25
     d90:	a0 95       	com	r26
     d92:	b0 95       	com	r27
     d94:	c8 22       	and	r12, r24
     d96:	d9 22       	and	r13, r25
     d98:	ea 22       	and	r14, r26
     d9a:	fb 22       	and	r15, r27
     d9c:	b6 94       	lsr	r11
     d9e:	a7 94       	ror	r10
     da0:	97 94       	ror	r9
     da2:	87 94       	ror	r8
     da4:	31 97       	sbiw	r30, 0x01	; 1
     da6:	09 f7       	brne	.-62     	; 0xd6a <intsqrt+0x38>
     da8:	03 c0       	rjmp	.+6      	; 0xdb0 <intsqrt+0x7e>
     daa:	c1 2c       	mov	r12, r1
     dac:	d1 2c       	mov	r13, r1
     dae:	76 01       	movw	r14, r12
     db0:	c7 01       	movw	r24, r14
     db2:	b6 01       	movw	r22, r12
     db4:	ff 90       	pop	r15
     db6:	ef 90       	pop	r14
     db8:	df 90       	pop	r13
     dba:	cf 90       	pop	r12
     dbc:	bf 90       	pop	r11
     dbe:	af 90       	pop	r10
     dc0:	9f 90       	pop	r9
     dc2:	8f 90       	pop	r8
     dc4:	7f 90       	pop	r7
     dc6:	6f 90       	pop	r6
     dc8:	5f 90       	pop	r5
     dca:	4f 90       	pop	r4
     dcc:	08 95       	ret

00000dce <TFT_Xfer>:
     dce:	8e bd       	out	0x2e, r24	; 46
     dd0:	0d b4       	in	r0, 0x2d	; 45
     dd2:	07 fe       	sbrs	r0, 7
     dd4:	fd cf       	rjmp	.-6      	; 0xdd0 <TFT_Xfer+0x2>
     dd6:	8e b5       	in	r24, 0x2e	; 46
     dd8:	08 95       	ret

00000dda <TFT_WriteCmd>:
     dda:	2b 98       	cbi	0x05, 3	; 5
     ddc:	f8 df       	rcall	.-16     	; 0xdce <TFT_Xfer>
     dde:	2b 9a       	sbi	0x05, 3	; 5
     de0:	08 95       	ret

00000de2 <TFT_WriteWord>:
     de2:	cf 93       	push	r28
     de4:	c8 2f       	mov	r28, r24
     de6:	89 2f       	mov	r24, r25
     de8:	f2 df       	rcall	.-28     	; 0xdce <TFT_Xfer>
     dea:	8c 2f       	mov	r24, r28
     dec:	f0 df       	rcall	.-32     	; 0xdce <TFT_Xfer>
     dee:	cf 91       	pop	r28
     df0:	08 95       	ret

00000df2 <TFT_Write565>:
     df2:	0f 93       	push	r16
     df4:	1f 93       	push	r17
     df6:	cf 93       	push	r28
     df8:	df 93       	push	r29
     dfa:	08 2f       	mov	r16, r24
     dfc:	19 2f       	mov	r17, r25
     dfe:	eb 01       	movw	r28, r22
     e00:	8c e2       	ldi	r24, 0x2C	; 44
     e02:	eb df       	rcall	.-42     	; 0xdda <TFT_WriteCmd>
     e04:	20 97       	sbiw	r28, 0x00	; 0
     e06:	59 f0       	breq	.+22     	; 0xe1e <TFT_Write565+0x2c>
     e08:	91 2f       	mov	r25, r17
     e0a:	9e bd       	out	0x2e, r25	; 46
     e0c:	0d b4       	in	r0, 0x2d	; 45
     e0e:	07 fe       	sbrs	r0, 7
     e10:	fd cf       	rjmp	.-6      	; 0xe0c <TFT_Write565+0x1a>
     e12:	0e bd       	out	0x2e, r16	; 46
     e14:	0d b4       	in	r0, 0x2d	; 45
     e16:	07 fe       	sbrs	r0, 7
     e18:	fd cf       	rjmp	.-6      	; 0xe14 <TFT_Write565+0x22>
     e1a:	21 97       	sbiw	r28, 0x01	; 1
     e1c:	b1 f7       	brne	.-20     	; 0xe0a <TFT_Write565+0x18>
     e1e:	df 91       	pop	r29
     e20:	cf 91       	pop	r28
     e22:	1f 91       	pop	r17
     e24:	0f 91       	pop	r16
     e26:	08 95       	ret

00000e28 <TFT_HardwareReset>:
     e28:	2a 98       	cbi	0x05, 2	; 5
     e2a:	81 e0       	ldi	r24, 0x01	; 1
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	70 df       	rcall	.-288    	; 0xd10 <TFT_msDelay>
     e30:	2a 9a       	sbi	0x05, 2	; 5
     e32:	86 e9       	ldi	r24, 0x96	; 150
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	6c cf       	rjmp	.-296    	; 0xd10 <TFT_msDelay>
     e38:	08 95       	ret

00000e3a <TFT_InitDisplay>:
     e3a:	f6 df       	rcall	.-20     	; 0xe28 <TFT_HardwareReset>
     e3c:	81 e1       	ldi	r24, 0x11	; 17
     e3e:	cd df       	rcall	.-102    	; 0xdda <TFT_WriteCmd>
     e40:	86 e9       	ldi	r24, 0x96	; 150
     e42:	90 e0       	ldi	r25, 0x00	; 0
     e44:	65 df       	rcall	.-310    	; 0xd10 <TFT_msDelay>
     e46:	8a e3       	ldi	r24, 0x3A	; 58
     e48:	c8 df       	rcall	.-112    	; 0xdda <TFT_WriteCmd>
     e4a:	85 e0       	ldi	r24, 0x05	; 5
     e4c:	c0 df       	rcall	.-128    	; 0xdce <TFT_Xfer>
     e4e:	89 e2       	ldi	r24, 0x29	; 41
     e50:	c4 cf       	rjmp	.-120    	; 0xdda <TFT_WriteCmd>
     e52:	08 95       	ret

00000e54 <TFT_SetAddrWindow>:
     e54:	0f 93       	push	r16
     e56:	1f 93       	push	r17
     e58:	cf 93       	push	r28
     e5a:	df 93       	push	r29
     e5c:	08 2f       	mov	r16, r24
     e5e:	d6 2f       	mov	r29, r22
     e60:	14 2f       	mov	r17, r20
     e62:	c2 2f       	mov	r28, r18
     e64:	8a e2       	ldi	r24, 0x2A	; 42
     e66:	b9 df       	rcall	.-142    	; 0xdda <TFT_WriteCmd>
     e68:	80 2f       	mov	r24, r16
     e6a:	90 e0       	ldi	r25, 0x00	; 0
     e6c:	ba df       	rcall	.-140    	; 0xde2 <TFT_WriteWord>
     e6e:	81 2f       	mov	r24, r17
     e70:	90 e0       	ldi	r25, 0x00	; 0
     e72:	b7 df       	rcall	.-146    	; 0xde2 <TFT_WriteWord>
     e74:	8b e2       	ldi	r24, 0x2B	; 43
     e76:	b1 df       	rcall	.-158    	; 0xdda <TFT_WriteCmd>
     e78:	8d 2f       	mov	r24, r29
     e7a:	90 e0       	ldi	r25, 0x00	; 0
     e7c:	b2 df       	rcall	.-156    	; 0xde2 <TFT_WriteWord>
     e7e:	8c 2f       	mov	r24, r28
     e80:	90 e0       	ldi	r25, 0x00	; 0
     e82:	af df       	rcall	.-162    	; 0xde2 <TFT_WriteWord>
     e84:	df 91       	pop	r29
     e86:	cf 91       	pop	r28
     e88:	1f 91       	pop	r17
     e8a:	0f 91       	pop	r16
     e8c:	08 95       	ret

00000e8e <TFT_ClearScreen>:
     e8e:	2f e9       	ldi	r18, 0x9F	; 159
     e90:	4f e7       	ldi	r20, 0x7F	; 127
     e92:	60 e0       	ldi	r22, 0x00	; 0
     e94:	80 e0       	ldi	r24, 0x00	; 0
     e96:	de df       	rcall	.-68     	; 0xe54 <TFT_SetAddrWindow>
     e98:	8c e2       	ldi	r24, 0x2C	; 44
     e9a:	9f df       	rcall	.-194    	; 0xdda <TFT_WriteCmd>
     e9c:	80 e0       	ldi	r24, 0x00	; 0
     e9e:	90 ea       	ldi	r25, 0xA0	; 160
     ea0:	1e bc       	out	0x2e, r1	; 46
     ea2:	0d b4       	in	r0, 0x2d	; 45
     ea4:	07 fe       	sbrs	r0, 7
     ea6:	fd cf       	rjmp	.-6      	; 0xea2 <TFT_ClearScreen+0x14>
     ea8:	01 97       	sbiw	r24, 0x01	; 1
     eaa:	d1 f7       	brne	.-12     	; 0xea0 <TFT_ClearScreen+0x12>
     eac:	08 95       	ret

00000eae <TFT_ColorToInt>:
     eae:	0f 93       	push	r16
     eb0:	1f 93       	push	r17
     eb2:	cf 93       	push	r28
     eb4:	df 93       	push	r29
     eb6:	16 2f       	mov	r17, r22
     eb8:	08 2f       	mov	r16, r24
     eba:	2f e3       	ldi	r18, 0x3F	; 63
     ebc:	72 9f       	mul	r23, r18
     ebe:	c0 01       	movw	r24, r0
     ec0:	11 24       	eor	r1, r1
     ec2:	ef ef       	ldi	r30, 0xFF	; 255
     ec4:	f0 e0       	ldi	r31, 0x00	; 0
     ec6:	bf 01       	movw	r22, r30
     ec8:	0e 94 4a 14 	call	0x2894	; 0x2894 <__divmodhi4>
     ecc:	eb 01       	movw	r28, r22
     ece:	cc 0f       	add	r28, r28
     ed0:	dd 1f       	adc	r29, r29
     ed2:	c2 95       	swap	r28
     ed4:	d2 95       	swap	r29
     ed6:	d0 7f       	andi	r29, 0xF0	; 240
     ed8:	dc 27       	eor	r29, r28
     eda:	c0 7f       	andi	r28, 0xF0	; 240
     edc:	dc 27       	eor	r29, r28
     ede:	4f e1       	ldi	r20, 0x1F	; 31
     ee0:	41 9f       	mul	r20, r17
     ee2:	c0 01       	movw	r24, r0
     ee4:	11 24       	eor	r1, r1
     ee6:	bf 01       	movw	r22, r30
     ee8:	0e 94 4a 14 	call	0x2894	; 0x2894 <__divmodhi4>
     eec:	36 2f       	mov	r19, r22
     eee:	33 0f       	add	r19, r19
     ef0:	33 0f       	add	r19, r19
     ef2:	33 0f       	add	r19, r19
     ef4:	20 e0       	ldi	r18, 0x00	; 0
     ef6:	2c 2b       	or	r18, r28
     ef8:	3d 2b       	or	r19, r29
     efa:	40 9f       	mul	r20, r16
     efc:	c0 01       	movw	r24, r0
     efe:	11 24       	eor	r1, r1
     f00:	bf 01       	movw	r22, r30
     f02:	0e 94 4a 14 	call	0x2894	; 0x2894 <__divmodhi4>
     f06:	c9 01       	movw	r24, r18
     f08:	86 2b       	or	r24, r22
     f0a:	97 2b       	or	r25, r23
     f0c:	df 91       	pop	r29
     f0e:	cf 91       	pop	r28
     f10:	1f 91       	pop	r17
     f12:	0f 91       	pop	r16
     f14:	08 95       	ret

00000f16 <TFT_DrawPixel>:
     f16:	cf 93       	push	r28
     f18:	df 93       	push	r29
     f1a:	ea 01       	movw	r28, r20
     f1c:	26 2f       	mov	r18, r22
     f1e:	48 2f       	mov	r20, r24
     f20:	99 df       	rcall	.-206    	; 0xe54 <TFT_SetAddrWindow>
     f22:	61 e0       	ldi	r22, 0x01	; 1
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	ce 01       	movw	r24, r28
     f28:	64 df       	rcall	.-312    	; 0xdf2 <TFT_Write565>
     f2a:	df 91       	pop	r29
     f2c:	cf 91       	pop	r28
     f2e:	08 95       	ret

00000f30 <TFT_HLine>:
     f30:	0f 93       	push	r16
     f32:	1f 93       	push	r17
     f34:	cf 93       	push	r28
     f36:	df 93       	push	r29
     f38:	d8 2f       	mov	r29, r24
     f3a:	c6 2f       	mov	r28, r22
     f3c:	64 2f       	mov	r22, r20
     f3e:	89 01       	movw	r16, r18
     f40:	24 2f       	mov	r18, r20
     f42:	4c 2f       	mov	r20, r28
     f44:	87 df       	rcall	.-242    	; 0xe54 <TFT_SetAddrWindow>
     f46:	cd 1b       	sub	r28, r29
     f48:	cf 5f       	subi	r28, 0xFF	; 255
     f4a:	6c 2f       	mov	r22, r28
     f4c:	70 e0       	ldi	r23, 0x00	; 0
     f4e:	c8 01       	movw	r24, r16
     f50:	50 df       	rcall	.-352    	; 0xdf2 <TFT_Write565>
     f52:	df 91       	pop	r29
     f54:	cf 91       	pop	r28
     f56:	1f 91       	pop	r17
     f58:	0f 91       	pop	r16
     f5a:	08 95       	ret

00000f5c <TFT_VLine>:
     f5c:	0f 93       	push	r16
     f5e:	1f 93       	push	r17
     f60:	cf 93       	push	r28
     f62:	df 93       	push	r29
     f64:	d6 2f       	mov	r29, r22
     f66:	c4 2f       	mov	r28, r20
     f68:	89 01       	movw	r16, r18
     f6a:	24 2f       	mov	r18, r20
     f6c:	48 2f       	mov	r20, r24
     f6e:	72 df       	rcall	.-284    	; 0xe54 <TFT_SetAddrWindow>
     f70:	cd 1b       	sub	r28, r29
     f72:	cf 5f       	subi	r28, 0xFF	; 255
     f74:	6c 2f       	mov	r22, r28
     f76:	70 e0       	ldi	r23, 0x00	; 0
     f78:	c8 01       	movw	r24, r16
     f7a:	3b df       	rcall	.-394    	; 0xdf2 <TFT_Write565>
     f7c:	df 91       	pop	r29
     f7e:	cf 91       	pop	r28
     f80:	1f 91       	pop	r17
     f82:	0f 91       	pop	r16
     f84:	08 95       	ret

00000f86 <TFT_FillCircle>:
     f86:	4f 92       	push	r4
     f88:	5f 92       	push	r5
     f8a:	6f 92       	push	r6
     f8c:	7f 92       	push	r7
     f8e:	9f 92       	push	r9
     f90:	af 92       	push	r10
     f92:	bf 92       	push	r11
     f94:	cf 92       	push	r12
     f96:	df 92       	push	r13
     f98:	ef 92       	push	r14
     f9a:	ff 92       	push	r15
     f9c:	0f 93       	push	r16
     f9e:	1f 93       	push	r17
     fa0:	cf 93       	push	r28
     fa2:	df 93       	push	r29
     fa4:	e6 2e       	mov	r14, r22
     fa6:	69 01       	movw	r12, r18
     fa8:	a4 2e       	mov	r10, r20
     faa:	b1 2c       	mov	r11, r1
     fac:	aa 9c       	mul	r10, r10
     fae:	20 01       	movw	r4, r0
     fb0:	ab 9c       	mul	r10, r11
     fb2:	50 0c       	add	r5, r0
     fb4:	50 0c       	add	r5, r0
     fb6:	11 24       	eor	r1, r1
     fb8:	05 2c       	mov	r0, r5
     fba:	00 0c       	add	r0, r0
     fbc:	66 08       	sbc	r6, r6
     fbe:	77 08       	sbc	r7, r7
     fc0:	f8 2e       	mov	r15, r24
     fc2:	d8 2f       	mov	r29, r24
     fc4:	00 e0       	ldi	r16, 0x00	; 0
     fc6:	10 e0       	ldi	r17, 0x00	; 0
     fc8:	00 9f       	mul	r16, r16
     fca:	c0 01       	movw	r24, r0
     fcc:	01 9f       	mul	r16, r17
     fce:	90 0d       	add	r25, r0
     fd0:	90 0d       	add	r25, r0
     fd2:	11 24       	eor	r1, r1
     fd4:	09 2e       	mov	r0, r25
     fd6:	00 0c       	add	r0, r0
     fd8:	aa 0b       	sbc	r26, r26
     fda:	bb 0b       	sbc	r27, r27
     fdc:	a3 01       	movw	r20, r6
     fde:	92 01       	movw	r18, r4
     fe0:	28 1b       	sub	r18, r24
     fe2:	39 0b       	sbc	r19, r25
     fe4:	4a 0b       	sbc	r20, r26
     fe6:	5b 0b       	sbc	r21, r27
     fe8:	ca 01       	movw	r24, r20
     fea:	b9 01       	movw	r22, r18
     fec:	a2 de       	rcall	.-700    	; 0xd32 <intsqrt>
     fee:	9e 2c       	mov	r9, r14
     ff0:	96 1a       	sub	r9, r22
     ff2:	c6 2f       	mov	r28, r22
     ff4:	ce 0d       	add	r28, r14
     ff6:	96 01       	movw	r18, r12
     ff8:	4c 2f       	mov	r20, r28
     ffa:	69 2d       	mov	r22, r9
     ffc:	8d 2f       	mov	r24, r29
     ffe:	ae df       	rcall	.-164    	; 0xf5c <TFT_VLine>
    1000:	96 01       	movw	r18, r12
    1002:	4c 2f       	mov	r20, r28
    1004:	69 2d       	mov	r22, r9
    1006:	8f 2d       	mov	r24, r15
    1008:	a9 df       	rcall	.-174    	; 0xf5c <TFT_VLine>
    100a:	0f 5f       	subi	r16, 0xFF	; 255
    100c:	1f 4f       	sbci	r17, 0xFF	; 255
    100e:	df 5f       	subi	r29, 0xFF	; 255
    1010:	fa 94       	dec	r15
    1012:	a0 16       	cp	r10, r16
    1014:	b1 06       	cpc	r11, r17
    1016:	c4 f6       	brge	.-80     	; 0xfc8 <TFT_FillCircle+0x42>
    1018:	df 91       	pop	r29
    101a:	cf 91       	pop	r28
    101c:	1f 91       	pop	r17
    101e:	0f 91       	pop	r16
    1020:	ff 90       	pop	r15
    1022:	ef 90       	pop	r14
    1024:	df 90       	pop	r13
    1026:	cf 90       	pop	r12
    1028:	bf 90       	pop	r11
    102a:	af 90       	pop	r10
    102c:	9f 90       	pop	r9
    102e:	7f 90       	pop	r7
    1030:	6f 90       	pop	r6
    1032:	5f 90       	pop	r5
    1034:	4f 90       	pop	r4
    1036:	08 95       	ret

00001038 <TFT_Ellipse>:
    1038:	a8 e1       	ldi	r26, 0x18	; 24
    103a:	b0 e0       	ldi	r27, 0x00	; 0
    103c:	e2 e2       	ldi	r30, 0x22	; 34
    103e:	f8 e0       	ldi	r31, 0x08	; 8
    1040:	0c 94 8f 14 	jmp	0x291e	; 0x291e <__prologue_saves__>
    1044:	88 8f       	std	Y+24, r24	; 0x18
    1046:	6f 8b       	std	Y+23, r22	; 0x17
    1048:	1a 83       	std	Y+2, r17	; 0x02
    104a:	09 83       	std	Y+1, r16	; 0x01
    104c:	ca 01       	movw	r24, r20
    104e:	99 23       	and	r25, r25
    1050:	0c f4       	brge	.+2      	; 0x1054 <TFT_Ellipse+0x1c>
    1052:	01 96       	adiw	r24, 0x01	; 1
    1054:	ac 01       	movw	r20, r24
    1056:	55 95       	asr	r21
    1058:	47 95       	ror	r20
    105a:	5e 83       	std	Y+6, r21	; 0x06
    105c:	4d 83       	std	Y+5, r20	; 0x05
    105e:	c9 01       	movw	r24, r18
    1060:	99 23       	and	r25, r25
    1062:	0c f4       	brge	.+2      	; 0x1066 <TFT_Ellipse+0x2e>
    1064:	01 96       	adiw	r24, 0x01	; 1
    1066:	dc 01       	movw	r26, r24
    1068:	b5 95       	asr	r27
    106a:	a7 95       	ror	r26
    106c:	ba 8b       	std	Y+18, r27	; 0x12
    106e:	a9 8b       	std	Y+17, r26	; 0x11
    1070:	2d 81       	ldd	r18, Y+5	; 0x05
    1072:	3e 81       	ldd	r19, Y+6	; 0x06
    1074:	03 2e       	mov	r0, r19
    1076:	00 0c       	add	r0, r0
    1078:	44 0b       	sbc	r20, r20
    107a:	55 0b       	sbc	r21, r21
    107c:	2b 8b       	std	Y+19, r18	; 0x13
    107e:	3c 8b       	std	Y+20, r19	; 0x14
    1080:	4d 8b       	std	Y+21, r20	; 0x15
    1082:	5e 8b       	std	Y+22, r21	; 0x16
    1084:	ca 01       	movw	r24, r20
    1086:	b9 01       	movw	r22, r18
    1088:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    108c:	6b 01       	movw	r12, r22
    108e:	7c 01       	movw	r14, r24
    1090:	dc 01       	movw	r26, r24
    1092:	cb 01       	movw	r24, r22
    1094:	88 0f       	add	r24, r24
    1096:	99 1f       	adc	r25, r25
    1098:	aa 1f       	adc	r26, r26
    109a:	bb 1f       	adc	r27, r27
    109c:	89 87       	std	Y+9, r24	; 0x09
    109e:	9a 87       	std	Y+10, r25	; 0x0a
    10a0:	ab 87       	std	Y+11, r26	; 0x0b
    10a2:	bc 87       	std	Y+12, r27	; 0x0c
    10a4:	a9 89       	ldd	r26, Y+17	; 0x11
    10a6:	ba 89       	ldd	r27, Y+18	; 0x12
    10a8:	4d 01       	movw	r8, r26
    10aa:	bb 0f       	add	r27, r27
    10ac:	aa 08       	sbc	r10, r10
    10ae:	bb 08       	sbc	r11, r11
    10b0:	a5 01       	movw	r20, r10
    10b2:	94 01       	movw	r18, r8
    10b4:	c5 01       	movw	r24, r10
    10b6:	b4 01       	movw	r22, r8
    10b8:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    10bc:	9b 01       	movw	r18, r22
    10be:	ac 01       	movw	r20, r24
    10c0:	22 0f       	add	r18, r18
    10c2:	33 1f       	adc	r19, r19
    10c4:	44 1f       	adc	r20, r20
    10c6:	55 1f       	adc	r21, r21
    10c8:	2d 87       	std	Y+13, r18	; 0x0d
    10ca:	3e 87       	std	Y+14, r19	; 0x0e
    10cc:	4f 87       	std	Y+15, r20	; 0x0f
    10ce:	58 8b       	std	Y+16, r21	; 0x10
    10d0:	a7 01       	movw	r20, r14
    10d2:	96 01       	movw	r18, r12
    10d4:	c5 01       	movw	r24, r10
    10d6:	b4 01       	movw	r22, r8
    10d8:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    10dc:	6b 01       	movw	r12, r22
    10de:	7c 01       	movw	r14, r24
    10e0:	29 85       	ldd	r18, Y+9	; 0x09
    10e2:	3a 85       	ldd	r19, Y+10	; 0x0a
    10e4:	4b 85       	ldd	r20, Y+11	; 0x0b
    10e6:	5c 85       	ldd	r21, Y+12	; 0x0c
    10e8:	c5 01       	movw	r24, r10
    10ea:	b4 01       	movw	r22, r8
    10ec:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    10f0:	2b 01       	movw	r4, r22
    10f2:	3c 01       	movw	r6, r24
    10f4:	99 23       	and	r25, r25
    10f6:	0c f4       	brge	.+2      	; 0x10fa <TFT_Ellipse+0xc2>
    10f8:	5c c0       	rjmp	.+184    	; 0x11b2 <TFT_Ellipse+0x17a>
    10fa:	38 8c       	ldd	r3, Y+24	; 0x18
    10fc:	13 2d       	mov	r17, r3
    10fe:	49 89       	ldd	r20, Y+17	; 0x11
    1100:	5a 89       	ldd	r21, Y+18	; 0x12
    1102:	58 87       	std	Y+8, r21	; 0x08
    1104:	4f 83       	std	Y+7, r20	; 0x07
    1106:	81 2c       	mov	r8, r1
    1108:	91 2c       	mov	r9, r1
    110a:	54 01       	movw	r10, r8
    110c:	1c 82       	std	Y+4, r1	; 0x04
    110e:	1b 82       	std	Y+3, r1	; 0x03
    1110:	23 2c       	mov	r2, r3
    1112:	49 81       	ldd	r20, Y+1	; 0x01
    1114:	5a 81       	ldd	r21, Y+2	; 0x02
    1116:	0f 81       	ldd	r16, Y+7	; 0x07
    1118:	8f 89       	ldd	r24, Y+23	; 0x17
    111a:	08 0f       	add	r16, r24
    111c:	60 2f       	mov	r22, r16
    111e:	81 2f       	mov	r24, r17
    1120:	fa de       	rcall	.-524    	; 0xf16 <TFT_DrawPixel>
    1122:	49 81       	ldd	r20, Y+1	; 0x01
    1124:	5a 81       	ldd	r21, Y+2	; 0x02
    1126:	9f 89       	ldd	r25, Y+23	; 0x17
    1128:	af 81       	ldd	r26, Y+7	; 0x07
    112a:	9a 1b       	sub	r25, r26
    112c:	98 8f       	std	Y+24, r25	; 0x18
    112e:	69 2f       	mov	r22, r25
    1130:	81 2f       	mov	r24, r17
    1132:	f1 de       	rcall	.-542    	; 0xf16 <TFT_DrawPixel>
    1134:	49 81       	ldd	r20, Y+1	; 0x01
    1136:	5a 81       	ldd	r21, Y+2	; 0x02
    1138:	60 2f       	mov	r22, r16
    113a:	83 2d       	mov	r24, r3
    113c:	ec de       	rcall	.-552    	; 0xf16 <TFT_DrawPixel>
    113e:	49 81       	ldd	r20, Y+1	; 0x01
    1140:	5a 81       	ldd	r21, Y+2	; 0x02
    1142:	68 8d       	ldd	r22, Y+24	; 0x18
    1144:	83 2d       	mov	r24, r3
    1146:	e7 de       	rcall	.-562    	; 0xf16 <TFT_DrawPixel>
    1148:	eb 81       	ldd	r30, Y+3	; 0x03
    114a:	fc 81       	ldd	r31, Y+4	; 0x04
    114c:	31 96       	adiw	r30, 0x01	; 1
    114e:	ab 81       	ldd	r26, Y+3	; 0x03
    1150:	bc 81       	ldd	r27, Y+4	; 0x04
    1152:	2d 85       	ldd	r18, Y+13	; 0x0d
    1154:	3e 85       	ldd	r19, Y+14	; 0x0e
    1156:	4f 85       	ldd	r20, Y+15	; 0x0f
    1158:	58 89       	ldd	r21, Y+16	; 0x10
    115a:	0e 94 89 14 	call	0x2912	; 0x2912 <__mulshisi3>
    115e:	c6 1a       	sub	r12, r22
    1160:	d7 0a       	sbc	r13, r23
    1162:	e8 0a       	sbc	r14, r24
    1164:	f9 0a       	sbc	r15, r25
    1166:	82 0e       	add	r8, r18
    1168:	93 1e       	adc	r9, r19
    116a:	a4 1e       	adc	r10, r20
    116c:	b5 1e       	adc	r11, r21
    116e:	ff 20       	and	r15, r15
    1170:	ac f4       	brge	.+42     	; 0x119c <TFT_Ellipse+0x164>
    1172:	2f 81       	ldd	r18, Y+7	; 0x07
    1174:	38 85       	ldd	r19, Y+8	; 0x08
    1176:	21 50       	subi	r18, 0x01	; 1
    1178:	31 09       	sbc	r19, r1
    117a:	38 87       	std	Y+8, r19	; 0x08
    117c:	2f 83       	std	Y+7, r18	; 0x07
    117e:	d9 01       	movw	r26, r18
    1180:	29 85       	ldd	r18, Y+9	; 0x09
    1182:	3a 85       	ldd	r19, Y+10	; 0x0a
    1184:	4b 85       	ldd	r20, Y+11	; 0x0b
    1186:	5c 85       	ldd	r21, Y+12	; 0x0c
    1188:	0e 94 89 14 	call	0x2912	; 0x2912 <__mulshisi3>
    118c:	c6 0e       	add	r12, r22
    118e:	d7 1e       	adc	r13, r23
    1190:	e8 1e       	adc	r14, r24
    1192:	f9 1e       	adc	r15, r25
    1194:	42 1a       	sub	r4, r18
    1196:	53 0a       	sbc	r5, r19
    1198:	64 0a       	sbc	r6, r20
    119a:	75 0a       	sbc	r7, r21
    119c:	1f 5f       	subi	r17, 0xFF	; 255
    119e:	3a 94       	dec	r3
    11a0:	fc 83       	std	Y+4, r31	; 0x04
    11a2:	eb 83       	std	Y+3, r30	; 0x03
    11a4:	48 14       	cp	r4, r8
    11a6:	59 04       	cpc	r5, r9
    11a8:	6a 04       	cpc	r6, r10
    11aa:	7b 04       	cpc	r7, r11
    11ac:	0c f0       	brlt	.+2      	; 0x11b0 <TFT_Ellipse+0x178>
    11ae:	b1 cf       	rjmp	.-158    	; 0x1112 <TFT_Ellipse+0xda>
    11b0:	28 8e       	std	Y+24, r2	; 0x18
    11b2:	49 89       	ldd	r20, Y+17	; 0x11
    11b4:	5a 89       	ldd	r21, Y+18	; 0x12
    11b6:	44 9f       	mul	r20, r20
    11b8:	c0 01       	movw	r24, r0
    11ba:	45 9f       	mul	r20, r21
    11bc:	90 0d       	add	r25, r0
    11be:	90 0d       	add	r25, r0
    11c0:	11 24       	eor	r1, r1
    11c2:	ad 81       	ldd	r26, Y+5	; 0x05
    11c4:	be 81       	ldd	r27, Y+6	; 0x06
    11c6:	8a 9f       	mul	r24, r26
    11c8:	60 01       	movw	r12, r0
    11ca:	8b 9f       	mul	r24, r27
    11cc:	d0 0c       	add	r13, r0
    11ce:	9a 9f       	mul	r25, r26
    11d0:	d0 0c       	add	r13, r0
    11d2:	11 24       	eor	r1, r1
    11d4:	0d 2c       	mov	r0, r13
    11d6:	00 0c       	add	r0, r0
    11d8:	ee 08       	sbc	r14, r14
    11da:	ff 08       	sbc	r15, r15
    11dc:	2b 89       	ldd	r18, Y+19	; 0x13
    11de:	3c 89       	ldd	r19, Y+20	; 0x14
    11e0:	4d 89       	ldd	r20, Y+21	; 0x15
    11e2:	5e 89       	ldd	r21, Y+22	; 0x16
    11e4:	6d 85       	ldd	r22, Y+13	; 0x0d
    11e6:	7e 85       	ldd	r23, Y+14	; 0x0e
    11e8:	8f 85       	ldd	r24, Y+15	; 0x0f
    11ea:	98 89       	ldd	r25, Y+16	; 0x10
    11ec:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    11f0:	2b 01       	movw	r4, r22
    11f2:	3c 01       	movw	r6, r24
    11f4:	99 23       	and	r25, r25
    11f6:	0c f4       	brge	.+2      	; 0x11fa <TFT_Ellipse+0x1c2>
    11f8:	52 c0       	rjmp	.+164    	; 0x129e <TFT_Ellipse+0x266>
    11fa:	1f 89       	ldd	r17, Y+23	; 0x17
    11fc:	1b 83       	std	Y+3, r17	; 0x03
    11fe:	81 2c       	mov	r8, r1
    1200:	91 2c       	mov	r9, r1
    1202:	54 01       	movw	r10, r8
    1204:	21 2c       	mov	r2, r1
    1206:	31 2c       	mov	r3, r1
    1208:	49 81       	ldd	r20, Y+1	; 0x01
    120a:	5a 81       	ldd	r21, Y+2	; 0x02
    120c:	6b 81       	ldd	r22, Y+3	; 0x03
    120e:	0d 81       	ldd	r16, Y+5	; 0x05
    1210:	38 8d       	ldd	r19, Y+24	; 0x18
    1212:	03 0f       	add	r16, r19
    1214:	80 2f       	mov	r24, r16
    1216:	7f de       	rcall	.-770    	; 0xf16 <TFT_DrawPixel>
    1218:	49 81       	ldd	r20, Y+1	; 0x01
    121a:	5a 81       	ldd	r21, Y+2	; 0x02
    121c:	61 2f       	mov	r22, r17
    121e:	80 2f       	mov	r24, r16
    1220:	7a de       	rcall	.-780    	; 0xf16 <TFT_DrawPixel>
    1222:	49 81       	ldd	r20, Y+1	; 0x01
    1224:	5a 81       	ldd	r21, Y+2	; 0x02
    1226:	6b 81       	ldd	r22, Y+3	; 0x03
    1228:	08 8d       	ldd	r16, Y+24	; 0x18
    122a:	8d 81       	ldd	r24, Y+5	; 0x05
    122c:	08 1b       	sub	r16, r24
    122e:	80 2f       	mov	r24, r16
    1230:	72 de       	rcall	.-796    	; 0xf16 <TFT_DrawPixel>
    1232:	49 81       	ldd	r20, Y+1	; 0x01
    1234:	5a 81       	ldd	r21, Y+2	; 0x02
    1236:	61 2f       	mov	r22, r17
    1238:	80 2f       	mov	r24, r16
    123a:	6d de       	rcall	.-806    	; 0xf16 <TFT_DrawPixel>
    123c:	f1 01       	movw	r30, r2
    123e:	31 96       	adiw	r30, 0x01	; 1
    1240:	d1 01       	movw	r26, r2
    1242:	29 85       	ldd	r18, Y+9	; 0x09
    1244:	3a 85       	ldd	r19, Y+10	; 0x0a
    1246:	4b 85       	ldd	r20, Y+11	; 0x0b
    1248:	5c 85       	ldd	r21, Y+12	; 0x0c
    124a:	0e 94 89 14 	call	0x2912	; 0x2912 <__mulshisi3>
    124e:	c6 1a       	sub	r12, r22
    1250:	d7 0a       	sbc	r13, r23
    1252:	e8 0a       	sbc	r14, r24
    1254:	f9 0a       	sbc	r15, r25
    1256:	82 0e       	add	r8, r18
    1258:	93 1e       	adc	r9, r19
    125a:	a4 1e       	adc	r10, r20
    125c:	b5 1e       	adc	r11, r21
    125e:	ff 20       	and	r15, r15
    1260:	9c f4       	brge	.+38     	; 0x1288 <TFT_Ellipse+0x250>
    1262:	ad 81       	ldd	r26, Y+5	; 0x05
    1264:	be 81       	ldd	r27, Y+6	; 0x06
    1266:	11 97       	sbiw	r26, 0x01	; 1
    1268:	be 83       	std	Y+6, r27	; 0x06
    126a:	ad 83       	std	Y+5, r26	; 0x05
    126c:	2d 85       	ldd	r18, Y+13	; 0x0d
    126e:	3e 85       	ldd	r19, Y+14	; 0x0e
    1270:	4f 85       	ldd	r20, Y+15	; 0x0f
    1272:	58 89       	ldd	r21, Y+16	; 0x10
    1274:	0e 94 89 14 	call	0x2912	; 0x2912 <__mulshisi3>
    1278:	c6 0e       	add	r12, r22
    127a:	d7 1e       	adc	r13, r23
    127c:	e8 1e       	adc	r14, r24
    127e:	f9 1e       	adc	r15, r25
    1280:	42 1a       	sub	r4, r18
    1282:	53 0a       	sbc	r5, r19
    1284:	64 0a       	sbc	r6, r20
    1286:	75 0a       	sbc	r7, r21
    1288:	bb 81       	ldd	r27, Y+3	; 0x03
    128a:	bf 5f       	subi	r27, 0xFF	; 255
    128c:	bb 83       	std	Y+3, r27	; 0x03
    128e:	11 50       	subi	r17, 0x01	; 1
    1290:	1f 01       	movw	r2, r30
    1292:	48 14       	cp	r4, r8
    1294:	59 04       	cpc	r5, r9
    1296:	6a 04       	cpc	r6, r10
    1298:	7b 04       	cpc	r7, r11
    129a:	0c f0       	brlt	.+2      	; 0x129e <TFT_Ellipse+0x266>
    129c:	b5 cf       	rjmp	.-150    	; 0x1208 <TFT_Ellipse+0x1d0>
    129e:	68 96       	adiw	r28, 0x18	; 24
    12a0:	e2 e1       	ldi	r30, 0x12	; 18
    12a2:	0c 94 ab 14 	jmp	0x2956	; 0x2956 <__epilogue_restores__>

000012a6 <TFT_FillEllipse>:
    12a6:	af e0       	ldi	r26, 0x0F	; 15
    12a8:	b0 e0       	ldi	r27, 0x00	; 0
    12aa:	e9 e5       	ldi	r30, 0x59	; 89
    12ac:	f9 e0       	ldi	r31, 0x09	; 9
    12ae:	0c 94 8f 14 	jmp	0x291e	; 0x291e <__prologue_saves__>
    12b2:	e8 2f       	mov	r30, r24
    12b4:	6e 87       	std	Y+14, r22	; 0x0e
    12b6:	1e 83       	std	Y+6, r17	; 0x06
    12b8:	0d 83       	std	Y+5, r16	; 0x05
    12ba:	ca 01       	movw	r24, r20
    12bc:	99 23       	and	r25, r25
    12be:	0c f4       	brge	.+2      	; 0x12c2 <TFT_FillEllipse+0x1c>
    12c0:	01 96       	adiw	r24, 0x01	; 1
    12c2:	6c 01       	movw	r12, r24
    12c4:	d5 94       	asr	r13
    12c6:	c7 94       	ror	r12
    12c8:	c9 01       	movw	r24, r18
    12ca:	99 23       	and	r25, r25
    12cc:	0c f4       	brge	.+2      	; 0x12d0 <TFT_FillEllipse+0x2a>
    12ce:	01 96       	adiw	r24, 0x01	; 1
    12d0:	9c 01       	movw	r18, r24
    12d2:	35 95       	asr	r19
    12d4:	27 95       	ror	r18
    12d6:	39 87       	std	Y+9, r19	; 0x09
    12d8:	28 87       	std	Y+8, r18	; 0x08
    12da:	cc 9c       	mul	r12, r12
    12dc:	c0 01       	movw	r24, r0
    12de:	cd 9c       	mul	r12, r13
    12e0:	90 0d       	add	r25, r0
    12e2:	90 0d       	add	r25, r0
    12e4:	11 24       	eor	r1, r1
    12e6:	9c 01       	movw	r18, r24
    12e8:	99 0f       	add	r25, r25
    12ea:	44 0b       	sbc	r20, r20
    12ec:	55 0b       	sbc	r21, r21
    12ee:	2a 87       	std	Y+10, r18	; 0x0a
    12f0:	3b 87       	std	Y+11, r19	; 0x0b
    12f2:	4c 87       	std	Y+12, r20	; 0x0c
    12f4:	5d 87       	std	Y+13, r21	; 0x0d
    12f6:	48 85       	ldd	r20, Y+8	; 0x08
    12f8:	59 85       	ldd	r21, Y+9	; 0x09
    12fa:	44 9f       	mul	r20, r20
    12fc:	c0 01       	movw	r24, r0
    12fe:	45 9f       	mul	r20, r21
    1300:	90 0d       	add	r25, r0
    1302:	90 0d       	add	r25, r0
    1304:	11 24       	eor	r1, r1
    1306:	9c 01       	movw	r18, r24
    1308:	99 0f       	add	r25, r25
    130a:	44 0b       	sbc	r20, r20
    130c:	55 0b       	sbc	r21, r21
    130e:	29 83       	std	Y+1, r18	; 0x01
    1310:	3a 83       	std	Y+2, r19	; 0x02
    1312:	4b 83       	std	Y+3, r20	; 0x03
    1314:	5c 83       	std	Y+4, r21	; 0x04
    1316:	2a 85       	ldd	r18, Y+10	; 0x0a
    1318:	3b 85       	ldd	r19, Y+11	; 0x0b
    131a:	4c 85       	ldd	r20, Y+12	; 0x0c
    131c:	5d 85       	ldd	r21, Y+13	; 0x0d
    131e:	69 81       	ldd	r22, Y+1	; 0x01
    1320:	7a 81       	ldd	r23, Y+2	; 0x02
    1322:	8b 81       	ldd	r24, Y+3	; 0x03
    1324:	9c 81       	ldd	r25, Y+4	; 0x04
    1326:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    132a:	2b 01       	movw	r4, r22
    132c:	3c 01       	movw	r6, r24
    132e:	ef 83       	std	Y+7, r30	; 0x07
    1330:	6e 2f       	mov	r22, r30
    1332:	6c 0d       	add	r22, r12
    1334:	2d 81       	ldd	r18, Y+5	; 0x05
    1336:	3e 81       	ldd	r19, Y+6	; 0x06
    1338:	4e 85       	ldd	r20, Y+14	; 0x0e
    133a:	8e 2f       	mov	r24, r30
    133c:	8c 19       	sub	r24, r12
    133e:	f8 dd       	rcall	.-1040   	; 0xf30 <TFT_HLine>
    1340:	48 85       	ldd	r20, Y+8	; 0x08
    1342:	59 85       	ldd	r21, Y+9	; 0x09
    1344:	14 16       	cp	r1, r20
    1346:	15 06       	cpc	r1, r21
    1348:	0c f0       	brlt	.+2      	; 0x134c <TFT_FillEllipse+0xa6>
    134a:	98 c0       	rjmp	.+304    	; 0x147c <TFT_FillEllipse+0x1d6>
    134c:	0e 85       	ldd	r16, Y+14	; 0x0e
    134e:	0f 5f       	subi	r16, 0xFF	; 255
    1350:	1e 85       	ldd	r17, Y+14	; 0x0e
    1352:	11 50       	subi	r17, 0x01	; 1
    1354:	e1 2c       	mov	r14, r1
    1356:	f1 2c       	mov	r15, r1
    1358:	22 24       	eor	r2, r2
    135a:	23 94       	inc	r2
    135c:	31 2c       	mov	r3, r1
    135e:	f6 01       	movw	r30, r12
    1360:	02 c0       	rjmp	.+4      	; 0x1366 <TFT_FillEllipse+0xc0>
    1362:	ee 85       	ldd	r30, Y+14	; 0x0e
    1364:	ff 85       	ldd	r31, Y+15	; 0x0f
    1366:	51 e0       	ldi	r21, 0x01	; 1
    1368:	e5 1a       	sub	r14, r21
    136a:	f1 08       	sbc	r15, r1
    136c:	cf 01       	movw	r24, r30
    136e:	8e 19       	sub	r24, r14
    1370:	9f 09       	sbc	r25, r15
    1372:	9f 87       	std	Y+15, r25	; 0x0f
    1374:	8e 87       	std	Y+14, r24	; 0x0e
    1376:	18 16       	cp	r1, r24
    1378:	19 06       	cpc	r1, r25
    137a:	0c f0       	brlt	.+2      	; 0x137e <TFT_FillEllipse+0xd8>
    137c:	5e c0       	rjmp	.+188    	; 0x143a <TFT_FillEllipse+0x194>
    137e:	2a 85       	ldd	r18, Y+10	; 0x0a
    1380:	3b 85       	ldd	r19, Y+11	; 0x0b
    1382:	4c 85       	ldd	r20, Y+12	; 0x0c
    1384:	5d 85       	ldd	r21, Y+13	; 0x0d
    1386:	61 01       	movw	r12, r2
    1388:	03 2c       	mov	r0, r3
    138a:	00 0c       	add	r0, r0
    138c:	ee 08       	sbc	r14, r14
    138e:	ff 08       	sbc	r15, r15
    1390:	c7 01       	movw	r24, r14
    1392:	b6 01       	movw	r22, r12
    1394:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    1398:	9b 01       	movw	r18, r22
    139a:	ac 01       	movw	r20, r24
    139c:	c7 01       	movw	r24, r14
    139e:	b6 01       	movw	r22, r12
    13a0:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    13a4:	4b 01       	movw	r8, r22
    13a6:	5c 01       	movw	r10, r24
    13a8:	29 81       	ldd	r18, Y+1	; 0x01
    13aa:	3a 81       	ldd	r19, Y+2	; 0x02
    13ac:	4b 81       	ldd	r20, Y+3	; 0x03
    13ae:	5c 81       	ldd	r21, Y+4	; 0x04
    13b0:	8e 85       	ldd	r24, Y+14	; 0x0e
    13b2:	9f 85       	ldd	r25, Y+15	; 0x0f
    13b4:	6c 01       	movw	r12, r24
    13b6:	99 0f       	add	r25, r25
    13b8:	ee 08       	sbc	r14, r14
    13ba:	ff 08       	sbc	r15, r15
    13bc:	c7 01       	movw	r24, r14
    13be:	b6 01       	movw	r22, r12
    13c0:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    13c4:	9b 01       	movw	r18, r22
    13c6:	ac 01       	movw	r20, r24
    13c8:	c7 01       	movw	r24, r14
    13ca:	b6 01       	movw	r22, r12
    13cc:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    13d0:	dc 01       	movw	r26, r24
    13d2:	cb 01       	movw	r24, r22
    13d4:	88 0d       	add	r24, r8
    13d6:	99 1d       	adc	r25, r9
    13d8:	aa 1d       	adc	r26, r10
    13da:	bb 1d       	adc	r27, r11
    13dc:	48 16       	cp	r4, r24
    13de:	59 06       	cpc	r5, r25
    13e0:	6a 06       	cpc	r6, r26
    13e2:	7b 06       	cpc	r7, r27
    13e4:	0c f1       	brlt	.+66     	; 0x1428 <TFT_FillEllipse+0x182>
    13e6:	29 c0       	rjmp	.+82     	; 0x143a <TFT_FillEllipse+0x194>
    13e8:	29 81       	ldd	r18, Y+1	; 0x01
    13ea:	3a 81       	ldd	r19, Y+2	; 0x02
    13ec:	4b 81       	ldd	r20, Y+3	; 0x03
    13ee:	5c 81       	ldd	r21, Y+4	; 0x04
    13f0:	8e 85       	ldd	r24, Y+14	; 0x0e
    13f2:	9f 85       	ldd	r25, Y+15	; 0x0f
    13f4:	6c 01       	movw	r12, r24
    13f6:	99 0f       	add	r25, r25
    13f8:	ee 08       	sbc	r14, r14
    13fa:	ff 08       	sbc	r15, r15
    13fc:	c7 01       	movw	r24, r14
    13fe:	b6 01       	movw	r22, r12
    1400:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    1404:	9b 01       	movw	r18, r22
    1406:	ac 01       	movw	r20, r24
    1408:	c7 01       	movw	r24, r14
    140a:	b6 01       	movw	r22, r12
    140c:	0e 94 3b 14 	call	0x2876	; 0x2876 <__mulsi3>
    1410:	dc 01       	movw	r26, r24
    1412:	cb 01       	movw	r24, r22
    1414:	88 0d       	add	r24, r8
    1416:	99 1d       	adc	r25, r9
    1418:	aa 1d       	adc	r26, r10
    141a:	bb 1d       	adc	r27, r11
    141c:	48 16       	cp	r4, r24
    141e:	59 06       	cpc	r5, r25
    1420:	6a 06       	cpc	r6, r26
    1422:	7b 06       	cpc	r7, r27
    1424:	54 f4       	brge	.+20     	; 0x143a <TFT_FillEllipse+0x194>
    1426:	00 c0       	rjmp	.+0      	; 0x1428 <TFT_FillEllipse+0x182>
    1428:	4e 85       	ldd	r20, Y+14	; 0x0e
    142a:	5f 85       	ldd	r21, Y+15	; 0x0f
    142c:	41 50       	subi	r20, 0x01	; 1
    142e:	51 09       	sbc	r21, r1
    1430:	5f 87       	std	Y+15, r21	; 0x0f
    1432:	4e 87       	std	Y+14, r20	; 0x0e
    1434:	45 2b       	or	r20, r21
    1436:	c1 f6       	brne	.-80     	; 0x13e8 <TFT_FillEllipse+0x142>
    1438:	00 c0       	rjmp	.+0      	; 0x143a <TFT_FillEllipse+0x194>
    143a:	7f 01       	movw	r14, r30
    143c:	2e 85       	ldd	r18, Y+14	; 0x0e
    143e:	3f 85       	ldd	r19, Y+15	; 0x0f
    1440:	e2 1a       	sub	r14, r18
    1442:	f3 0a       	sbc	r15, r19
    1444:	2d 81       	ldd	r18, Y+5	; 0x05
    1446:	3e 81       	ldd	r19, Y+6	; 0x06
    1448:	40 2f       	mov	r20, r16
    144a:	cf 80       	ldd	r12, Y+7	; 0x07
    144c:	5e 85       	ldd	r21, Y+14	; 0x0e
    144e:	c5 0e       	add	r12, r21
    1450:	6c 2d       	mov	r22, r12
    1452:	df 80       	ldd	r13, Y+7	; 0x07
    1454:	d5 1a       	sub	r13, r21
    1456:	8d 2d       	mov	r24, r13
    1458:	6b dd       	rcall	.-1322   	; 0xf30 <TFT_HLine>
    145a:	2d 81       	ldd	r18, Y+5	; 0x05
    145c:	3e 81       	ldd	r19, Y+6	; 0x06
    145e:	41 2f       	mov	r20, r17
    1460:	6c 2d       	mov	r22, r12
    1462:	8d 2d       	mov	r24, r13
    1464:	65 dd       	rcall	.-1334   	; 0xf30 <TFT_HLine>
    1466:	8f ef       	ldi	r24, 0xFF	; 255
    1468:	28 1a       	sub	r2, r24
    146a:	38 0a       	sbc	r3, r24
    146c:	0f 5f       	subi	r16, 0xFF	; 255
    146e:	11 50       	subi	r17, 0x01	; 1
    1470:	28 85       	ldd	r18, Y+8	; 0x08
    1472:	39 85       	ldd	r19, Y+9	; 0x09
    1474:	22 15       	cp	r18, r2
    1476:	33 05       	cpc	r19, r3
    1478:	0c f0       	brlt	.+2      	; 0x147c <TFT_FillEllipse+0x1d6>
    147a:	73 cf       	rjmp	.-282    	; 0x1362 <TFT_FillEllipse+0xbc>
    147c:	2f 96       	adiw	r28, 0x0f	; 15
    147e:	e2 e1       	ldi	r30, 0x12	; 18
    1480:	0c 94 ab 14 	jmp	0x2956	; 0x2956 <__epilogue_restores__>

00001484 <TFT_AdvanceCursor>:
    1484:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <curX>
    1488:	8f 5f       	subi	r24, 0xFF	; 255
    148a:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <curX>
    148e:	85 31       	cpi	r24, 0x15	; 21
    1490:	38 f0       	brcs	.+14     	; 0x14a0 <TFT_AdvanceCursor+0x1c>
    1492:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <curY>
    1496:	8f 5f       	subi	r24, 0xFF	; 255
    1498:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <curY>
    149c:	10 92 eb 01 	sts	0x01EB, r1	; 0x8001eb <curX>
    14a0:	80 91 ec 01 	lds	r24, 0x01EC	; 0x8001ec <curY>
    14a4:	84 31       	cpi	r24, 0x14	; 20
    14a6:	10 f0       	brcs	.+4      	; 0x14ac <TFT_AdvanceCursor+0x28>
    14a8:	10 92 ec 01 	sts	0x01EC, r1	; 0x8001ec <curY>
    14ac:	08 95       	ret

000014ae <TFT_PutCh>:
    14ae:	a0 e0       	ldi	r26, 0x00	; 0
    14b0:	b0 e0       	ldi	r27, 0x00	; 0
    14b2:	ed e5       	ldi	r30, 0x5D	; 93
    14b4:	fa e0       	ldi	r31, 0x0A	; 10
    14b6:	0c 94 96 14 	jmp	0x292c	; 0x292c <__prologue_saves__+0xe>
    14ba:	c8 2f       	mov	r28, r24
    14bc:	86 2f       	mov	r24, r22
    14be:	64 2f       	mov	r22, r20
    14c0:	b2 2e       	mov	r11, r18
    14c2:	c3 2e       	mov	r12, r19
    14c4:	26 e0       	ldi	r18, 0x06	; 6
    14c6:	24 0f       	add	r18, r20
    14c8:	44 e0       	ldi	r20, 0x04	; 4
    14ca:	48 0f       	add	r20, r24
    14cc:	c3 dc       	rcall	.-1658   	; 0xe54 <TFT_SetAddrWindow>
    14ce:	8c e2       	ldi	r24, 0x2C	; 44
    14d0:	84 dc       	rcall	.-1784   	; 0xdda <TFT_WriteCmd>
    14d2:	8c 2f       	mov	r24, r28
    14d4:	90 e0       	ldi	r25, 0x00	; 0
    14d6:	80 97       	sbiw	r24, 0x20	; 32
    14d8:	7c 01       	movw	r14, r24
    14da:	ee 0c       	add	r14, r14
    14dc:	ff 1c       	adc	r15, r15
    14de:	ee 0c       	add	r14, r14
    14e0:	ff 1c       	adc	r15, r15
    14e2:	8e 0d       	add	r24, r14
    14e4:	9f 1d       	adc	r25, r15
    14e6:	9c 01       	movw	r18, r24
    14e8:	28 52       	subi	r18, 0x28	; 40
    14ea:	3f 4f       	sbci	r19, 0xFF	; 255
    14ec:	79 01       	movw	r14, r18
    14ee:	0f 2e       	mov	r0, r31
    14f0:	f7 e0       	ldi	r31, 0x07	; 7
    14f2:	df 2e       	mov	r13, r31
    14f4:	f0 2d       	mov	r31, r0
    14f6:	d1 e0       	ldi	r29, 0x01	; 1
    14f8:	91 2c       	mov	r9, r1
    14fa:	a1 2c       	mov	r10, r1
    14fc:	13 c0       	rjmp	.+38     	; 0x1524 <TFT_PutCh+0x76>
    14fe:	f8 01       	movw	r30, r16
    1500:	84 91       	lpm	r24, Z
    1502:	8d 23       	and	r24, r29
    1504:	19 f0       	breq	.+6      	; 0x150c <TFT_PutCh+0x5e>
    1506:	8b 2d       	mov	r24, r11
    1508:	9c 2d       	mov	r25, r12
    150a:	02 c0       	rjmp	.+4      	; 0x1510 <TFT_PutCh+0x62>
    150c:	89 2d       	mov	r24, r9
    150e:	9a 2d       	mov	r25, r10
    1510:	68 dc       	rcall	.-1840   	; 0xde2 <TFT_WriteWord>
    1512:	c1 50       	subi	r28, 0x01	; 1
    1514:	0f 5f       	subi	r16, 0xFF	; 255
    1516:	1f 4f       	sbci	r17, 0xFF	; 255
    1518:	c1 11       	cpse	r28, r1
    151a:	f1 cf       	rjmp	.-30     	; 0x14fe <TFT_PutCh+0x50>
    151c:	dd 0f       	add	r29, r29
    151e:	da 94       	dec	r13
    1520:	dd 20       	and	r13, r13
    1522:	19 f0       	breq	.+6      	; 0x152a <TFT_PutCh+0x7c>
    1524:	87 01       	movw	r16, r14
    1526:	c5 e0       	ldi	r28, 0x05	; 5
    1528:	ea cf       	rjmp	.-44     	; 0x14fe <TFT_PutCh+0x50>
    152a:	cd b7       	in	r28, 0x3d	; 61
    152c:	de b7       	in	r29, 0x3e	; 62
    152e:	eb e0       	ldi	r30, 0x0B	; 11
    1530:	0c 94 b2 14 	jmp	0x2964	; 0x2964 <__epilogue_restores__+0xe>

00001534 <TFT_WriteChar>:
    1534:	9b 01       	movw	r18, r22
    1536:	40 91 ec 01 	lds	r20, 0x01EC	; 0x8001ec <curY>
    153a:	44 0f       	add	r20, r20
    153c:	44 0f       	add	r20, r20
    153e:	44 0f       	add	r20, r20
    1540:	90 91 eb 01 	lds	r25, 0x01EB	; 0x8001eb <curX>
    1544:	69 2f       	mov	r22, r25
    1546:	66 0f       	add	r22, r22
    1548:	96 0f       	add	r25, r22
    154a:	69 2f       	mov	r22, r25
    154c:	66 0f       	add	r22, r22
    154e:	af df       	rcall	.-162    	; 0x14ae <TFT_PutCh>
    1550:	99 cf       	rjmp	.-206    	; 0x1484 <TFT_AdvanceCursor>
    1552:	08 95       	ret

00001554 <TFT_WriteString>:
    1554:	0f 93       	push	r16
    1556:	1f 93       	push	r17
    1558:	cf 93       	push	r28
    155a:	df 93       	push	r29
    155c:	ec 01       	movw	r28, r24
    155e:	88 81       	ld	r24, Y
    1560:	88 23       	and	r24, r24
    1562:	39 f0       	breq	.+14     	; 0x1572 <TFT_WriteString+0x1e>
    1564:	8b 01       	movw	r16, r22
    1566:	21 96       	adiw	r28, 0x01	; 1
    1568:	b8 01       	movw	r22, r16
    156a:	e4 df       	rcall	.-56     	; 0x1534 <TFT_WriteChar>
    156c:	89 91       	ld	r24, Y+
    156e:	81 11       	cpse	r24, r1
    1570:	fb cf       	rjmp	.-10     	; 0x1568 <TFT_WriteString+0x14>
    1572:	df 91       	pop	r29
    1574:	cf 91       	pop	r28
    1576:	1f 91       	pop	r17
    1578:	0f 91       	pop	r16
    157a:	08 95       	ret

0000157c <GetKeypadKey>:
    157c:	8f ee       	ldi	r24, 0xEF	; 239
    157e:	82 b9       	out	0x02, r24	; 2
    1580:	00 00       	nop
    1582:	00 9b       	sbis	0x00, 0	; 0
    1584:	29 c0       	rjmp	.+82     	; 0x15d8 <GetKeypadKey+0x5c>
    1586:	01 9b       	sbis	0x00, 1	; 0
    1588:	29 c0       	rjmp	.+82     	; 0x15dc <GetKeypadKey+0x60>
    158a:	02 9b       	sbis	0x00, 2	; 0
    158c:	29 c0       	rjmp	.+82     	; 0x15e0 <GetKeypadKey+0x64>
    158e:	03 9b       	sbis	0x00, 3	; 0
    1590:	29 c0       	rjmp	.+82     	; 0x15e4 <GetKeypadKey+0x68>
    1592:	8f ed       	ldi	r24, 0xDF	; 223
    1594:	82 b9       	out	0x02, r24	; 2
    1596:	00 00       	nop
    1598:	00 9b       	sbis	0x00, 0	; 0
    159a:	26 c0       	rjmp	.+76     	; 0x15e8 <GetKeypadKey+0x6c>
    159c:	01 9b       	sbis	0x00, 1	; 0
    159e:	26 c0       	rjmp	.+76     	; 0x15ec <GetKeypadKey+0x70>
    15a0:	02 9b       	sbis	0x00, 2	; 0
    15a2:	26 c0       	rjmp	.+76     	; 0x15f0 <GetKeypadKey+0x74>
    15a4:	03 9b       	sbis	0x00, 3	; 0
    15a6:	26 c0       	rjmp	.+76     	; 0x15f4 <GetKeypadKey+0x78>
    15a8:	8f eb       	ldi	r24, 0xBF	; 191
    15aa:	82 b9       	out	0x02, r24	; 2
    15ac:	00 00       	nop
    15ae:	00 9b       	sbis	0x00, 0	; 0
    15b0:	23 c0       	rjmp	.+70     	; 0x15f8 <GetKeypadKey+0x7c>
    15b2:	01 9b       	sbis	0x00, 1	; 0
    15b4:	23 c0       	rjmp	.+70     	; 0x15fc <GetKeypadKey+0x80>
    15b6:	02 9b       	sbis	0x00, 2	; 0
    15b8:	23 c0       	rjmp	.+70     	; 0x1600 <GetKeypadKey+0x84>
    15ba:	03 9b       	sbis	0x00, 3	; 0
    15bc:	23 c0       	rjmp	.+70     	; 0x1604 <GetKeypadKey+0x88>
    15be:	8f e7       	ldi	r24, 0x7F	; 127
    15c0:	82 b9       	out	0x02, r24	; 2
    15c2:	00 00       	nop
    15c4:	00 9b       	sbis	0x00, 0	; 0
    15c6:	20 c0       	rjmp	.+64     	; 0x1608 <GetKeypadKey+0x8c>
    15c8:	01 9b       	sbis	0x00, 1	; 0
    15ca:	20 c0       	rjmp	.+64     	; 0x160c <GetKeypadKey+0x90>
    15cc:	02 9b       	sbis	0x00, 2	; 0
    15ce:	20 c0       	rjmp	.+64     	; 0x1610 <GetKeypadKey+0x94>
    15d0:	03 9b       	sbis	0x00, 3	; 0
    15d2:	20 c0       	rjmp	.+64     	; 0x1614 <GetKeypadKey+0x98>
    15d4:	80 e0       	ldi	r24, 0x00	; 0
    15d6:	08 95       	ret
    15d8:	81 e3       	ldi	r24, 0x31	; 49
    15da:	08 95       	ret
    15dc:	84 e3       	ldi	r24, 0x34	; 52
    15de:	08 95       	ret
    15e0:	87 e3       	ldi	r24, 0x37	; 55
    15e2:	08 95       	ret
    15e4:	8a e2       	ldi	r24, 0x2A	; 42
    15e6:	08 95       	ret
    15e8:	82 e3       	ldi	r24, 0x32	; 50
    15ea:	08 95       	ret
    15ec:	85 e3       	ldi	r24, 0x35	; 53
    15ee:	08 95       	ret
    15f0:	88 e3       	ldi	r24, 0x38	; 56
    15f2:	08 95       	ret
    15f4:	80 e3       	ldi	r24, 0x30	; 48
    15f6:	08 95       	ret
    15f8:	83 e3       	ldi	r24, 0x33	; 51
    15fa:	08 95       	ret
    15fc:	86 e3       	ldi	r24, 0x36	; 54
    15fe:	08 95       	ret
    1600:	89 e3       	ldi	r24, 0x39	; 57
    1602:	08 95       	ret
    1604:	83 e2       	ldi	r24, 0x23	; 35
    1606:	08 95       	ret
    1608:	81 e4       	ldi	r24, 0x41	; 65
    160a:	08 95       	ret
    160c:	82 e4       	ldi	r24, 0x42	; 66
    160e:	08 95       	ret
    1610:	83 e4       	ldi	r24, 0x43	; 67
    1612:	08 95       	ret
    1614:	84 e4       	ldi	r24, 0x44	; 68
    1616:	08 95       	ret

00001618 <SMTICK4>:
    1618:	cf 93       	push	r28
    161a:	df 93       	push	r29
    161c:	ec 01       	movw	r28, r24
    161e:	82 30       	cpi	r24, 0x02	; 2
    1620:	91 05       	cpc	r25, r1
    1622:	d1 f0       	breq	.+52     	; 0x1658 <SMTICK4+0x40>
    1624:	34 f4       	brge	.+12     	; 0x1632 <SMTICK4+0x1a>
    1626:	00 97       	sbiw	r24, 0x00	; 0
    1628:	09 f4       	brne	.+2      	; 0x162c <SMTICK4+0x14>
    162a:	3c c1       	rjmp	.+632    	; 0x18a4 <SMTICK4+0x28c>
    162c:	01 97       	sbiw	r24, 0x01	; 1
    162e:	51 f0       	breq	.+20     	; 0x1644 <SMTICK4+0x2c>
    1630:	45 c1       	rjmp	.+650    	; 0x18bc <SMTICK4+0x2a4>
    1632:	84 30       	cpi	r24, 0x04	; 4
    1634:	91 05       	cpc	r25, r1
    1636:	09 f4       	brne	.+2      	; 0x163a <SMTICK4+0x22>
    1638:	43 c0       	rjmp	.+134    	; 0x16c0 <SMTICK4+0xa8>
    163a:	ac f0       	brlt	.+42     	; 0x1666 <SMTICK4+0x4e>
    163c:	05 97       	sbiw	r24, 0x05	; 5
    163e:	09 f4       	brne	.+2      	; 0x1642 <SMTICK4+0x2a>
    1640:	61 c0       	rjmp	.+194    	; 0x1704 <SMTICK4+0xec>
    1642:	3c c1       	rjmp	.+632    	; 0x18bc <SMTICK4+0x2a4>
    1644:	9b df       	rcall	.-202    	; 0x157c <GetKeypadKey>
    1646:	88 23       	and	r24, r24
    1648:	09 f4       	brne	.+2      	; 0x164c <SMTICK4+0x34>
    164a:	3d c1       	rjmp	.+634    	; 0x18c6 <SMTICK4+0x2ae>
    164c:	97 df       	rcall	.-210    	; 0x157c <GetKeypadKey>
    164e:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <lastInput>
    1652:	c2 e0       	ldi	r28, 0x02	; 2
    1654:	d0 e0       	ldi	r29, 0x00	; 0
    1656:	37 c1       	rjmp	.+622    	; 0x18c6 <SMTICK4+0x2ae>
    1658:	91 df       	rcall	.-222    	; 0x157c <GetKeypadKey>
    165a:	8a 32       	cpi	r24, 0x2A	; 42
    165c:	09 f4       	brne	.+2      	; 0x1660 <SMTICK4+0x48>
    165e:	31 c1       	rjmp	.+610    	; 0x18c2 <SMTICK4+0x2aa>
    1660:	c1 e0       	ldi	r28, 0x01	; 1
    1662:	d0 e0       	ldi	r29, 0x00	; 0
    1664:	30 c1       	rjmp	.+608    	; 0x18c6 <SMTICK4+0x2ae>
    1666:	8a df       	rcall	.-236    	; 0x157c <GetKeypadKey>
    1668:	8a 32       	cpi	r24, 0x2A	; 42
    166a:	d1 f4       	brne	.+52     	; 0x16a0 <SMTICK4+0x88>
    166c:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <holdTime>
    1670:	84 30       	cpi	r24, 0x04	; 4
    1672:	b0 f0       	brcs	.+44     	; 0x16a0 <SMTICK4+0x88>
    1674:	8e e0       	ldi	r24, 0x0E	; 14
    1676:	0e 94 93 01 	call	0x326	; 0x326 <LCD_WriteCommand>
    167a:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <holdTime>
    167e:	82 e1       	ldi	r24, 0x12	; 18
    1680:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1684:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <value>
    1688:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <value+0x1>
    168c:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <value+0x2>
    1690:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <value+0x3>
    1694:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <inputs>
    1698:	81 e0       	ldi	r24, 0x01	; 1
    169a:	80 93 e5 01 	sts	0x01E5, r24	; 0x8001e5 <newInput>
    169e:	08 c1       	rjmp	.+528    	; 0x18b0 <SMTICK4+0x298>
    16a0:	6d df       	rcall	.-294    	; 0x157c <GetKeypadKey>
    16a2:	8a 32       	cpi	r24, 0x2A	; 42
    16a4:	41 f4       	brne	.+16     	; 0x16b6 <SMTICK4+0x9e>
    16a6:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <holdTime>
    16aa:	84 30       	cpi	r24, 0x04	; 4
    16ac:	20 f4       	brcc	.+8      	; 0x16b6 <SMTICK4+0x9e>
    16ae:	8f 5f       	subi	r24, 0xFF	; 255
    16b0:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <holdTime>
    16b4:	08 c1       	rjmp	.+528    	; 0x18c6 <SMTICK4+0x2ae>
    16b6:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <holdTime>
    16ba:	c1 e0       	ldi	r28, 0x01	; 1
    16bc:	d0 e0       	ldi	r29, 0x00	; 0
    16be:	03 c1       	rjmp	.+518    	; 0x18c6 <SMTICK4+0x2ae>
    16c0:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <inputState>
    16c4:	83 30       	cpi	r24, 0x03	; 3
    16c6:	29 f0       	breq	.+10     	; 0x16d2 <SMTICK4+0xba>
    16c8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    16cc:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_Cursor>
    16d0:	ef c0       	rjmp	.+478    	; 0x18b0 <SMTICK4+0x298>
    16d2:	82 e1       	ldi	r24, 0x12	; 18
    16d4:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    16d8:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <inputState>
    16dc:	10 92 e5 01 	sts	0x01E5, r1	; 0x8001e5 <newInput>
    16e0:	80 91 ed 01 	lds	r24, 0x01ED	; 0x8001ed <tempColor>
    16e4:	90 91 ee 01 	lds	r25, 0x01EE	; 0x8001ee <tempColor+0x1>
    16e8:	a0 91 ef 01 	lds	r26, 0x01EF	; 0x8001ef <tempColor+0x2>
    16ec:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <mainColor>
    16f0:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <mainColor+0x1>
    16f4:	a0 93 05 01 	sts	0x0105, r26	; 0x800105 <mainColor+0x2>
    16f8:	81 e0       	ldi	r24, 0x01	; 1
    16fa:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <valueChanged>
    16fe:	c5 e0       	ldi	r28, 0x05	; 5
    1700:	d0 e0       	ldi	r29, 0x00	; 0
    1702:	e1 c0       	rjmp	.+450    	; 0x18c6 <SMTICK4+0x2ae>
    1704:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <valueChanged>
    1708:	81 11       	cpse	r24, r1
    170a:	dd c0       	rjmp	.+442    	; 0x18c6 <SMTICK4+0x2ae>
    170c:	c1 e0       	ldi	r28, 0x01	; 1
    170e:	d0 e0       	ldi	r29, 0x00	; 0
    1710:	da c0       	rjmp	.+436    	; 0x18c6 <SMTICK4+0x2ae>
    1712:	34 df       	rcall	.-408    	; 0x157c <GetKeypadKey>
    1714:	88 23       	and	r24, r24
    1716:	09 f4       	brne	.+2      	; 0x171a <SMTICK4+0x102>
    1718:	bd c0       	rjmp	.+378    	; 0x1894 <SMTICK4+0x27c>
    171a:	30 df       	rcall	.-416    	; 0x157c <GetKeypadKey>
    171c:	80 33       	cpi	r24, 0x30	; 48
    171e:	08 f4       	brcc	.+2      	; 0x1722 <SMTICK4+0x10a>
    1720:	b3 c0       	rjmp	.+358    	; 0x1888 <SMTICK4+0x270>
    1722:	2c df       	rcall	.-424    	; 0x157c <GetKeypadKey>
    1724:	8a 33       	cpi	r24, 0x3A	; 58
    1726:	08 f0       	brcs	.+2      	; 0x172a <SMTICK4+0x112>
    1728:	af c0       	rjmp	.+350    	; 0x1888 <SMTICK4+0x270>
    172a:	28 df       	rcall	.-432    	; 0x157c <GetKeypadKey>
    172c:	0e 94 cd 01 	call	0x39a	; 0x39a <LCD_WriteData>
    1730:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1734:	8f 5f       	subi	r24, 0xFF	; 255
    1736:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    173a:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <inputs>
    173e:	81 30       	cpi	r24, 0x01	; 1
    1740:	01 f1       	breq	.+64     	; 0x1782 <SMTICK4+0x16a>
    1742:	20 f0       	brcs	.+8      	; 0x174c <SMTICK4+0x134>
    1744:	82 30       	cpi	r24, 0x02	; 2
    1746:	09 f4       	brne	.+2      	; 0x174a <SMTICK4+0x132>
    1748:	4a c0       	rjmp	.+148    	; 0x17de <SMTICK4+0x1c6>
    174a:	9e c0       	rjmp	.+316    	; 0x1888 <SMTICK4+0x270>
    174c:	17 df       	rcall	.-466    	; 0x157c <GetKeypadKey>
    174e:	90 e0       	ldi	r25, 0x00	; 0
    1750:	c0 97       	sbiw	r24, 0x30	; 48
    1752:	44 e6       	ldi	r20, 0x64	; 100
    1754:	48 9f       	mul	r20, r24
    1756:	90 01       	movw	r18, r0
    1758:	49 9f       	mul	r20, r25
    175a:	30 0d       	add	r19, r0
    175c:	11 24       	eor	r1, r1
    175e:	c9 01       	movw	r24, r18
    1760:	33 0f       	add	r19, r19
    1762:	aa 0b       	sbc	r26, r26
    1764:	bb 0b       	sbc	r27, r27
    1766:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <value>
    176a:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <value+0x1>
    176e:	a0 93 e2 01 	sts	0x01E2, r26	; 0x8001e2 <value+0x2>
    1772:	b0 93 e3 01 	sts	0x01E3, r27	; 0x8001e3 <value+0x3>
    1776:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <inputs>
    177a:	8f 5f       	subi	r24, 0xFF	; 255
    177c:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <inputs>
    1780:	83 c0       	rjmp	.+262    	; 0x1888 <SMTICK4+0x270>
    1782:	fc de       	rcall	.-520    	; 0x157c <GetKeypadKey>
    1784:	28 2f       	mov	r18, r24
    1786:	30 e0       	ldi	r19, 0x00	; 0
    1788:	20 53       	subi	r18, 0x30	; 48
    178a:	31 09       	sbc	r19, r1
    178c:	c9 01       	movw	r24, r18
    178e:	88 0f       	add	r24, r24
    1790:	99 1f       	adc	r25, r25
    1792:	22 0f       	add	r18, r18
    1794:	33 1f       	adc	r19, r19
    1796:	22 0f       	add	r18, r18
    1798:	33 1f       	adc	r19, r19
    179a:	22 0f       	add	r18, r18
    179c:	33 1f       	adc	r19, r19
    179e:	82 0f       	add	r24, r18
    17a0:	93 1f       	adc	r25, r19
    17a2:	09 2e       	mov	r0, r25
    17a4:	00 0c       	add	r0, r0
    17a6:	aa 0b       	sbc	r26, r26
    17a8:	bb 0b       	sbc	r27, r27
    17aa:	40 91 e0 01 	lds	r20, 0x01E0	; 0x8001e0 <value>
    17ae:	50 91 e1 01 	lds	r21, 0x01E1	; 0x8001e1 <value+0x1>
    17b2:	60 91 e2 01 	lds	r22, 0x01E2	; 0x8001e2 <value+0x2>
    17b6:	70 91 e3 01 	lds	r23, 0x01E3	; 0x8001e3 <value+0x3>
    17ba:	84 0f       	add	r24, r20
    17bc:	95 1f       	adc	r25, r21
    17be:	a6 1f       	adc	r26, r22
    17c0:	b7 1f       	adc	r27, r23
    17c2:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <value>
    17c6:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <value+0x1>
    17ca:	a0 93 e2 01 	sts	0x01E2, r26	; 0x8001e2 <value+0x2>
    17ce:	b0 93 e3 01 	sts	0x01E3, r27	; 0x8001e3 <value+0x3>
    17d2:	80 91 df 01 	lds	r24, 0x01DF	; 0x8001df <inputs>
    17d6:	8f 5f       	subi	r24, 0xFF	; 255
    17d8:	80 93 df 01 	sts	0x01DF, r24	; 0x8001df <inputs>
    17dc:	55 c0       	rjmp	.+170    	; 0x1888 <SMTICK4+0x270>
    17de:	ce de       	rcall	.-612    	; 0x157c <GetKeypadKey>
    17e0:	90 e0       	ldi	r25, 0x00	; 0
    17e2:	c0 97       	sbiw	r24, 0x30	; 48
    17e4:	09 2e       	mov	r0, r25
    17e6:	00 0c       	add	r0, r0
    17e8:	aa 0b       	sbc	r26, r26
    17ea:	bb 0b       	sbc	r27, r27
    17ec:	40 91 e0 01 	lds	r20, 0x01E0	; 0x8001e0 <value>
    17f0:	50 91 e1 01 	lds	r21, 0x01E1	; 0x8001e1 <value+0x1>
    17f4:	60 91 e2 01 	lds	r22, 0x01E2	; 0x8001e2 <value+0x2>
    17f8:	70 91 e3 01 	lds	r23, 0x01E3	; 0x8001e3 <value+0x3>
    17fc:	84 0f       	add	r24, r20
    17fe:	95 1f       	adc	r25, r21
    1800:	a6 1f       	adc	r26, r22
    1802:	b7 1f       	adc	r27, r23
    1804:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <value>
    1808:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <value+0x1>
    180c:	a0 93 e2 01 	sts	0x01E2, r26	; 0x8001e2 <value+0x2>
    1810:	b0 93 e3 01 	sts	0x01E3, r27	; 0x8001e3 <value+0x3>
    1814:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1818:	2e 5f       	subi	r18, 0xFE	; 254
    181a:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_start>
    181e:	8f 3f       	cpi	r24, 0xFF	; 255
    1820:	91 05       	cpc	r25, r1
    1822:	a1 05       	cpc	r26, r1
    1824:	b1 05       	cpc	r27, r1
    1826:	69 f0       	breq	.+26     	; 0x1842 <SMTICK4+0x22a>
    1828:	60 f0       	brcs	.+24     	; 0x1842 <SMTICK4+0x22a>
    182a:	8f ef       	ldi	r24, 0xFF	; 255
    182c:	90 e0       	ldi	r25, 0x00	; 0
    182e:	a0 e0       	ldi	r26, 0x00	; 0
    1830:	b0 e0       	ldi	r27, 0x00	; 0
    1832:	80 93 e0 01 	sts	0x01E0, r24	; 0x8001e0 <value>
    1836:	90 93 e1 01 	sts	0x01E1, r25	; 0x8001e1 <value+0x1>
    183a:	a0 93 e2 01 	sts	0x01E2, r26	; 0x8001e2 <value+0x2>
    183e:	b0 93 e3 01 	sts	0x01E3, r27	; 0x8001e3 <value+0x3>
    1842:	80 91 de 01 	lds	r24, 0x01DE	; 0x8001de <inputState>
    1846:	81 30       	cpi	r24, 0x01	; 1
    1848:	49 f0       	breq	.+18     	; 0x185c <SMTICK4+0x244>
    184a:	18 f0       	brcs	.+6      	; 0x1852 <SMTICK4+0x23a>
    184c:	82 30       	cpi	r24, 0x02	; 2
    184e:	59 f0       	breq	.+22     	; 0x1866 <SMTICK4+0x24e>
    1850:	0e c0       	rjmp	.+28     	; 0x186e <SMTICK4+0x256>
    1852:	90 91 e0 01 	lds	r25, 0x01E0	; 0x8001e0 <value>
    1856:	90 93 ed 01 	sts	0x01ED, r25	; 0x8001ed <tempColor>
    185a:	09 c0       	rjmp	.+18     	; 0x186e <SMTICK4+0x256>
    185c:	90 91 e0 01 	lds	r25, 0x01E0	; 0x8001e0 <value>
    1860:	90 93 ee 01 	sts	0x01EE, r25	; 0x8001ee <tempColor+0x1>
    1864:	04 c0       	rjmp	.+8      	; 0x186e <SMTICK4+0x256>
    1866:	90 91 e0 01 	lds	r25, 0x01E0	; 0x8001e0 <value>
    186a:	90 93 ef 01 	sts	0x01EF, r25	; 0x8001ef <tempColor+0x2>
    186e:	8f 5f       	subi	r24, 0xFF	; 255
    1870:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <inputState>
    1874:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <inputs>
    1878:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <value>
    187c:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <value+0x1>
    1880:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <value+0x2>
    1884:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <value+0x3>
    1888:	79 de       	rcall	.-782    	; 0x157c <GetKeypadKey>
    188a:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <lastInput>
    188e:	c4 e0       	ldi	r28, 0x04	; 4
    1890:	d0 e0       	ldi	r29, 0x00	; 0
    1892:	19 c0       	rjmp	.+50     	; 0x18c6 <SMTICK4+0x2ae>
    1894:	73 de       	rcall	.-794    	; 0x157c <GetKeypadKey>
    1896:	81 11       	cpse	r24, r1
    1898:	08 c0       	rjmp	.+16     	; 0x18aa <SMTICK4+0x292>
    189a:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <lastInput>
    189e:	c4 e0       	ldi	r28, 0x04	; 4
    18a0:	d0 e0       	ldi	r29, 0x00	; 0
    18a2:	11 c0       	rjmp	.+34     	; 0x18c6 <SMTICK4+0x2ae>
    18a4:	c1 e0       	ldi	r28, 0x01	; 1
    18a6:	d0 e0       	ldi	r29, 0x00	; 0
    18a8:	0e c0       	rjmp	.+28     	; 0x18c6 <SMTICK4+0x2ae>
    18aa:	c4 e0       	ldi	r28, 0x04	; 4
    18ac:	d0 e0       	ldi	r29, 0x00	; 0
    18ae:	0b c0       	rjmp	.+22     	; 0x18c6 <SMTICK4+0x2ae>
    18b0:	65 de       	rcall	.-822    	; 0x157c <GetKeypadKey>
    18b2:	90 91 dc 01 	lds	r25, 0x01DC	; 0x8001dc <lastInput>
    18b6:	89 13       	cpse	r24, r25
    18b8:	2c cf       	rjmp	.-424    	; 0x1712 <SMTICK4+0xfa>
    18ba:	ec cf       	rjmp	.-40     	; 0x1894 <SMTICK4+0x27c>
    18bc:	c0 e0       	ldi	r28, 0x00	; 0
    18be:	d0 e0       	ldi	r29, 0x00	; 0
    18c0:	02 c0       	rjmp	.+4      	; 0x18c6 <SMTICK4+0x2ae>
    18c2:	c3 e0       	ldi	r28, 0x03	; 3
    18c4:	d0 e0       	ldi	r29, 0x00	; 0
    18c6:	ce 01       	movw	r24, r28
    18c8:	df 91       	pop	r29
    18ca:	cf 91       	pop	r28
    18cc:	08 95       	ret

000018ce <Init_PWM>:
    18ce:	e0 eb       	ldi	r30, 0xB0	; 176
    18d0:	f0 e0       	ldi	r31, 0x00	; 0
    18d2:	80 81       	ld	r24, Z
    18d4:	83 60       	ori	r24, 0x03	; 3
    18d6:	80 83       	st	Z, r24
    18d8:	e1 eb       	ldi	r30, 0xB1	; 177
    18da:	f0 e0       	ldi	r31, 0x00	; 0
    18dc:	80 81       	ld	r24, Z
    18de:	82 60       	ori	r24, 0x02	; 2
    18e0:	80 83       	st	Z, r24
    18e2:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    18e6:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    18ea:	08 95       	ret

000018ec <pwm_enable>:
    18ec:	81 30       	cpi	r24, 0x01	; 1
    18ee:	31 f4       	brne	.+12     	; 0x18fc <pwm_enable+0x10>
    18f0:	e0 eb       	ldi	r30, 0xB0	; 176
    18f2:	f0 e0       	ldi	r31, 0x00	; 0
    18f4:	80 81       	ld	r24, Z
    18f6:	80 68       	ori	r24, 0x80	; 128
    18f8:	80 83       	st	Z, r24
    18fa:	08 95       	ret
    18fc:	82 30       	cpi	r24, 0x02	; 2
    18fe:	29 f4       	brne	.+10     	; 0x190a <pwm_enable+0x1e>
    1900:	e0 eb       	ldi	r30, 0xB0	; 176
    1902:	f0 e0       	ldi	r31, 0x00	; 0
    1904:	80 81       	ld	r24, Z
    1906:	80 62       	ori	r24, 0x20	; 32
    1908:	80 83       	st	Z, r24
    190a:	08 95       	ret

0000190c <pwm_disable>:
    190c:	81 30       	cpi	r24, 0x01	; 1
    190e:	31 f4       	brne	.+12     	; 0x191c <pwm_disable+0x10>
    1910:	e0 eb       	ldi	r30, 0xB0	; 176
    1912:	f0 e0       	ldi	r31, 0x00	; 0
    1914:	80 81       	ld	r24, Z
    1916:	8f 77       	andi	r24, 0x7F	; 127
    1918:	80 83       	st	Z, r24
    191a:	08 95       	ret
    191c:	82 30       	cpi	r24, 0x02	; 2
    191e:	29 f4       	brne	.+10     	; 0x192a <pwm_disable+0x1e>
    1920:	e0 eb       	ldi	r30, 0xB0	; 176
    1922:	f0 e0       	ldi	r31, 0x00	; 0
    1924:	80 81       	ld	r24, Z
    1926:	8f 7d       	andi	r24, 0xDF	; 223
    1928:	80 83       	st	Z, r24
    192a:	08 95       	ret

0000192c <SMTICK2>:
    192c:	00 97       	sbiw	r24, 0x00	; 0
    192e:	19 f0       	breq	.+6      	; 0x1936 <SMTICK2+0xa>
    1930:	01 97       	sbiw	r24, 0x01	; 1
    1932:	31 f0       	breq	.+12     	; 0x1940 <SMTICK2+0x14>
    1934:	34 c0       	rjmp	.+104    	; 0x199e <SMTICK2+0x72>
    1936:	6b e4       	ldi	r22, 0x4B	; 75
    1938:	71 e0       	ldi	r23, 0x01	; 1
    193a:	81 e0       	ldi	r24, 0x01	; 1
    193c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
    1940:	8b b1       	in	r24, 0x0b	; 11
    1942:	e3 e0       	ldi	r30, 0x03	; 3
    1944:	f1 e0       	ldi	r31, 0x01	; 1
    1946:	90 81       	ld	r25, Z
    1948:	9f 73       	andi	r25, 0x3F	; 63
    194a:	80 7c       	andi	r24, 0xC0	; 192
    194c:	89 2b       	or	r24, r25
    194e:	8b b9       	out	0x0b, r24	; 11
    1950:	8b b1       	in	r24, 0x0b	; 11
    1952:	90 81       	ld	r25, Z
    1954:	92 95       	swap	r25
    1956:	96 95       	lsr	r25
    1958:	96 95       	lsr	r25
    195a:	93 70       	andi	r25, 0x03	; 3
    195c:	8c 7f       	andi	r24, 0xFC	; 252
    195e:	89 2b       	or	r24, r25
    1960:	88 b9       	out	0x08, r24	; 8
    1962:	81 81       	ldd	r24, Z+1	; 0x01
    1964:	88 23       	and	r24, r24
    1966:	39 f0       	breq	.+14     	; 0x1976 <SMTICK2+0x4a>
    1968:	81 e0       	ldi	r24, 0x01	; 1
    196a:	c0 df       	rcall	.-128    	; 0x18ec <pwm_enable>
    196c:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <mainColor+0x1>
    1970:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    1974:	02 c0       	rjmp	.+4      	; 0x197a <SMTICK2+0x4e>
    1976:	81 e0       	ldi	r24, 0x01	; 1
    1978:	c9 df       	rcall	.-110    	; 0x190c <pwm_disable>
    197a:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <mainColor+0x2>
    197e:	88 23       	and	r24, r24
    1980:	49 f0       	breq	.+18     	; 0x1994 <SMTICK2+0x68>
    1982:	82 e0       	ldi	r24, 0x02	; 2
    1984:	b3 df       	rcall	.-154    	; 0x18ec <pwm_enable>
    1986:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <mainColor+0x2>
    198a:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    198e:	81 e0       	ldi	r24, 0x01	; 1
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	08 95       	ret
    1994:	82 e0       	ldi	r24, 0x02	; 2
    1996:	ba df       	rcall	.-140    	; 0x190c <pwm_disable>
    1998:	81 e0       	ldi	r24, 0x01	; 1
    199a:	90 e0       	ldi	r25, 0x00	; 0
    199c:	08 95       	ret
    199e:	80 e0       	ldi	r24, 0x00	; 0
    19a0:	90 e0       	ldi	r25, 0x00	; 0
    19a2:	08 95       	ret

000019a4 <getColor>:

/************************************************************************/
/* Helper Functions                                                     */
/************************************************************************/

color getColor(int x, int y, int radius, double r){
    19a4:	4f 92       	push	r4
    19a6:	5f 92       	push	r5
    19a8:	6f 92       	push	r6
    19aa:	7f 92       	push	r7
    19ac:	8f 92       	push	r8
    19ae:	9f 92       	push	r9
    19b0:	af 92       	push	r10
    19b2:	bf 92       	push	r11
    19b4:	ef 92       	push	r14
    19b6:	ff 92       	push	r15
    19b8:	0f 93       	push	r16
    19ba:	1f 93       	push	r17
    19bc:	cf 93       	push	r28
    19be:	df 93       	push	r29
    19c0:	7b 01       	movw	r14, r22
    19c2:	ea 01       	movw	r28, r20
    19c4:	48 01       	movw	r8, r16
    19c6:	59 01       	movw	r10, r18
	
	double phi = atan2(y,x);
    19c8:	bc 01       	movw	r22, r24
    19ca:	99 0f       	add	r25, r25
    19cc:	88 0b       	sbc	r24, r24
    19ce:	99 0b       	sbc	r25, r25
    19d0:	65 d5       	rcall	.+2762   	; 0x249c <__floatsisf>
    19d2:	2b 01       	movw	r4, r22
    19d4:	3c 01       	movw	r6, r24
    19d6:	b7 01       	movw	r22, r14
    19d8:	ff 0c       	add	r15, r15
    19da:	88 0b       	sbc	r24, r24
    19dc:	99 0b       	sbc	r25, r25
    19de:	5e d5       	rcall	.+2748   	; 0x249c <__floatsisf>
    19e0:	a3 01       	movw	r20, r6
    19e2:	92 01       	movw	r18, r4
    19e4:	66 d4       	rcall	.+2252   	; 0x22b2 <atan2>
	unsigned long hue = (unsigned long)((phi + M_PI) / (2.0 * M_PI) * 360.0);
    19e6:	2b ed       	ldi	r18, 0xDB	; 219
    19e8:	3f e0       	ldi	r19, 0x0F	; 15
    19ea:	49 e4       	ldi	r20, 0x49	; 73
    19ec:	50 e4       	ldi	r21, 0x40	; 64
    19ee:	ee d3       	rcall	.+2012   	; 0x21cc <__addsf3>
    19f0:	2b ed       	ldi	r18, 0xDB	; 219
    19f2:	3f e0       	ldi	r19, 0x0F	; 15
    19f4:	49 ec       	ldi	r20, 0xC9	; 201
    19f6:	50 e4       	ldi	r21, 0x40	; 64
    19f8:	b6 d4       	rcall	.+2412   	; 0x2366 <__divsf3>
    19fa:	20 e0       	ldi	r18, 0x00	; 0
    19fc:	30 e0       	ldi	r19, 0x00	; 0
    19fe:	44 eb       	ldi	r20, 0xB4	; 180
    1a00:	53 e4       	ldi	r21, 0x43	; 67
    1a02:	65 d6       	rcall	.+3274   	; 0x26ce <__mulsf3>
    1a04:	1d d5       	rcall	.+2618   	; 0x2440 <__fixunssfsi>
    1a06:	66 2e       	mov	r6, r22
    1a08:	77 2e       	mov	r7, r23
    1a0a:	e8 2e       	mov	r14, r24
    1a0c:	f9 2e       	mov	r15, r25
	unsigned char saturation = (unsigned char)(r / (double)radius * 255.0);
    1a0e:	be 01       	movw	r22, r28
    1a10:	dd 0f       	add	r29, r29
    1a12:	88 0b       	sbc	r24, r24
    1a14:	99 0b       	sbc	r25, r25
    1a16:	42 d5       	rcall	.+2692   	; 0x249c <__floatsisf>
    1a18:	9b 01       	movw	r18, r22
    1a1a:	ac 01       	movw	r20, r24
    1a1c:	c5 01       	movw	r24, r10
    1a1e:	b4 01       	movw	r22, r8
    1a20:	a2 d4       	rcall	.+2372   	; 0x2366 <__divsf3>
    1a22:	20 e0       	ldi	r18, 0x00	; 0
    1a24:	30 e0       	ldi	r19, 0x00	; 0
    1a26:	4f e7       	ldi	r20, 0x7F	; 127
    1a28:	53 e4       	ldi	r21, 0x43	; 67
    1a2a:	51 d6       	rcall	.+3234   	; 0x26ce <__mulsf3>
    1a2c:	09 d5       	rcall	.+2578   	; 0x2440 <__fixunssfsi>
    1a2e:	c6 2f       	mov	r28, r22
	unsigned char value = 255;
	printf("%c", saturation);
    1a30:	86 2f       	mov	r24, r22
    1a32:	90 e0       	ldi	r25, 0x00	; 0
    1a34:	e1 d7       	rcall	.+4034   	; 0x29f8 <putchar>
	printf("%c", hue);
    1a36:	ff 92       	push	r15
    1a38:	ef 92       	push	r14
    1a3a:	7f 92       	push	r7
    1a3c:	6f 92       	push	r6
    1a3e:	87 e5       	ldi	r24, 0x57	; 87
    1a40:	91 e0       	ldi	r25, 0x01	; 1
    1a42:	9f 93       	push	r25
    1a44:	8f 93       	push	r24
    1a46:	c5 d7       	rcall	.+3978   	; 0x29d2 <printf>
    1a48:	2f ef       	ldi	r18, 0xFF	; 255
	return hsvtorgb(hue, saturation, value);
    1a4a:	4c 2f       	mov	r20, r28
    1a4c:	66 2d       	mov	r22, r6
    1a4e:	77 2d       	mov	r23, r7
    1a50:	8e 2d       	mov	r24, r14
    1a52:	9f 2d       	mov	r25, r15
    1a54:	0e 94 f5 02 	call	0x5ea	; 0x5ea <hsvtorgb>
    1a58:	0f 90       	pop	r0
    1a5a:	0f 90       	pop	r0
    1a5c:	0f 90       	pop	r0
    1a5e:	0f 90       	pop	r0
    1a60:	0f 90       	pop	r0
    1a62:	0f 90       	pop	r0
    1a64:	df 91       	pop	r29
}
    1a66:	cf 91       	pop	r28
    1a68:	1f 91       	pop	r17
    1a6a:	0f 91       	pop	r16
    1a6c:	ff 90       	pop	r15
    1a6e:	ef 90       	pop	r14
    1a70:	bf 90       	pop	r11
    1a72:	af 90       	pop	r10
    1a74:	9f 90       	pop	r9
    1a76:	8f 90       	pop	r8
    1a78:	7f 90       	pop	r7
    1a7a:	6f 90       	pop	r6
    1a7c:	5f 90       	pop	r5
    1a7e:	4f 90       	pop	r4
    1a80:	08 95       	ret

00001a82 <getPosition>:
    1a82:	4f 92       	push	r4

Point getPosition(hsv Color, int radius){
    1a84:	5f 92       	push	r5
    1a86:	6f 92       	push	r6
    1a88:	7f 92       	push	r7
    1a8a:	8f 92       	push	r8
    1a8c:	9f 92       	push	r9
    1a8e:	af 92       	push	r10
    1a90:	bf 92       	push	r11
    1a92:	cf 92       	push	r12
    1a94:	df 92       	push	r13
    1a96:	ef 92       	push	r14
    1a98:	ff 92       	push	r15
    1a9a:	1f 93       	push	r17
    1a9c:	cf 93       	push	r28
    1a9e:	df 93       	push	r29
    1aa0:	cd b7       	in	r28, 0x3d	; 61
    1aa2:	de b7       	in	r29, 0x3e	; 62
    1aa4:	2a 97       	sbiw	r28, 0x0a	; 10
    1aa6:	0f b6       	in	r0, 0x3f	; 63
    1aa8:	f8 94       	cli
    1aaa:	de bf       	out	0x3e, r29	; 62
    1aac:	0f be       	out	0x3f, r0	; 63
    1aae:	cd bf       	out	0x3d, r28	; 61
    1ab0:	49 83       	std	Y+1, r20	; 0x01
    1ab2:	5a 83       	std	Y+2, r21	; 0x02
    1ab4:	6b 83       	std	Y+3, r22	; 0x03
    1ab6:	7c 83       	std	Y+4, r23	; 0x04
    1ab8:	59 01       	movw	r10, r18
    1aba:	49 80       	ldd	r4, Y+1	; 0x01
    1abc:	5a 80       	ldd	r5, Y+2	; 0x02
    1abe:	6b 80       	ldd	r6, Y+3	; 0x03
    1ac0:	7c 80       	ldd	r7, Y+4	; 0x04
	double saturation = (double)Color.saturation/255.0;
    1ac2:	68 2f       	mov	r22, r24
    1ac4:	70 e0       	ldi	r23, 0x00	; 0
    1ac6:	80 e0       	ldi	r24, 0x00	; 0
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	e6 d4       	rcall	.+2508   	; 0x2498 <__floatunsisf>
    1acc:	20 e0       	ldi	r18, 0x00	; 0
    1ace:	30 e0       	ldi	r19, 0x00	; 0
    1ad0:	4f e7       	ldi	r20, 0x7F	; 127
    1ad2:	53 e4       	ldi	r21, 0x43	; 67
    1ad4:	48 d4       	rcall	.+2192   	; 0x2366 <__divsf3>
    1ad6:	6b 01       	movw	r12, r22
    1ad8:	7c 01       	movw	r14, r24
	Point point = {0,0};
		
	if(Color.hue >= 0 && Color.hue <= 90){
    1ada:	8b e5       	ldi	r24, 0x5B	; 91
    1adc:	48 16       	cp	r4, r24
    1ade:	51 04       	cpc	r5, r1
    1ae0:	61 04       	cpc	r6, r1
    1ae2:	71 04       	cpc	r7, r1
    1ae4:	08 f0       	brcs	.+2      	; 0x1ae8 <getPosition+0x66>
    1ae6:	3f c0       	rjmp	.+126    	; 0x1b66 <getPosition+0xe4>
		point.x = radius - cos(DEGTORAD(Color.hue))*(saturation*radius);
    1ae8:	c3 01       	movw	r24, r6
    1aea:	b2 01       	movw	r22, r4
    1aec:	d5 d4       	rcall	.+2474   	; 0x2498 <__floatunsisf>
    1aee:	2b ed       	ldi	r18, 0xDB	; 219
    1af0:	3f e0       	ldi	r19, 0x0F	; 15
    1af2:	49 e4       	ldi	r20, 0x49	; 73
    1af4:	50 e4       	ldi	r21, 0x40	; 64
    1af6:	eb d5       	rcall	.+3030   	; 0x26ce <__mulsf3>
    1af8:	20 e0       	ldi	r18, 0x00	; 0
    1afa:	30 e0       	ldi	r19, 0x00	; 0
    1afc:	44 e3       	ldi	r20, 0x34	; 52
    1afe:	53 e4       	ldi	r21, 0x43	; 67
    1b00:	32 d4       	rcall	.+2148   	; 0x2366 <__divsf3>
    1b02:	2b 01       	movw	r4, r22
    1b04:	3c 01       	movw	r6, r24
    1b06:	2c d4       	rcall	.+2136   	; 0x2360 <cos>
    1b08:	6f 83       	std	Y+7, r22	; 0x07
    1b0a:	78 87       	std	Y+8, r23	; 0x08
    1b0c:	89 87       	std	Y+9, r24	; 0x09
    1b0e:	9a 87       	std	Y+10, r25	; 0x0a
    1b10:	b5 01       	movw	r22, r10
    1b12:	bb 0c       	add	r11, r11
    1b14:	88 0b       	sbc	r24, r24
    1b16:	99 0b       	sbc	r25, r25
    1b18:	c1 d4       	rcall	.+2434   	; 0x249c <__floatsisf>
    1b1a:	4b 01       	movw	r8, r22
    1b1c:	5c 01       	movw	r10, r24
    1b1e:	9b 01       	movw	r18, r22
    1b20:	ac 01       	movw	r20, r24
    1b22:	c7 01       	movw	r24, r14
    1b24:	b6 01       	movw	r22, r12
    1b26:	d3 d5       	rcall	.+2982   	; 0x26ce <__mulsf3>
    1b28:	6b 01       	movw	r12, r22
    1b2a:	7c 01       	movw	r14, r24
    1b2c:	9b 01       	movw	r18, r22
    1b2e:	ac 01       	movw	r20, r24
    1b30:	6f 81       	ldd	r22, Y+7	; 0x07
    1b32:	78 85       	ldd	r23, Y+8	; 0x08
    1b34:	89 85       	ldd	r24, Y+9	; 0x09
    1b36:	9a 85       	ldd	r25, Y+10	; 0x0a
    1b38:	ca d5       	rcall	.+2964   	; 0x26ce <__mulsf3>
    1b3a:	9b 01       	movw	r18, r22
    1b3c:	ac 01       	movw	r20, r24
    1b3e:	c5 01       	movw	r24, r10
    1b40:	b4 01       	movw	r22, r8
    1b42:	43 d3       	rcall	.+1670   	; 0x21ca <__subsf3>
    1b44:	7d d4       	rcall	.+2298   	; 0x2440 <__fixunssfsi>
    1b46:	16 2f       	mov	r17, r22
		point.y = radius - sin(DEGTORAD(Color.hue))*(saturation*radius);
    1b48:	c3 01       	movw	r24, r6
    1b4a:	b2 01       	movw	r22, r4
    1b4c:	23 d6       	rcall	.+3142   	; 0x2794 <sin>
    1b4e:	9b 01       	movw	r18, r22
    1b50:	ac 01       	movw	r20, r24
    1b52:	c7 01       	movw	r24, r14
    1b54:	b6 01       	movw	r22, r12
    1b56:	bb d5       	rcall	.+2934   	; 0x26ce <__mulsf3>
    1b58:	9b 01       	movw	r18, r22
    1b5a:	ac 01       	movw	r20, r24
    1b5c:	c5 01       	movw	r24, r10
    1b5e:	b4 01       	movw	r22, r8
    1b60:	34 d3       	rcall	.+1640   	; 0x21ca <__subsf3>
    1b62:	6e d4       	rcall	.+2268   	; 0x2440 <__fixunssfsi>
    1b64:	e1 c0       	rjmp	.+450    	; 0x1d28 <getPosition+0x2a6>
    1b66:	d3 01       	movw	r26, r6
    1b68:	c2 01       	movw	r24, r4
	} else if(Color.hue > 90 && Color.hue <= 180){
    1b6a:	8b 55       	subi	r24, 0x5B	; 91
    1b6c:	91 09       	sbc	r25, r1
    1b6e:	a1 09       	sbc	r26, r1
    1b70:	b1 09       	sbc	r27, r1
    1b72:	8a 35       	cpi	r24, 0x5A	; 90
    1b74:	91 05       	cpc	r25, r1
    1b76:	a1 05       	cpc	r26, r1
    1b78:	b1 05       	cpc	r27, r1
    1b7a:	08 f0       	brcs	.+2      	; 0x1b7e <getPosition+0xfc>
    1b7c:	44 c0       	rjmp	.+136    	; 0x1c06 <getPosition+0x184>
    1b7e:	84 eb       	ldi	r24, 0xB4	; 180
		point.x = radius + cos(DEGTORAD(180-Color.hue))*saturation*radius;
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	a0 e0       	ldi	r26, 0x00	; 0
    1b84:	b0 e0       	ldi	r27, 0x00	; 0
    1b86:	bc 01       	movw	r22, r24
    1b88:	cd 01       	movw	r24, r26
    1b8a:	64 19       	sub	r22, r4
    1b8c:	75 09       	sbc	r23, r5
    1b8e:	86 09       	sbc	r24, r6
    1b90:	97 09       	sbc	r25, r7
    1b92:	82 d4       	rcall	.+2308   	; 0x2498 <__floatunsisf>
    1b94:	2b ed       	ldi	r18, 0xDB	; 219
    1b96:	3f e0       	ldi	r19, 0x0F	; 15
    1b98:	49 e4       	ldi	r20, 0x49	; 73
    1b9a:	50 e4       	ldi	r21, 0x40	; 64
    1b9c:	98 d5       	rcall	.+2864   	; 0x26ce <__mulsf3>
    1b9e:	20 e0       	ldi	r18, 0x00	; 0
    1ba0:	30 e0       	ldi	r19, 0x00	; 0
    1ba2:	44 e3       	ldi	r20, 0x34	; 52
    1ba4:	53 e4       	ldi	r21, 0x43	; 67
    1ba6:	df d3       	rcall	.+1982   	; 0x2366 <__divsf3>
    1ba8:	2b 01       	movw	r4, r22
    1baa:	3c 01       	movw	r6, r24
    1bac:	d9 d3       	rcall	.+1970   	; 0x2360 <cos>
    1bae:	6f 83       	std	Y+7, r22	; 0x07
    1bb0:	78 87       	std	Y+8, r23	; 0x08
    1bb2:	89 87       	std	Y+9, r24	; 0x09
    1bb4:	9a 87       	std	Y+10, r25	; 0x0a
    1bb6:	b5 01       	movw	r22, r10
    1bb8:	bb 0c       	add	r11, r11
    1bba:	88 0b       	sbc	r24, r24
    1bbc:	99 0b       	sbc	r25, r25
    1bbe:	6e d4       	rcall	.+2268   	; 0x249c <__floatsisf>
    1bc0:	4b 01       	movw	r8, r22
    1bc2:	5c 01       	movw	r10, r24
    1bc4:	2f 81       	ldd	r18, Y+7	; 0x07
    1bc6:	38 85       	ldd	r19, Y+8	; 0x08
    1bc8:	49 85       	ldd	r20, Y+9	; 0x09
    1bca:	5a 85       	ldd	r21, Y+10	; 0x0a
    1bcc:	c7 01       	movw	r24, r14
    1bce:	b6 01       	movw	r22, r12
    1bd0:	7e d5       	rcall	.+2812   	; 0x26ce <__mulsf3>
    1bd2:	a5 01       	movw	r20, r10
    1bd4:	94 01       	movw	r18, r8
    1bd6:	7b d5       	rcall	.+2806   	; 0x26ce <__mulsf3>
    1bd8:	a5 01       	movw	r20, r10
    1bda:	94 01       	movw	r18, r8
    1bdc:	f7 d2       	rcall	.+1518   	; 0x21cc <__addsf3>
    1bde:	30 d4       	rcall	.+2144   	; 0x2440 <__fixunssfsi>
		point.y = radius - sin(DEGTORAD(180-Color.hue))*saturation*radius;
    1be0:	16 2f       	mov	r17, r22
    1be2:	c3 01       	movw	r24, r6
    1be4:	b2 01       	movw	r22, r4
    1be6:	d6 d5       	rcall	.+2988   	; 0x2794 <sin>
    1be8:	9b 01       	movw	r18, r22
    1bea:	ac 01       	movw	r20, r24
    1bec:	c7 01       	movw	r24, r14
    1bee:	b6 01       	movw	r22, r12
    1bf0:	6e d5       	rcall	.+2780   	; 0x26ce <__mulsf3>
    1bf2:	a5 01       	movw	r20, r10
    1bf4:	94 01       	movw	r18, r8
    1bf6:	6b d5       	rcall	.+2774   	; 0x26ce <__mulsf3>
    1bf8:	9b 01       	movw	r18, r22
    1bfa:	ac 01       	movw	r20, r24
    1bfc:	c5 01       	movw	r24, r10
    1bfe:	b4 01       	movw	r22, r8
    1c00:	e4 d2       	rcall	.+1480   	; 0x21ca <__subsf3>
    1c02:	1e d4       	rcall	.+2108   	; 0x2440 <__fixunssfsi>
    1c04:	91 c0       	rjmp	.+290    	; 0x1d28 <getPosition+0x2a6>
    1c06:	d3 01       	movw	r26, r6
    1c08:	c2 01       	movw	r24, r4
	} else if(Color.hue > 180 && Color.hue <= 270) {
    1c0a:	85 5b       	subi	r24, 0xB5	; 181
    1c0c:	91 09       	sbc	r25, r1
    1c0e:	a1 09       	sbc	r26, r1
    1c10:	b1 09       	sbc	r27, r1
    1c12:	8a 35       	cpi	r24, 0x5A	; 90
    1c14:	91 05       	cpc	r25, r1
    1c16:	a1 05       	cpc	r26, r1
    1c18:	b1 05       	cpc	r27, r1
    1c1a:	08 f0       	brcs	.+2      	; 0x1c1e <getPosition+0x19c>
    1c1c:	42 c0       	rjmp	.+132    	; 0x1ca2 <getPosition+0x220>
		point.x = radius + sin(DEGTORAD(270-Color.hue))*saturation*radius;
    1c1e:	8e e0       	ldi	r24, 0x0E	; 14
    1c20:	91 e0       	ldi	r25, 0x01	; 1
    1c22:	a0 e0       	ldi	r26, 0x00	; 0
    1c24:	b0 e0       	ldi	r27, 0x00	; 0
    1c26:	bc 01       	movw	r22, r24
    1c28:	cd 01       	movw	r24, r26
    1c2a:	64 19       	sub	r22, r4
    1c2c:	75 09       	sbc	r23, r5
    1c2e:	86 09       	sbc	r24, r6
    1c30:	97 09       	sbc	r25, r7
    1c32:	32 d4       	rcall	.+2148   	; 0x2498 <__floatunsisf>
    1c34:	2b ed       	ldi	r18, 0xDB	; 219
    1c36:	3f e0       	ldi	r19, 0x0F	; 15
    1c38:	49 e4       	ldi	r20, 0x49	; 73
    1c3a:	50 e4       	ldi	r21, 0x40	; 64
    1c3c:	48 d5       	rcall	.+2704   	; 0x26ce <__mulsf3>
    1c3e:	20 e0       	ldi	r18, 0x00	; 0
    1c40:	30 e0       	ldi	r19, 0x00	; 0
    1c42:	44 e3       	ldi	r20, 0x34	; 52
    1c44:	53 e4       	ldi	r21, 0x43	; 67
    1c46:	8f d3       	rcall	.+1822   	; 0x2366 <__divsf3>
    1c48:	2b 01       	movw	r4, r22
    1c4a:	3c 01       	movw	r6, r24
    1c4c:	a3 d5       	rcall	.+2886   	; 0x2794 <sin>
    1c4e:	6f 83       	std	Y+7, r22	; 0x07
    1c50:	78 87       	std	Y+8, r23	; 0x08
    1c52:	89 87       	std	Y+9, r24	; 0x09
    1c54:	9a 87       	std	Y+10, r25	; 0x0a
    1c56:	b5 01       	movw	r22, r10
    1c58:	bb 0c       	add	r11, r11
    1c5a:	88 0b       	sbc	r24, r24
    1c5c:	99 0b       	sbc	r25, r25
    1c5e:	1e d4       	rcall	.+2108   	; 0x249c <__floatsisf>
    1c60:	4b 01       	movw	r8, r22
    1c62:	5c 01       	movw	r10, r24
    1c64:	2f 81       	ldd	r18, Y+7	; 0x07
    1c66:	38 85       	ldd	r19, Y+8	; 0x08
    1c68:	49 85       	ldd	r20, Y+9	; 0x09
    1c6a:	5a 85       	ldd	r21, Y+10	; 0x0a
    1c6c:	c7 01       	movw	r24, r14
    1c6e:	b6 01       	movw	r22, r12
    1c70:	2e d5       	rcall	.+2652   	; 0x26ce <__mulsf3>
    1c72:	a5 01       	movw	r20, r10
    1c74:	94 01       	movw	r18, r8
    1c76:	2b d5       	rcall	.+2646   	; 0x26ce <__mulsf3>
    1c78:	a5 01       	movw	r20, r10
    1c7a:	94 01       	movw	r18, r8
    1c7c:	a7 d2       	rcall	.+1358   	; 0x21cc <__addsf3>
		point.y = radius + cos(DEGTORAD(270-Color.hue))*saturation*radius;
    1c7e:	e0 d3       	rcall	.+1984   	; 0x2440 <__fixunssfsi>
    1c80:	16 2f       	mov	r17, r22
    1c82:	c3 01       	movw	r24, r6
    1c84:	b2 01       	movw	r22, r4
    1c86:	6c d3       	rcall	.+1752   	; 0x2360 <cos>
    1c88:	9b 01       	movw	r18, r22
    1c8a:	ac 01       	movw	r20, r24
    1c8c:	c7 01       	movw	r24, r14
    1c8e:	b6 01       	movw	r22, r12
    1c90:	1e d5       	rcall	.+2620   	; 0x26ce <__mulsf3>
    1c92:	a5 01       	movw	r20, r10
    1c94:	94 01       	movw	r18, r8
    1c96:	1b d5       	rcall	.+2614   	; 0x26ce <__mulsf3>
    1c98:	a5 01       	movw	r20, r10
    1c9a:	94 01       	movw	r18, r8
    1c9c:	97 d2       	rcall	.+1326   	; 0x21cc <__addsf3>
    1c9e:	d0 d3       	rcall	.+1952   	; 0x2440 <__fixunssfsi>
    1ca0:	43 c0       	rjmp	.+134    	; 0x1d28 <getPosition+0x2a6>
    1ca2:	88 e6       	ldi	r24, 0x68	; 104
	} else {
		point.x = radius - cos(DEGTORAD(360-Color.hue))*saturation*radius;
    1ca4:	91 e0       	ldi	r25, 0x01	; 1
    1ca6:	a0 e0       	ldi	r26, 0x00	; 0
    1ca8:	b0 e0       	ldi	r27, 0x00	; 0
    1caa:	bc 01       	movw	r22, r24
    1cac:	cd 01       	movw	r24, r26
    1cae:	64 19       	sub	r22, r4
    1cb0:	75 09       	sbc	r23, r5
    1cb2:	86 09       	sbc	r24, r6
    1cb4:	97 09       	sbc	r25, r7
    1cb6:	f0 d3       	rcall	.+2016   	; 0x2498 <__floatunsisf>
    1cb8:	2b ed       	ldi	r18, 0xDB	; 219
    1cba:	3f e0       	ldi	r19, 0x0F	; 15
    1cbc:	49 e4       	ldi	r20, 0x49	; 73
    1cbe:	50 e4       	ldi	r21, 0x40	; 64
    1cc0:	06 d5       	rcall	.+2572   	; 0x26ce <__mulsf3>
    1cc2:	20 e0       	ldi	r18, 0x00	; 0
    1cc4:	30 e0       	ldi	r19, 0x00	; 0
    1cc6:	44 e3       	ldi	r20, 0x34	; 52
    1cc8:	53 e4       	ldi	r21, 0x43	; 67
    1cca:	4d d3       	rcall	.+1690   	; 0x2366 <__divsf3>
    1ccc:	2b 01       	movw	r4, r22
    1cce:	3c 01       	movw	r6, r24
    1cd0:	47 d3       	rcall	.+1678   	; 0x2360 <cos>
    1cd2:	6f 83       	std	Y+7, r22	; 0x07
    1cd4:	78 87       	std	Y+8, r23	; 0x08
    1cd6:	89 87       	std	Y+9, r24	; 0x09
    1cd8:	9a 87       	std	Y+10, r25	; 0x0a
    1cda:	b5 01       	movw	r22, r10
    1cdc:	bb 0c       	add	r11, r11
    1cde:	88 0b       	sbc	r24, r24
    1ce0:	99 0b       	sbc	r25, r25
    1ce2:	dc d3       	rcall	.+1976   	; 0x249c <__floatsisf>
    1ce4:	4b 01       	movw	r8, r22
    1ce6:	5c 01       	movw	r10, r24
    1ce8:	2f 81       	ldd	r18, Y+7	; 0x07
    1cea:	38 85       	ldd	r19, Y+8	; 0x08
    1cec:	49 85       	ldd	r20, Y+9	; 0x09
    1cee:	5a 85       	ldd	r21, Y+10	; 0x0a
    1cf0:	c7 01       	movw	r24, r14
    1cf2:	b6 01       	movw	r22, r12
    1cf4:	ec d4       	rcall	.+2520   	; 0x26ce <__mulsf3>
    1cf6:	a5 01       	movw	r20, r10
    1cf8:	94 01       	movw	r18, r8
    1cfa:	e9 d4       	rcall	.+2514   	; 0x26ce <__mulsf3>
    1cfc:	9b 01       	movw	r18, r22
    1cfe:	ac 01       	movw	r20, r24
    1d00:	c5 01       	movw	r24, r10
    1d02:	b4 01       	movw	r22, r8
    1d04:	62 d2       	rcall	.+1220   	; 0x21ca <__subsf3>
    1d06:	9c d3       	rcall	.+1848   	; 0x2440 <__fixunssfsi>
    1d08:	16 2f       	mov	r17, r22
    1d0a:	c3 01       	movw	r24, r6
    1d0c:	b2 01       	movw	r22, r4
		point.y = radius + sin(DEGTORAD(360-Color.hue))*saturation*radius;
    1d0e:	42 d5       	rcall	.+2692   	; 0x2794 <sin>
    1d10:	9b 01       	movw	r18, r22
    1d12:	ac 01       	movw	r20, r24
    1d14:	c7 01       	movw	r24, r14
    1d16:	b6 01       	movw	r22, r12
    1d18:	da d4       	rcall	.+2484   	; 0x26ce <__mulsf3>
    1d1a:	a5 01       	movw	r20, r10
    1d1c:	94 01       	movw	r18, r8
    1d1e:	d7 d4       	rcall	.+2478   	; 0x26ce <__mulsf3>
    1d20:	a5 01       	movw	r20, r10
    1d22:	94 01       	movw	r18, r8
    1d24:	53 d2       	rcall	.+1190   	; 0x21cc <__addsf3>
    1d26:	8c d3       	rcall	.+1816   	; 0x2440 <__fixunssfsi>
    1d28:	84 e0       	ldi	r24, 0x04	; 4
    1d2a:	81 0f       	add	r24, r17
    1d2c:	94 e1       	ldi	r25, 0x14	; 20
    1d2e:	96 0f       	add	r25, r22
    1d30:	2a 96       	adiw	r28, 0x0a	; 10
    1d32:	0f b6       	in	r0, 0x3f	; 63
    1d34:	f8 94       	cli
	}
	point.x += DISTX;
	point.y += DISTY;
	return point;
}
    1d36:	de bf       	out	0x3e, r29	; 62
    1d38:	0f be       	out	0x3f, r0	; 63
    1d3a:	cd bf       	out	0x3d, r28	; 61
    1d3c:	df 91       	pop	r29
    1d3e:	cf 91       	pop	r28
    1d40:	1f 91       	pop	r17
    1d42:	ff 90       	pop	r15
    1d44:	ef 90       	pop	r14
    1d46:	df 90       	pop	r13
    1d48:	cf 90       	pop	r12
    1d4a:	bf 90       	pop	r11
    1d4c:	af 90       	pop	r10
    1d4e:	9f 90       	pop	r9
    1d50:	8f 90       	pop	r8
    1d52:	7f 90       	pop	r7
    1d54:	6f 90       	pop	r6
    1d56:	5f 90       	pop	r5
    1d58:	4f 90       	pop	r4
    1d5a:	08 95       	ret

00001d5c <drawCircle>:
    1d5c:	a0 e0       	ldi	r26, 0x00	; 0
    1d5e:	b0 e0       	ldi	r27, 0x00	; 0
    1d60:	e3 eb       	ldi	r30, 0xB3	; 179
    1d62:	fe e0       	ldi	r31, 0x0E	; 14
    1d64:	e0 c5       	rjmp	.+3008   	; 0x2926 <__prologue_saves__+0x8>
    1d66:	68 94       	set
    1d68:	66 24       	eor	r6, r6

void drawCircle(void) {
	int radius = 60;
	for(int x = -radius; x < radius; x++){
		for(int y = -radius; y < radius; y++){
			double r = sqrt(x*x + y*y);
    1d6a:	62 f8       	bld	r6, 2
	return point;
}

void drawCircle(void) {
	int radius = 60;
	for(int x = -radius; x < radius; x++){
    1d6c:	0f 2e       	mov	r0, r31
    1d6e:	f4 ec       	ldi	r31, 0xC4	; 196
    1d70:	af 2e       	mov	r10, r31
    1d72:	bb 24       	eor	r11, r11
    1d74:	ba 94       	dec	r11
    1d76:	f0 2d       	mov	r31, r0
    1d78:	33 c0       	rjmp	.+102    	; 0x1de0 <drawCircle+0x84>
		for(int y = -radius; y < radius; y++){
			double r = sqrt(x*x + y*y);
    1d7a:	88 9c       	mul	r8, r8
    1d7c:	60 01       	movw	r12, r0
    1d7e:	89 9c       	mul	r8, r9
    1d80:	d0 0c       	add	r13, r0
    1d82:	d0 0c       	add	r13, r0
    1d84:	11 24       	eor	r1, r1
    1d86:	cc 0e       	add	r12, r28
    1d88:	dd 1e       	adc	r13, r29
    1d8a:	0d 2c       	mov	r0, r13
    1d8c:	00 0c       	add	r0, r0
    1d8e:	ee 08       	sbc	r14, r14
    1d90:	ff 08       	sbc	r15, r15
    1d92:	c7 01       	movw	r24, r14
    1d94:	b6 01       	movw	r22, r12
    1d96:	82 d3       	rcall	.+1796   	; 0x249c <__floatsisf>
    1d98:	07 d5       	rcall	.+2574   	; 0x27a8 <sqrt>
    1d9a:	6b 01       	movw	r12, r22
    1d9c:	7c 01       	movw	r14, r24
			if(r < radius){
    1d9e:	20 e0       	ldi	r18, 0x00	; 0
    1da0:	30 e0       	ldi	r19, 0x00	; 0
    1da2:	40 e7       	ldi	r20, 0x70	; 112
    1da4:	52 e4       	ldi	r21, 0x42	; 66
    1da6:	d8 d2       	rcall	.+1456   	; 0x2358 <__cmpsf2>
    1da8:	88 23       	and	r24, r24
    1daa:	64 f4       	brge	.+24     	; 0x1dc4 <drawCircle+0x68>
				byte adjustedX = x + radius; // convert x from [-50, 50] to [0, 100] (the coordinates of the image data array)
				byte adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)
				TFT_DrawPixel(adjustedX+DISTX,adjustedY+DISTY,TFT_ColorToInt(getColor(x,y,radius, r)));
    1dac:	97 01       	movw	r18, r14
    1dae:	86 01       	movw	r16, r12
    1db0:	4c e3       	ldi	r20, 0x3C	; 60
    1db2:	50 e0       	ldi	r21, 0x00	; 0
    1db4:	b4 01       	movw	r22, r8
    1db6:	c5 01       	movw	r24, r10
    1db8:	f5 dd       	rcall	.-1046   	; 0x19a4 <getColor>
    1dba:	79 d8       	rcall	.-3854   	; 0xeae <TFT_ColorToInt>
    1dbc:	ac 01       	movw	r20, r24
    1dbe:	67 2d       	mov	r22, r7
    1dc0:	86 2d       	mov	r24, r6
    1dc2:	a9 d8       	rcall	.-3758   	; 0xf16 <TFT_DrawPixel>
}

void drawCircle(void) {
	int radius = 60;
	for(int x = -radius; x < radius; x++){
		for(int y = -radius; y < radius; y++){
    1dc4:	8f ef       	ldi	r24, 0xFF	; 255
    1dc6:	88 1a       	sub	r8, r24
    1dc8:	98 0a       	sbc	r9, r24
    1dca:	73 94       	inc	r7
    1dcc:	8c e8       	ldi	r24, 0x8C	; 140
    1dce:	78 12       	cpse	r7, r24
    1dd0:	d4 cf       	rjmp	.-88     	; 0x1d7a <drawCircle+0x1e>
	return point;
}

void drawCircle(void) {
	int radius = 60;
	for(int x = -radius; x < radius; x++){
    1dd2:	8f ef       	ldi	r24, 0xFF	; 255
    1dd4:	a8 1a       	sub	r10, r24
    1dd6:	b8 0a       	sbc	r11, r24
    1dd8:	63 94       	inc	r6
    1dda:	8c e7       	ldi	r24, 0x7C	; 124
    1ddc:	68 16       	cp	r6, r24
    1dde:	89 f0       	breq	.+34     	; 0x1e02 <drawCircle+0xa6>
		for(int y = -radius; y < radius; y++){
			double r = sqrt(x*x + y*y);
    1de0:	aa 9c       	mul	r10, r10
    1de2:	e0 01       	movw	r28, r0
    1de4:	ab 9c       	mul	r10, r11
    1de6:	d0 0d       	add	r29, r0
    1de8:	d0 0d       	add	r29, r0
    1dea:	11 24       	eor	r1, r1
    1dec:	0f 2e       	mov	r0, r31
    1dee:	f4 e1       	ldi	r31, 0x14	; 20
    1df0:	7f 2e       	mov	r7, r31
    1df2:	f0 2d       	mov	r31, r0
    1df4:	0f 2e       	mov	r0, r31
    1df6:	f4 ec       	ldi	r31, 0xC4	; 196
    1df8:	8f 2e       	mov	r8, r31
    1dfa:	99 24       	eor	r9, r9
    1dfc:	9a 94       	dec	r9
    1dfe:	f0 2d       	mov	r31, r0
				byte adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)
				TFT_DrawPixel(adjustedX+DISTX,adjustedY+DISTY,TFT_ColorToInt(getColor(x,y,radius, r)));
			}
		}
	}
}
    1e00:	bc cf       	rjmp	.-136    	; 0x1d7a <drawCircle+0x1e>
    1e02:	cd b7       	in	r28, 0x3d	; 61
    1e04:	de b7       	in	r29, 0x3e	; 62
    1e06:	ee e0       	ldi	r30, 0x0E	; 14
    1e08:	aa c5       	rjmp	.+2900   	; 0x295e <__epilogue_restores__+0x8>

00001e0a <SMTICK3>:
	
	return state;
};

enum SM3_STATES {SM3_INIT, SM3_WAIT, SM3_UPDATE};
int SMTICK3(int state){
    1e0a:	a6 e0       	ldi	r26, 0x06	; 6
    1e0c:	b0 e0       	ldi	r27, 0x00	; 0
    1e0e:	ea e0       	ldi	r30, 0x0A	; 10
    1e10:	ff e0       	ldi	r31, 0x0F	; 15
    1e12:	95 c5       	rjmp	.+2858   	; 0x293e <__prologue_saves__+0x20>
	switch(state){
    1e14:	81 30       	cpi	r24, 0x01	; 1
    1e16:	91 05       	cpc	r25, r1
    1e18:	b9 f0       	breq	.+46     	; 0x1e48 <SMTICK3+0x3e>
    1e1a:	82 30       	cpi	r24, 0x02	; 2
    1e1c:	91 05       	cpc	r25, r1
    1e1e:	c9 f0       	breq	.+50     	; 0x1e52 <SMTICK3+0x48>
    1e20:	89 2b       	or	r24, r25
    1e22:	09 f0       	breq	.+2      	; 0x1e26 <SMTICK3+0x1c>
    1e24:	4e c0       	rjmp	.+156    	; 0x1ec2 <SMTICK3+0xb8>
		case SM3_INIT:
			state = SM3_WAIT;
			LCD_DisplayString(1, "SM3 Started");
    1e26:	6a e5       	ldi	r22, 0x5A	; 90
    1e28:	71 e0       	ldi	r23, 0x01	; 1
    1e2a:	81 e0       	ldi	r24, 0x01	; 1
    1e2c:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
			drawCircle();
    1e30:	95 df       	rcall	.-214    	; 0x1d5c <drawCircle>
			TFT_FillCircle(posOnScreen.x,posOnScreen.y,5,BLACK);
    1e32:	e1 e0       	ldi	r30, 0x01	; 1
    1e34:	f1 e0       	ldi	r31, 0x01	; 1
    1e36:	20 e0       	ldi	r18, 0x00	; 0
    1e38:	30 e0       	ldi	r19, 0x00	; 0
    1e3a:	45 e0       	ldi	r20, 0x05	; 5
    1e3c:	61 81       	ldd	r22, Z+1	; 0x01
    1e3e:	80 81       	ld	r24, Z
    1e40:	a2 d8       	rcall	.-3772   	; 0xf86 <TFT_FillCircle>

enum SM3_STATES {SM3_INIT, SM3_WAIT, SM3_UPDATE};
int SMTICK3(int state){
	switch(state){
		case SM3_INIT:
			state = SM3_WAIT;
    1e42:	81 e0       	ldi	r24, 0x01	; 1
    1e44:	90 e0       	ldi	r25, 0x00	; 0
			LCD_DisplayString(1, "SM3 Started");
			drawCircle();
			TFT_FillCircle(posOnScreen.x,posOnScreen.y,5,BLACK);
			break;
    1e46:	42 c0       	rjmp	.+132    	; 0x1ecc <SMTICK3+0xc2>
		case SM3_WAIT:
			if(valueChanged){
    1e48:	20 91 e4 01 	lds	r18, 0x01E4	; 0x8001e4 <valueChanged>
    1e4c:	21 11       	cpse	r18, r1
    1e4e:	3c c0       	rjmp	.+120    	; 0x1ec8 <SMTICK3+0xbe>
    1e50:	3d c0       	rjmp	.+122    	; 0x1ecc <SMTICK3+0xc2>
			} else {
				state = SM3_WAIT;
			}
			break;
		case SM3_UPDATE:
			LCD_DisplayString(1, "SAVING");
    1e52:	66 e6       	ldi	r22, 0x66	; 102
    1e54:	71 e0       	ldi	r23, 0x01	; 1
    1e56:	81 e0       	ldi	r24, 0x01	; 1
    1e58:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
			drawCircle();
    1e5c:	7f df       	rcall	.-258    	; 0x1d5c <drawCircle>
			posOnScreen = getPosition(rgbtohsv(mainColor),60);
    1e5e:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <mainColor>
    1e62:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <mainColor+0x1>
    1e66:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <mainColor+0x2>
    1e6a:	0e 94 ba 04 	call	0x974	; 0x974 <rgbtohsv>
    1e6e:	b2 2f       	mov	r27, r18
    1e70:	a3 2f       	mov	r26, r19
    1e72:	f4 2f       	mov	r31, r20
    1e74:	e5 2f       	mov	r30, r21
    1e76:	86 2f       	mov	r24, r22
    1e78:	97 2f       	mov	r25, r23
    1e7a:	2c e3       	ldi	r18, 0x3C	; 60
    1e7c:	30 e0       	ldi	r19, 0x00	; 0
    1e7e:	4b 2f       	mov	r20, r27
    1e80:	5a 2f       	mov	r21, r26
    1e82:	6f 2f       	mov	r22, r31
    1e84:	7e 2f       	mov	r23, r30
    1e86:	fd dd       	rcall	.-1030   	; 0x1a82 <getPosition>
    1e88:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <posOnScreen+0x1>
    1e8c:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <posOnScreen>
			if(mainColor.R != 0 || mainColor.G != 0 || mainColor.B != 0){
    1e90:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <mainColor>
    1e94:	81 11       	cpse	r24, r1
    1e96:	08 c0       	rjmp	.+16     	; 0x1ea8 <SMTICK3+0x9e>
    1e98:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <mainColor+0x1>
    1e9c:	81 11       	cpse	r24, r1
    1e9e:	04 c0       	rjmp	.+8      	; 0x1ea8 <SMTICK3+0x9e>
    1ea0:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <mainColor+0x2>
    1ea4:	88 23       	and	r24, r24
    1ea6:	41 f0       	breq	.+16     	; 0x1eb8 <SMTICK3+0xae>
				TFT_FillCircle(posOnScreen.x,posOnScreen.y,5,BLACK);
    1ea8:	e1 e0       	ldi	r30, 0x01	; 1
    1eaa:	f1 e0       	ldi	r31, 0x01	; 1
    1eac:	20 e0       	ldi	r18, 0x00	; 0
    1eae:	30 e0       	ldi	r19, 0x00	; 0
    1eb0:	45 e0       	ldi	r20, 0x05	; 5
    1eb2:	61 81       	ldd	r22, Z+1	; 0x01
    1eb4:	80 81       	ld	r24, Z
    1eb6:	67 d8       	rcall	.-3890   	; 0xf86 <TFT_FillCircle>
			}
			valueChanged = 0;
    1eb8:	10 92 e4 01 	sts	0x01E4, r1	; 0x8001e4 <valueChanged>
			state = SM3_WAIT;
    1ebc:	81 e0       	ldi	r24, 0x01	; 1
    1ebe:	90 e0       	ldi	r25, 0x00	; 0
			break;
    1ec0:	05 c0       	rjmp	.+10     	; 0x1ecc <SMTICK3+0xc2>
		default:
			state = SM3_INIT;
    1ec2:	80 e0       	ldi	r24, 0x00	; 0
    1ec4:	90 e0       	ldi	r25, 0x00	; 0
    1ec6:	02 c0       	rjmp	.+4      	; 0x1ecc <SMTICK3+0xc2>
			drawCircle();
			TFT_FillCircle(posOnScreen.x,posOnScreen.y,5,BLACK);
			break;
		case SM3_WAIT:
			if(valueChanged){
				state = SM3_UPDATE;
    1ec8:	82 e0       	ldi	r24, 0x02	; 2
	switch(state) {
		case SM3_WAIT:
			break;
	}
	return state;
};
    1eca:	90 e0       	ldi	r25, 0x00	; 0
    1ecc:	26 96       	adiw	r28, 0x06	; 6
    1ece:	e2 e0       	ldi	r30, 0x02	; 2
    1ed0:	52 c5       	rjmp	.+2724   	; 0x2976 <__epilogue_restores__+0x20>

00001ed2 <main>:

/************************************************************************/
/* MAIN FUNCTION                                                        */
/************************************************************************/
int main(void)
{	
    1ed2:	a8 e1       	ldi	r26, 0x18	; 24
    1ed4:	b0 e0       	ldi	r27, 0x00	; 0
    1ed6:	ee e6       	ldi	r30, 0x6E	; 110
    1ed8:	ff e0       	ldi	r31, 0x0F	; 15
    1eda:	23 c5       	rjmp	.+2630   	; 0x2922 <__prologue_saves__+0x4>
	/************************************************************************/
	/* INIT PORTS                                                           */
	/************************************************************************/
	DDRA = 0xF0; PORTA = 0x0F;// PC7..4 outputs init 0s, PC3..0 inputs init 1s
    1edc:	80 ef       	ldi	r24, 0xF0	; 240
    1ede:	81 b9       	out	0x01, r24	; 1
    1ee0:	8f e0       	ldi	r24, 0x0F	; 15
    1ee2:	82 b9       	out	0x02, r24	; 2
	DDRD = 0xFF; PORTD = 0x00;
    1ee4:	8f ef       	ldi	r24, 0xFF	; 255
    1ee6:	8a b9       	out	0x0a, r24	; 10
    1ee8:	1b b8       	out	0x0b, r1	; 11
	
	LCD_SetUpPorts();
    1eea:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_SetUpPorts>
	TFT_SetupPorts();
    1eee:	0e 94 84 06 	call	0xd08	; 0xd08 <TFT_SetupPorts>
	/************************************************************************/
	/* INIT DEVICES                                                         */
	/************************************************************************/
	LCD_init();
    1ef2:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_init>
	Init_PWM();
    1ef6:	eb dc       	rcall	.-1578   	; 0x18ce <Init_PWM>
	LCD_DisplayString(2, "LCD INIT");
    1ef8:	6d e6       	ldi	r22, 0x6D	; 109
    1efa:	71 e0       	ldi	r23, 0x01	; 1
    1efc:	82 e0       	ldi	r24, 0x02	; 2
    1efe:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
/************************************************************************/
void TFT_OpenSPI(void)
{
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    1f02:	81 e5       	ldi	r24, 0x51	; 81
    1f04:	8c bd       	out	0x2c, r24	; 44
	TFT_OpenSPI();
	TFT_InitDisplay();
    1f06:	0e 94 1d 07 	call	0xe3a	; 0xe3a <TFT_InitDisplay>
	unsigned char cust[16] = {
    1f0a:	80 e1       	ldi	r24, 0x10	; 16
    1f0c:	ea e0       	ldi	r30, 0x0A	; 10
    1f0e:	f1 e0       	ldi	r31, 0x01	; 1
    1f10:	de 01       	movw	r26, r28
    1f12:	11 96       	adiw	r26, 0x01	; 1
    1f14:	01 90       	ld	r0, Z+
    1f16:	0d 92       	st	X+, r0
    1f18:	8a 95       	dec	r24
    1f1a:	e1 f7       	brne	.-8      	; 0x1f14 <main+0x42>
		0b10001,
		0b11101,
		0b10001,
		0b11111
	};
	LCD_WriteCommand(0x40);
    1f1c:	80 e4       	ldi	r24, 0x40	; 64
    1f1e:	0e 94 93 01 	call	0x326	; 0x326 <LCD_WriteCommand>
    1f22:	8e 01       	movw	r16, r28
    1f24:	0f 5f       	subi	r16, 0xFF	; 255
    1f26:	1f 4f       	sbci	r17, 0xFF	; 255
    1f28:	7e 01       	movw	r14, r28
    1f2a:	22 e1       	ldi	r18, 0x12	; 18
    1f2c:	e2 0e       	add	r14, r18
    1f2e:	f1 1c       	adc	r15, r1
	for(unsigned i = 0; i <= 16; i++){
		LCD_WriteData(cust[i]);
    1f30:	d8 01       	movw	r26, r16
    1f32:	8d 91       	ld	r24, X+
    1f34:	8d 01       	movw	r16, r26
    1f36:	0e 94 cd 01 	call	0x39a	; 0x39a <LCD_WriteData>
		0b11101,
		0b10001,
		0b11111
	};
	LCD_WriteCommand(0x40);
	for(unsigned i = 0; i <= 16; i++){
    1f3a:	0e 15       	cp	r16, r14
    1f3c:	1f 05       	cpc	r17, r15
    1f3e:	c1 f7       	brne	.-16     	; 0x1f30 <main+0x5e>
		LCD_WriteData(cust[i]);
	}
	LCD_WriteCommand(0);
    1f40:	80 e0       	ldi	r24, 0x00	; 0
    1f42:	0e 94 93 01 	call	0x326	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(1);
    1f46:	81 e0       	ldi	r24, 0x01	; 1
    1f48:	0e 94 93 01 	call	0x326	; 0x326 <LCD_WriteCommand>
	
	TFT_ClearScreen();
    1f4c:	0e 94 47 07 	call	0xe8e	; 0xe8e <TFT_ClearScreen>
	TFT_FillEllipse(60,75,100,50,BLACK);
    1f50:	00 e0       	ldi	r16, 0x00	; 0
    1f52:	10 e0       	ldi	r17, 0x00	; 0
    1f54:	22 e3       	ldi	r18, 0x32	; 50
    1f56:	30 e0       	ldi	r19, 0x00	; 0
    1f58:	44 e6       	ldi	r20, 0x64	; 100
    1f5a:	50 e0       	ldi	r21, 0x00	; 0
    1f5c:	6b e4       	ldi	r22, 0x4B	; 75
    1f5e:	70 e0       	ldi	r23, 0x00	; 0
    1f60:	8c e3       	ldi	r24, 0x3C	; 60
    1f62:	90 e0       	ldi	r25, 0x00	; 0
    1f64:	a0 d9       	rcall	.-3264   	; 0x12a6 <TFT_FillEllipse>
	TFT_Ellipse(60,75,100,50,LIME);
    1f66:	00 ee       	ldi	r16, 0xE0	; 224
    1f68:	17 e0       	ldi	r17, 0x07	; 7
    1f6a:	22 e3       	ldi	r18, 0x32	; 50
    1f6c:	30 e0       	ldi	r19, 0x00	; 0
    1f6e:	44 e6       	ldi	r20, 0x64	; 100
    1f70:	50 e0       	ldi	r21, 0x00	; 0
    1f72:	6b e4       	ldi	r22, 0x4B	; 75
    1f74:	70 e0       	ldi	r23, 0x00	; 0
    1f76:	8c e3       	ldi	r24, 0x3C	; 60
    1f78:	90 e0       	ldi	r25, 0x00	; 0
    1f7a:	5e d8       	rcall	.-3908   	; 0x1038 <TFT_Ellipse>
/* Text Routines                                                        */
/************************************************************************/
byte curX, curY;			//current x & y cursor Position
void TFT_GotoXY(byte x, byte y)
{
	curX = x;
    1f7c:	85 e0       	ldi	r24, 0x05	; 5
    1f7e:	80 93 eb 01 	sts	0x01EB, r24	; 0x8001eb <curX>
	curY = y;
    1f82:	89 e0       	ldi	r24, 0x09	; 9
    1f84:	80 93 ec 01 	sts	0x01EC, r24	; 0x8001ec <curY>
	char *str = "UCR CS120B";
	TFT_GotoXY(5,9);
	TFT_WriteString(str, YELLOW);
    1f88:	60 ee       	ldi	r22, 0xE0	; 224
    1f8a:	7f ef       	ldi	r23, 0xFF	; 255
    1f8c:	86 e7       	ldi	r24, 0x76	; 118
    1f8e:	91 e0       	ldi	r25, 0x01	; 1
    1f90:	e1 da       	rcall	.-2622   	; 0x1554 <TFT_WriteString>
	LCD_DisplayString(1, "120B            Final Project");
    1f92:	61 e8       	ldi	r22, 0x81	; 129
    1f94:	71 e0       	ldi	r23, 0x01	; 1
    1f96:	81 e0       	ldi	r24, 0x01	; 1
    1f98:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
    1f9c:	bf ef       	ldi	r27, 0xFF	; 255
    1f9e:	e3 ed       	ldi	r30, 0xD3	; 211
    1fa0:	f0 e3       	ldi	r31, 0x30	; 48
    1fa2:	b1 50       	subi	r27, 0x01	; 1
    1fa4:	e0 40       	sbci	r30, 0x00	; 0
    1fa6:	f0 40       	sbci	r31, 0x00	; 0
    1fa8:	e1 f7       	brne	.-8      	; 0x1fa2 <main+0xd0>
    1faa:	00 c0       	rjmp	.+0      	; 0x1fac <main+0xda>
    1fac:	00 00       	nop
	_delay_ms(1000);
	LCD_DisplayString(1, "Jonas Sorgenfrei");
    1fae:	6f e9       	ldi	r22, 0x9F	; 159
    1fb0:	71 e0       	ldi	r23, 0x01	; 1
    1fb2:	81 e0       	ldi	r24, 0x01	; 1
    1fb4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
	LCD_Cursor(18);
    1fb8:	82 e1       	ldi	r24, 0x12	; 18
    1fba:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_Cursor>
	LCD_WriteData(0);
    1fbe:	80 e0       	ldi	r24, 0x00	; 0
    1fc0:	0e 94 cd 01 	call	0x39a	; 0x39a <LCD_WriteData>
	LCD_Cursor(19);
    1fc4:	83 e1       	ldi	r24, 0x13	; 19
    1fc6:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_Cursor>
	LCD_WriteData(1);
    1fca:	81 e0       	ldi	r24, 0x01	; 1
    1fcc:	0e 94 cd 01 	call	0x39a	; 0x39a <LCD_WriteData>
    1fd0:	2f ef       	ldi	r18, 0xFF	; 255
    1fd2:	83 ed       	ldi	r24, 0xD3	; 211
    1fd4:	90 e3       	ldi	r25, 0x30	; 48
    1fd6:	21 50       	subi	r18, 0x01	; 1
    1fd8:	80 40       	sbci	r24, 0x00	; 0
    1fda:	90 40       	sbci	r25, 0x00	; 0
    1fdc:	e1 f7       	brne	.-8      	; 0x1fd6 <main+0x104>
    1fde:	00 c0       	rjmp	.+0      	; 0x1fe0 <main+0x10e>
    1fe0:	00 00       	nop
    1fe2:	0f 2e       	mov	r0, r31
    1fe4:	f8 ee       	ldi	r31, 0xE8	; 232
    1fe6:	df 2e       	mov	r13, r31
    1fe8:	f0 2d       	mov	r31, r0
    1fea:	0f 2e       	mov	r0, r31
    1fec:	f3 e0       	ldi	r31, 0x03	; 3
    1fee:	cf 2e       	mov	r12, r31
    1ff0:	f0 2d       	mov	r31, r0
    1ff2:	b1 2c       	mov	r11, r1
    1ff4:	a1 2c       	mov	r10, r1
    1ff6:	51 e0       	ldi	r21, 0x01	; 1
    1ff8:	40 e0       	ldi	r20, 0x00	; 0
    1ffa:	30 e0       	ldi	r19, 0x00	; 0
    1ffc:	20 e0       	ldi	r18, 0x00	; 0
    1ffe:	04 c0       	rjmp	.+8      	; 0x2008 <main+0x136>
	unsigned long int c;
	while(1){
		c = a%b;
		if(c==0){return b;}
		a = b;
		b = c;
    2000:	d6 2e       	mov	r13, r22
    2002:	c7 2e       	mov	r12, r23
    2004:	b8 2e       	mov	r11, r24
    2006:	a9 2e       	mov	r10, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
    2008:	65 2f       	mov	r22, r21
    200a:	74 2f       	mov	r23, r20
    200c:	83 2f       	mov	r24, r19
    200e:	92 2f       	mov	r25, r18
    2010:	2d 2d       	mov	r18, r13
    2012:	3c 2d       	mov	r19, r12
    2014:	4b 2d       	mov	r20, r11
    2016:	5a 2d       	mov	r21, r10
    2018:	50 d4       	rcall	.+2208   	; 0x28ba <__udivmodsi4>
    201a:	5d 2d       	mov	r21, r13
    201c:	4c 2d       	mov	r20, r12
    201e:	3b 2d       	mov	r19, r11
    2020:	2a 2d       	mov	r18, r10
		if(c==0){return b;}
    2022:	61 15       	cp	r22, r1
    2024:	71 05       	cpc	r23, r1
    2026:	81 05       	cpc	r24, r1
    2028:	91 05       	cpc	r25, r1
    202a:	51 f7       	brne	.-44     	; 0x2000 <main+0x12e>
    202c:	0f 2e       	mov	r0, r31
    202e:	f8 ec       	ldi	r31, 0xC8	; 200
    2030:	ef 2e       	mov	r14, r31
    2032:	f0 2d       	mov	r31, r0
    2034:	f1 2c       	mov	r15, r1
    2036:	00 e0       	ldi	r16, 0x00	; 0
    2038:	10 e0       	ldi	r17, 0x00	; 0
    203a:	04 c0       	rjmp	.+8      	; 0x2044 <main+0x172>
		a = b;
		b = c;
    203c:	e6 2e       	mov	r14, r22
    203e:	f7 2e       	mov	r15, r23
    2040:	08 2f       	mov	r16, r24
    2042:	19 2f       	mov	r17, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
    2044:	6d 2d       	mov	r22, r13
    2046:	7c 2d       	mov	r23, r12
    2048:	8b 2d       	mov	r24, r11
    204a:	9a 2d       	mov	r25, r10
    204c:	2e 2d       	mov	r18, r14
    204e:	3f 2d       	mov	r19, r15
    2050:	40 2f       	mov	r20, r16
    2052:	51 2f       	mov	r21, r17
    2054:	32 d4       	rcall	.+2148   	; 0x28ba <__udivmodsi4>
    2056:	de 2c       	mov	r13, r14
    2058:	cf 2c       	mov	r12, r15
    205a:	b0 2e       	mov	r11, r16
    205c:	a1 2e       	mov	r10, r17
		if(c==0){return b;}
    205e:	61 15       	cp	r22, r1
    2060:	71 05       	cpc	r23, r1
    2062:	81 05       	cpc	r24, r1
    2064:	91 05       	cpc	r25, r1
    2066:	51 f7       	brne	.-44     	; 0x203c <main+0x16a>
	
	//greates common divisor for all tasks or smallest time unit for tasks
	unsigned long int GCD = tmpGCD;
	
	//Recalculate GCD periods for scheduler
	unsigned long int SMTick1_period = SMTick1_calc/GCD;
    2068:	68 ee       	ldi	r22, 0xE8	; 232
    206a:	73 e0       	ldi	r23, 0x03	; 3
    206c:	80 e0       	ldi	r24, 0x00	; 0
    206e:	90 e0       	ldi	r25, 0x00	; 0
    2070:	2e 2d       	mov	r18, r14
    2072:	3f 2d       	mov	r19, r15
    2074:	40 2f       	mov	r20, r16
    2076:	51 2f       	mov	r21, r17
    2078:	20 d4       	rcall	.+2112   	; 0x28ba <__udivmodsi4>
    207a:	49 01       	movw	r8, r18
    207c:	5a 01       	movw	r10, r20
	unsigned long int SMTick2_period = SMTick2_calc/GCD;
    207e:	61 e0       	ldi	r22, 0x01	; 1
    2080:	70 e0       	ldi	r23, 0x00	; 0
    2082:	80 e0       	ldi	r24, 0x00	; 0
    2084:	90 e0       	ldi	r25, 0x00	; 0
    2086:	2e 2d       	mov	r18, r14
    2088:	3f 2d       	mov	r19, r15
    208a:	40 2f       	mov	r20, r16
    208c:	51 2f       	mov	r21, r17
    208e:	15 d4       	rcall	.+2090   	; 0x28ba <__udivmodsi4>
    2090:	29 01       	movw	r4, r18
    2092:	3a 01       	movw	r6, r20
	unsigned long int SMTick3_period = SMTick3_calc/GCD;
	unsigned long int SMTick4_period = SMTick4_calc/GCD;
    2094:	68 ec       	ldi	r22, 0xC8	; 200
    2096:	70 e0       	ldi	r23, 0x00	; 0
    2098:	80 e0       	ldi	r24, 0x00	; 0
    209a:	90 e0       	ldi	r25, 0x00	; 0
    209c:	2e 2d       	mov	r18, r14
    209e:	3f 2d       	mov	r19, r15
    20a0:	40 2f       	mov	r20, r16
    20a2:	51 2f       	mov	r21, r17
    20a4:	0a d4       	rcall	.+2068   	; 0x28ba <__udivmodsi4>

	//Declare an array of tasks
	static task task1, task2, task3, task4;
	task * tasks[] = {&task1, &task2, &task3, &task4};
    20a6:	88 e0       	ldi	r24, 0x08	; 8
    20a8:	ea e1       	ldi	r30, 0x1A	; 26
    20aa:	f1 e0       	ldi	r31, 0x01	; 1
    20ac:	de 01       	movw	r26, r28
    20ae:	51 96       	adiw	r26, 0x11	; 17
    20b0:	01 90       	ld	r0, Z+
    20b2:	0d 92       	st	X+, r0
    20b4:	8a 95       	dec	r24
    20b6:	e1 f7       	brne	.-8      	; 0x20b0 <main+0x1de>
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);
	
	//Task 1
	task1.state = -1; // Task initial state
    20b8:	e1 ed       	ldi	r30, 0xD1	; 209
    20ba:	f1 e0       	ldi	r31, 0x01	; 1
    20bc:	6f ef       	ldi	r22, 0xFF	; 255
    20be:	60 83       	st	Z, r22
	task1.period = SMTick1_period;	//Task Period.
    20c0:	81 82       	std	Z+1, r8	; 0x01
    20c2:	92 82       	std	Z+2, r9	; 0x02
    20c4:	a3 82       	std	Z+3, r10	; 0x03
    20c6:	b4 82       	std	Z+4, r11	; 0x04
	task1.elapsedTime = SMTick1_period; //Task current elapsed time
    20c8:	85 82       	std	Z+5, r8	; 0x05
    20ca:	96 82       	std	Z+6, r9	; 0x06
    20cc:	a7 82       	std	Z+7, r10	; 0x07
    20ce:	b0 86       	std	Z+8, r11	; 0x08
	task1.TickFct = &SMTICK1; //Function pointer for the tick.
    20d0:	88 e6       	ldi	r24, 0x68	; 104
    20d2:	92 e0       	ldi	r25, 0x02	; 2
    20d4:	92 87       	std	Z+10, r25	; 0x0a
    20d6:	81 87       	std	Z+9, r24	; 0x09
	
	//Task 2
	task2.state = -1; // Task initial state
    20d8:	e6 ec       	ldi	r30, 0xC6	; 198
    20da:	f1 e0       	ldi	r31, 0x01	; 1
    20dc:	60 83       	st	Z, r22
	task2.period = SMTick2_period;	//Task Period.
    20de:	41 82       	std	Z+1, r4	; 0x01
    20e0:	52 82       	std	Z+2, r5	; 0x02
    20e2:	63 82       	std	Z+3, r6	; 0x03
    20e4:	74 82       	std	Z+4, r7	; 0x04
	task2.elapsedTime = SMTick2_period; //Task current elapsed time
    20e6:	45 82       	std	Z+5, r4	; 0x05
    20e8:	56 82       	std	Z+6, r5	; 0x06
    20ea:	67 82       	std	Z+7, r6	; 0x07
    20ec:	70 86       	std	Z+8, r7	; 0x08
	task2.TickFct = &SMTICK2; //Function pointer for the tick.
    20ee:	86 e9       	ldi	r24, 0x96	; 150
    20f0:	9c e0       	ldi	r25, 0x0C	; 12
    20f2:	92 87       	std	Z+10, r25	; 0x0a
    20f4:	81 87       	std	Z+9, r24	; 0x09

	//Task 3
	task3.state = -1; // Task initial state
    20f6:	eb eb       	ldi	r30, 0xBB	; 187
    20f8:	f1 e0       	ldi	r31, 0x01	; 1
    20fa:	60 83       	st	Z, r22
	task3.period = SMTick3_period;	//Task Period.
    20fc:	81 82       	std	Z+1, r8	; 0x01
    20fe:	92 82       	std	Z+2, r9	; 0x02
    2100:	a3 82       	std	Z+3, r10	; 0x03
    2102:	b4 82       	std	Z+4, r11	; 0x04
	task3.elapsedTime = SMTick3_period; //Task current elapsed time
    2104:	85 82       	std	Z+5, r8	; 0x05
    2106:	96 82       	std	Z+6, r9	; 0x06
    2108:	a7 82       	std	Z+7, r10	; 0x07
    210a:	b0 86       	std	Z+8, r11	; 0x08
	task3.TickFct = &SMTICK3; //Function pointer for the tick.
    210c:	85 e0       	ldi	r24, 0x05	; 5
    210e:	9f e0       	ldi	r25, 0x0F	; 15
    2110:	92 87       	std	Z+10, r25	; 0x0a
    2112:	81 87       	std	Z+9, r24	; 0x09

	//Task 4
	task4.state = -1; // Task initial state
    2114:	e0 eb       	ldi	r30, 0xB0	; 176
    2116:	f1 e0       	ldi	r31, 0x01	; 1
    2118:	60 83       	st	Z, r22
	task4.period = SMTick4_period;	//Task Period.
    211a:	21 83       	std	Z+1, r18	; 0x01
    211c:	32 83       	std	Z+2, r19	; 0x02
    211e:	43 83       	std	Z+3, r20	; 0x03
    2120:	54 83       	std	Z+4, r21	; 0x04
	task4.elapsedTime = SMTick4_period; //Task current elapsed time
    2122:	25 83       	std	Z+5, r18	; 0x05
    2124:	36 83       	std	Z+6, r19	; 0x06
    2126:	47 83       	std	Z+7, r20	; 0x07
    2128:	50 87       	std	Z+8, r21	; 0x08
	task4.TickFct = &SMTICK4; //Function pointer for the tick.
    212a:	8c e0       	ldi	r24, 0x0C	; 12
    212c:	9b e0       	ldi	r25, 0x0B	; 11
    212e:	92 87       	std	Z+10, r25	; 0x0a
    2130:	81 87       	std	Z+9, r24	; 0x09
	
	// Set the timer and turn it on
	TimerSet(GCD);
    2132:	6e 2d       	mov	r22, r14
    2134:	7f 2d       	mov	r23, r15
    2136:	80 2f       	mov	r24, r16
    2138:	91 2f       	mov	r25, r17
    213a:	0e 94 84 02 	call	0x508	; 0x508 <TimerSet>
	TimerOn();
    213e:	0e 94 95 02 	call	0x52a	; 0x52a <TimerOn>
    2142:	7e 01       	movw	r14, r28
    2144:	a9 e1       	ldi	r26, 0x19	; 25
    2146:	ea 0e       	add	r14, r26
    2148:	f1 1c       	adc	r15, r1
    214a:	6e 01       	movw	r12, r28
    214c:	b1 e1       	ldi	r27, 0x11	; 17
    214e:	cb 0e       	add	r12, r27
    2150:	d1 1c       	adc	r13, r1
	unsigned short i;
	while(1){
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
    2152:	f6 01       	movw	r30, r12
    2154:	01 91       	ld	r16, Z+
    2156:	11 91       	ld	r17, Z+
    2158:	6f 01       	movw	r12, r30
    215a:	d8 01       	movw	r26, r16
    215c:	15 96       	adiw	r26, 0x05	; 5
    215e:	4d 91       	ld	r20, X+
    2160:	5d 91       	ld	r21, X+
    2162:	6d 91       	ld	r22, X+
    2164:	7c 91       	ld	r23, X
    2166:	18 97       	sbiw	r26, 0x08	; 8
    2168:	11 96       	adiw	r26, 0x01	; 1
    216a:	8d 91       	ld	r24, X+
    216c:	9d 91       	ld	r25, X+
    216e:	0d 90       	ld	r0, X+
    2170:	bc 91       	ld	r27, X
    2172:	a0 2d       	mov	r26, r0
    2174:	48 17       	cp	r20, r24
    2176:	59 07       	cpc	r21, r25
    2178:	6a 07       	cpc	r22, r26
    217a:	7b 07       	cpc	r23, r27
    217c:	81 f4       	brne	.+32     	; 0x219e <main+0x2cc>
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
    217e:	f8 01       	movw	r30, r16
    2180:	80 81       	ld	r24, Z
    2182:	01 84       	ldd	r0, Z+9	; 0x09
    2184:	f2 85       	ldd	r31, Z+10	; 0x0a
    2186:	e0 2d       	mov	r30, r0
    2188:	08 2e       	mov	r0, r24
    218a:	00 0c       	add	r0, r0
    218c:	99 0b       	sbc	r25, r25
    218e:	09 95       	icall
    2190:	d8 01       	movw	r26, r16
    2192:	8c 93       	st	X, r24
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
    2194:	f8 01       	movw	r30, r16
    2196:	15 82       	std	Z+5, r1	; 0x05
    2198:	16 82       	std	Z+6, r1	; 0x06
    219a:	17 82       	std	Z+7, r1	; 0x07
    219c:	10 86       	std	Z+8, r1	; 0x08
			}
			tasks[i]->elapsedTime += 1;
    219e:	f8 01       	movw	r30, r16
    21a0:	85 81       	ldd	r24, Z+5	; 0x05
    21a2:	96 81       	ldd	r25, Z+6	; 0x06
    21a4:	a7 81       	ldd	r26, Z+7	; 0x07
    21a6:	b0 85       	ldd	r27, Z+8	; 0x08
    21a8:	01 96       	adiw	r24, 0x01	; 1
    21aa:	a1 1d       	adc	r26, r1
    21ac:	b1 1d       	adc	r27, r1
    21ae:	85 83       	std	Z+5, r24	; 0x05
    21b0:	96 83       	std	Z+6, r25	; 0x06
    21b2:	a7 83       	std	Z+7, r26	; 0x07
    21b4:	b0 87       	std	Z+8, r27	; 0x08
	/* MAIN LOOP                                                            */
	/************************************************************************/
	unsigned short i;
	while(1){
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
    21b6:	ec 14       	cp	r14, r12
    21b8:	fd 04       	cpc	r15, r13
    21ba:	59 f6       	brne	.-106    	; 0x2152 <main+0x280>
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
    21bc:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <TimerFlag>
    21c0:	88 23       	and	r24, r24
    21c2:	e1 f3       	breq	.-8      	; 0x21bc <main+0x2ea>
		TimerFlag = 0;
    21c4:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <TimerFlag>
	}
    21c8:	c0 cf       	rjmp	.-128    	; 0x214a <main+0x278>

000021ca <__subsf3>:
    21ca:	50 58       	subi	r21, 0x80	; 128

000021cc <__addsf3>:
    21cc:	bb 27       	eor	r27, r27
    21ce:	aa 27       	eor	r26, r26
    21d0:	0e d0       	rcall	.+28     	; 0x21ee <__addsf3x>
    21d2:	27 c2       	rjmp	.+1102   	; 0x2622 <__fp_round>
    21d4:	f0 d1       	rcall	.+992    	; 0x25b6 <__fp_pscA>
    21d6:	30 f0       	brcs	.+12     	; 0x21e4 <__addsf3+0x18>
    21d8:	f5 d1       	rcall	.+1002   	; 0x25c4 <__fp_pscB>
    21da:	20 f0       	brcs	.+8      	; 0x21e4 <__addsf3+0x18>
    21dc:	31 f4       	brne	.+12     	; 0x21ea <__addsf3+0x1e>
    21de:	9f 3f       	cpi	r25, 0xFF	; 255
    21e0:	11 f4       	brne	.+4      	; 0x21e6 <__addsf3+0x1a>
    21e2:	1e f4       	brtc	.+6      	; 0x21ea <__addsf3+0x1e>
    21e4:	c0 c1       	rjmp	.+896    	; 0x2566 <__fp_nan>
    21e6:	0e f4       	brtc	.+2      	; 0x21ea <__addsf3+0x1e>
    21e8:	e0 95       	com	r30
    21ea:	e7 fb       	bst	r30, 7
    21ec:	b6 c1       	rjmp	.+876    	; 0x255a <__fp_inf>

000021ee <__addsf3x>:
    21ee:	e9 2f       	mov	r30, r25
    21f0:	3a d2       	rcall	.+1140   	; 0x2666 <__fp_split3>
    21f2:	80 f3       	brcs	.-32     	; 0x21d4 <__addsf3+0x8>
    21f4:	ba 17       	cp	r27, r26
    21f6:	62 07       	cpc	r22, r18
    21f8:	73 07       	cpc	r23, r19
    21fa:	84 07       	cpc	r24, r20
    21fc:	95 07       	cpc	r25, r21
    21fe:	18 f0       	brcs	.+6      	; 0x2206 <__addsf3x+0x18>
    2200:	71 f4       	brne	.+28     	; 0x221e <__addsf3x+0x30>
    2202:	9e f5       	brtc	.+102    	; 0x226a <__addsf3x+0x7c>
    2204:	52 c2       	rjmp	.+1188   	; 0x26aa <__fp_zero>
    2206:	0e f4       	brtc	.+2      	; 0x220a <__addsf3x+0x1c>
    2208:	e0 95       	com	r30
    220a:	0b 2e       	mov	r0, r27
    220c:	ba 2f       	mov	r27, r26
    220e:	a0 2d       	mov	r26, r0
    2210:	0b 01       	movw	r0, r22
    2212:	b9 01       	movw	r22, r18
    2214:	90 01       	movw	r18, r0
    2216:	0c 01       	movw	r0, r24
    2218:	ca 01       	movw	r24, r20
    221a:	a0 01       	movw	r20, r0
    221c:	11 24       	eor	r1, r1
    221e:	ff 27       	eor	r31, r31
    2220:	59 1b       	sub	r21, r25
    2222:	99 f0       	breq	.+38     	; 0x224a <__addsf3x+0x5c>
    2224:	59 3f       	cpi	r21, 0xF9	; 249
    2226:	50 f4       	brcc	.+20     	; 0x223c <__addsf3x+0x4e>
    2228:	50 3e       	cpi	r21, 0xE0	; 224
    222a:	68 f1       	brcs	.+90     	; 0x2286 <__addsf3x+0x98>
    222c:	1a 16       	cp	r1, r26
    222e:	f0 40       	sbci	r31, 0x00	; 0
    2230:	a2 2f       	mov	r26, r18
    2232:	23 2f       	mov	r18, r19
    2234:	34 2f       	mov	r19, r20
    2236:	44 27       	eor	r20, r20
    2238:	58 5f       	subi	r21, 0xF8	; 248
    223a:	f3 cf       	rjmp	.-26     	; 0x2222 <__addsf3x+0x34>
    223c:	46 95       	lsr	r20
    223e:	37 95       	ror	r19
    2240:	27 95       	ror	r18
    2242:	a7 95       	ror	r26
    2244:	f0 40       	sbci	r31, 0x00	; 0
    2246:	53 95       	inc	r21
    2248:	c9 f7       	brne	.-14     	; 0x223c <__addsf3x+0x4e>
    224a:	7e f4       	brtc	.+30     	; 0x226a <__addsf3x+0x7c>
    224c:	1f 16       	cp	r1, r31
    224e:	ba 0b       	sbc	r27, r26
    2250:	62 0b       	sbc	r22, r18
    2252:	73 0b       	sbc	r23, r19
    2254:	84 0b       	sbc	r24, r20
    2256:	ba f0       	brmi	.+46     	; 0x2286 <__addsf3x+0x98>
    2258:	91 50       	subi	r25, 0x01	; 1
    225a:	a1 f0       	breq	.+40     	; 0x2284 <__addsf3x+0x96>
    225c:	ff 0f       	add	r31, r31
    225e:	bb 1f       	adc	r27, r27
    2260:	66 1f       	adc	r22, r22
    2262:	77 1f       	adc	r23, r23
    2264:	88 1f       	adc	r24, r24
    2266:	c2 f7       	brpl	.-16     	; 0x2258 <__addsf3x+0x6a>
    2268:	0e c0       	rjmp	.+28     	; 0x2286 <__addsf3x+0x98>
    226a:	ba 0f       	add	r27, r26
    226c:	62 1f       	adc	r22, r18
    226e:	73 1f       	adc	r23, r19
    2270:	84 1f       	adc	r24, r20
    2272:	48 f4       	brcc	.+18     	; 0x2286 <__addsf3x+0x98>
    2274:	87 95       	ror	r24
    2276:	77 95       	ror	r23
    2278:	67 95       	ror	r22
    227a:	b7 95       	ror	r27
    227c:	f7 95       	ror	r31
    227e:	9e 3f       	cpi	r25, 0xFE	; 254
    2280:	08 f0       	brcs	.+2      	; 0x2284 <__addsf3x+0x96>
    2282:	b3 cf       	rjmp	.-154    	; 0x21ea <__addsf3+0x1e>
    2284:	93 95       	inc	r25
    2286:	88 0f       	add	r24, r24
    2288:	08 f0       	brcs	.+2      	; 0x228c <__addsf3x+0x9e>
    228a:	99 27       	eor	r25, r25
    228c:	ee 0f       	add	r30, r30
    228e:	97 95       	ror	r25
    2290:	87 95       	ror	r24
    2292:	08 95       	ret
    2294:	90 d1       	rcall	.+800    	; 0x25b6 <__fp_pscA>
    2296:	58 f0       	brcs	.+22     	; 0x22ae <__addsf3x+0xc0>
    2298:	80 e8       	ldi	r24, 0x80	; 128
    229a:	91 e0       	ldi	r25, 0x01	; 1
    229c:	09 f4       	brne	.+2      	; 0x22a0 <__addsf3x+0xb2>
    229e:	9e ef       	ldi	r25, 0xFE	; 254
    22a0:	91 d1       	rcall	.+802    	; 0x25c4 <__fp_pscB>
    22a2:	28 f0       	brcs	.+10     	; 0x22ae <__addsf3x+0xc0>
    22a4:	40 e8       	ldi	r20, 0x80	; 128
    22a6:	51 e0       	ldi	r21, 0x01	; 1
    22a8:	59 f4       	brne	.+22     	; 0x22c0 <atan2+0xe>
    22aa:	5e ef       	ldi	r21, 0xFE	; 254
    22ac:	09 c0       	rjmp	.+18     	; 0x22c0 <atan2+0xe>
    22ae:	5b c1       	rjmp	.+694    	; 0x2566 <__fp_nan>
    22b0:	fc c1       	rjmp	.+1016   	; 0x26aa <__fp_zero>

000022b2 <atan2>:
    22b2:	e9 2f       	mov	r30, r25
    22b4:	e0 78       	andi	r30, 0x80	; 128
    22b6:	d7 d1       	rcall	.+942    	; 0x2666 <__fp_split3>
    22b8:	68 f3       	brcs	.-38     	; 0x2294 <__addsf3x+0xa6>
    22ba:	09 2e       	mov	r0, r25
    22bc:	05 2a       	or	r0, r21
    22be:	c1 f3       	breq	.-16     	; 0x22b0 <__addsf3x+0xc2>
    22c0:	26 17       	cp	r18, r22
    22c2:	37 07       	cpc	r19, r23
    22c4:	48 07       	cpc	r20, r24
    22c6:	59 07       	cpc	r21, r25
    22c8:	38 f0       	brcs	.+14     	; 0x22d8 <atan2+0x26>
    22ca:	0e 2e       	mov	r0, r30
    22cc:	07 f8       	bld	r0, 7
    22ce:	e0 25       	eor	r30, r0
    22d0:	69 f0       	breq	.+26     	; 0x22ec <atan2+0x3a>
    22d2:	e0 25       	eor	r30, r0
    22d4:	e0 64       	ori	r30, 0x40	; 64
    22d6:	0a c0       	rjmp	.+20     	; 0x22ec <atan2+0x3a>
    22d8:	ef 63       	ori	r30, 0x3F	; 63
    22da:	07 f8       	bld	r0, 7
    22dc:	00 94       	com	r0
    22de:	07 fa       	bst	r0, 7
    22e0:	db 01       	movw	r26, r22
    22e2:	b9 01       	movw	r22, r18
    22e4:	9d 01       	movw	r18, r26
    22e6:	dc 01       	movw	r26, r24
    22e8:	ca 01       	movw	r24, r20
    22ea:	ad 01       	movw	r20, r26
    22ec:	ef 93       	push	r30
    22ee:	4a d0       	rcall	.+148    	; 0x2384 <__divsf3_pse>
    22f0:	98 d1       	rcall	.+816    	; 0x2622 <__fp_round>
    22f2:	0a d0       	rcall	.+20     	; 0x2308 <atan>
    22f4:	5f 91       	pop	r21
    22f6:	55 23       	and	r21, r21
    22f8:	31 f0       	breq	.+12     	; 0x2306 <atan2+0x54>
    22fa:	2b ed       	ldi	r18, 0xDB	; 219
    22fc:	3f e0       	ldi	r19, 0x0F	; 15
    22fe:	49 e4       	ldi	r20, 0x49	; 73
    2300:	50 fd       	sbrc	r21, 0
    2302:	49 ec       	ldi	r20, 0xC9	; 201
    2304:	63 cf       	rjmp	.-314    	; 0x21cc <__addsf3>
    2306:	08 95       	ret

00002308 <atan>:
    2308:	df 93       	push	r29
    230a:	dd 27       	eor	r29, r29
    230c:	b9 2f       	mov	r27, r25
    230e:	bf 77       	andi	r27, 0x7F	; 127
    2310:	40 e8       	ldi	r20, 0x80	; 128
    2312:	5f e3       	ldi	r21, 0x3F	; 63
    2314:	16 16       	cp	r1, r22
    2316:	17 06       	cpc	r1, r23
    2318:	48 07       	cpc	r20, r24
    231a:	5b 07       	cpc	r21, r27
    231c:	10 f4       	brcc	.+4      	; 0x2322 <atan+0x1a>
    231e:	d9 2f       	mov	r29, r25
    2320:	cf d1       	rcall	.+926    	; 0x26c0 <inverse>
    2322:	9f 93       	push	r25
    2324:	8f 93       	push	r24
    2326:	7f 93       	push	r23
    2328:	6f 93       	push	r22
    232a:	7c d2       	rcall	.+1272   	; 0x2824 <square>
    232c:	ec e8       	ldi	r30, 0x8C	; 140
    232e:	f0 e0       	ldi	r31, 0x00	; 0
    2330:	1d d1       	rcall	.+570    	; 0x256c <__fp_powser>
    2332:	77 d1       	rcall	.+750    	; 0x2622 <__fp_round>
    2334:	2f 91       	pop	r18
    2336:	3f 91       	pop	r19
    2338:	4f 91       	pop	r20
    233a:	5f 91       	pop	r21
    233c:	d4 d1       	rcall	.+936    	; 0x26e6 <__mulsf3x>
    233e:	dd 23       	and	r29, r29
    2340:	49 f0       	breq	.+18     	; 0x2354 <atan+0x4c>
    2342:	90 58       	subi	r25, 0x80	; 128
    2344:	a2 ea       	ldi	r26, 0xA2	; 162
    2346:	2a ed       	ldi	r18, 0xDA	; 218
    2348:	3f e0       	ldi	r19, 0x0F	; 15
    234a:	49 ec       	ldi	r20, 0xC9	; 201
    234c:	5f e3       	ldi	r21, 0x3F	; 63
    234e:	d0 78       	andi	r29, 0x80	; 128
    2350:	5d 27       	eor	r21, r29
    2352:	4d df       	rcall	.-358    	; 0x21ee <__addsf3x>
    2354:	df 91       	pop	r29
    2356:	65 c1       	rjmp	.+714    	; 0x2622 <__fp_round>

00002358 <__cmpsf2>:
    2358:	dc d0       	rcall	.+440    	; 0x2512 <__fp_cmp>
    235a:	08 f4       	brcc	.+2      	; 0x235e <__cmpsf2+0x6>
    235c:	81 e0       	ldi	r24, 0x01	; 1
    235e:	08 95       	ret

00002360 <cos>:
    2360:	39 d1       	rcall	.+626    	; 0x25d4 <__fp_rempio2>
    2362:	e3 95       	inc	r30
    2364:	6f c1       	rjmp	.+734    	; 0x2644 <__fp_sinus>

00002366 <__divsf3>:
    2366:	0c d0       	rcall	.+24     	; 0x2380 <__divsf3x>
    2368:	5c c1       	rjmp	.+696    	; 0x2622 <__fp_round>
    236a:	2c d1       	rcall	.+600    	; 0x25c4 <__fp_pscB>
    236c:	40 f0       	brcs	.+16     	; 0x237e <__divsf3+0x18>
    236e:	23 d1       	rcall	.+582    	; 0x25b6 <__fp_pscA>
    2370:	30 f0       	brcs	.+12     	; 0x237e <__divsf3+0x18>
    2372:	21 f4       	brne	.+8      	; 0x237c <__divsf3+0x16>
    2374:	5f 3f       	cpi	r21, 0xFF	; 255
    2376:	19 f0       	breq	.+6      	; 0x237e <__divsf3+0x18>
    2378:	f0 c0       	rjmp	.+480    	; 0x255a <__fp_inf>
    237a:	51 11       	cpse	r21, r1
    237c:	97 c1       	rjmp	.+814    	; 0x26ac <__fp_szero>
    237e:	f3 c0       	rjmp	.+486    	; 0x2566 <__fp_nan>

00002380 <__divsf3x>:
    2380:	72 d1       	rcall	.+740    	; 0x2666 <__fp_split3>
    2382:	98 f3       	brcs	.-26     	; 0x236a <__divsf3+0x4>

00002384 <__divsf3_pse>:
    2384:	99 23       	and	r25, r25
    2386:	c9 f3       	breq	.-14     	; 0x237a <__divsf3+0x14>
    2388:	55 23       	and	r21, r21
    238a:	b1 f3       	breq	.-20     	; 0x2378 <__divsf3+0x12>
    238c:	95 1b       	sub	r25, r21
    238e:	55 0b       	sbc	r21, r21
    2390:	bb 27       	eor	r27, r27
    2392:	aa 27       	eor	r26, r26
    2394:	62 17       	cp	r22, r18
    2396:	73 07       	cpc	r23, r19
    2398:	84 07       	cpc	r24, r20
    239a:	38 f0       	brcs	.+14     	; 0x23aa <__divsf3_pse+0x26>
    239c:	9f 5f       	subi	r25, 0xFF	; 255
    239e:	5f 4f       	sbci	r21, 0xFF	; 255
    23a0:	22 0f       	add	r18, r18
    23a2:	33 1f       	adc	r19, r19
    23a4:	44 1f       	adc	r20, r20
    23a6:	aa 1f       	adc	r26, r26
    23a8:	a9 f3       	breq	.-22     	; 0x2394 <__divsf3_pse+0x10>
    23aa:	33 d0       	rcall	.+102    	; 0x2412 <__divsf3_pse+0x8e>
    23ac:	0e 2e       	mov	r0, r30
    23ae:	3a f0       	brmi	.+14     	; 0x23be <__divsf3_pse+0x3a>
    23b0:	e0 e8       	ldi	r30, 0x80	; 128
    23b2:	30 d0       	rcall	.+96     	; 0x2414 <__divsf3_pse+0x90>
    23b4:	91 50       	subi	r25, 0x01	; 1
    23b6:	50 40       	sbci	r21, 0x00	; 0
    23b8:	e6 95       	lsr	r30
    23ba:	00 1c       	adc	r0, r0
    23bc:	ca f7       	brpl	.-14     	; 0x23b0 <__divsf3_pse+0x2c>
    23be:	29 d0       	rcall	.+82     	; 0x2412 <__divsf3_pse+0x8e>
    23c0:	fe 2f       	mov	r31, r30
    23c2:	27 d0       	rcall	.+78     	; 0x2412 <__divsf3_pse+0x8e>
    23c4:	66 0f       	add	r22, r22
    23c6:	77 1f       	adc	r23, r23
    23c8:	88 1f       	adc	r24, r24
    23ca:	bb 1f       	adc	r27, r27
    23cc:	26 17       	cp	r18, r22
    23ce:	37 07       	cpc	r19, r23
    23d0:	48 07       	cpc	r20, r24
    23d2:	ab 07       	cpc	r26, r27
    23d4:	b0 e8       	ldi	r27, 0x80	; 128
    23d6:	09 f0       	breq	.+2      	; 0x23da <__divsf3_pse+0x56>
    23d8:	bb 0b       	sbc	r27, r27
    23da:	80 2d       	mov	r24, r0
    23dc:	bf 01       	movw	r22, r30
    23de:	ff 27       	eor	r31, r31
    23e0:	93 58       	subi	r25, 0x83	; 131
    23e2:	5f 4f       	sbci	r21, 0xFF	; 255
    23e4:	2a f0       	brmi	.+10     	; 0x23f0 <__divsf3_pse+0x6c>
    23e6:	9e 3f       	cpi	r25, 0xFE	; 254
    23e8:	51 05       	cpc	r21, r1
    23ea:	68 f0       	brcs	.+26     	; 0x2406 <__divsf3_pse+0x82>
    23ec:	b6 c0       	rjmp	.+364    	; 0x255a <__fp_inf>
    23ee:	5e c1       	rjmp	.+700    	; 0x26ac <__fp_szero>
    23f0:	5f 3f       	cpi	r21, 0xFF	; 255
    23f2:	ec f3       	brlt	.-6      	; 0x23ee <__divsf3_pse+0x6a>
    23f4:	98 3e       	cpi	r25, 0xE8	; 232
    23f6:	dc f3       	brlt	.-10     	; 0x23ee <__divsf3_pse+0x6a>
    23f8:	86 95       	lsr	r24
    23fa:	77 95       	ror	r23
    23fc:	67 95       	ror	r22
    23fe:	b7 95       	ror	r27
    2400:	f7 95       	ror	r31
    2402:	9f 5f       	subi	r25, 0xFF	; 255
    2404:	c9 f7       	brne	.-14     	; 0x23f8 <__divsf3_pse+0x74>
    2406:	88 0f       	add	r24, r24
    2408:	91 1d       	adc	r25, r1
    240a:	96 95       	lsr	r25
    240c:	87 95       	ror	r24
    240e:	97 f9       	bld	r25, 7
    2410:	08 95       	ret
    2412:	e1 e0       	ldi	r30, 0x01	; 1
    2414:	66 0f       	add	r22, r22
    2416:	77 1f       	adc	r23, r23
    2418:	88 1f       	adc	r24, r24
    241a:	bb 1f       	adc	r27, r27
    241c:	62 17       	cp	r22, r18
    241e:	73 07       	cpc	r23, r19
    2420:	84 07       	cpc	r24, r20
    2422:	ba 07       	cpc	r27, r26
    2424:	20 f0       	brcs	.+8      	; 0x242e <__divsf3_pse+0xaa>
    2426:	62 1b       	sub	r22, r18
    2428:	73 0b       	sbc	r23, r19
    242a:	84 0b       	sbc	r24, r20
    242c:	ba 0b       	sbc	r27, r26
    242e:	ee 1f       	adc	r30, r30
    2430:	88 f7       	brcc	.-30     	; 0x2414 <__divsf3_pse+0x90>
    2432:	e0 95       	com	r30
    2434:	08 95       	ret

00002436 <__fixsfsi>:
    2436:	04 d0       	rcall	.+8      	; 0x2440 <__fixunssfsi>
    2438:	68 94       	set
    243a:	b1 11       	cpse	r27, r1
    243c:	37 c1       	rjmp	.+622    	; 0x26ac <__fp_szero>
    243e:	08 95       	ret

00002440 <__fixunssfsi>:
    2440:	1a d1       	rcall	.+564    	; 0x2676 <__fp_splitA>
    2442:	88 f0       	brcs	.+34     	; 0x2466 <__fixunssfsi+0x26>
    2444:	9f 57       	subi	r25, 0x7F	; 127
    2446:	90 f0       	brcs	.+36     	; 0x246c <__fixunssfsi+0x2c>
    2448:	b9 2f       	mov	r27, r25
    244a:	99 27       	eor	r25, r25
    244c:	b7 51       	subi	r27, 0x17	; 23
    244e:	a0 f0       	brcs	.+40     	; 0x2478 <__fixunssfsi+0x38>
    2450:	d1 f0       	breq	.+52     	; 0x2486 <__fixunssfsi+0x46>
    2452:	66 0f       	add	r22, r22
    2454:	77 1f       	adc	r23, r23
    2456:	88 1f       	adc	r24, r24
    2458:	99 1f       	adc	r25, r25
    245a:	1a f0       	brmi	.+6      	; 0x2462 <__fixunssfsi+0x22>
    245c:	ba 95       	dec	r27
    245e:	c9 f7       	brne	.-14     	; 0x2452 <__fixunssfsi+0x12>
    2460:	12 c0       	rjmp	.+36     	; 0x2486 <__fixunssfsi+0x46>
    2462:	b1 30       	cpi	r27, 0x01	; 1
    2464:	81 f0       	breq	.+32     	; 0x2486 <__fixunssfsi+0x46>
    2466:	21 d1       	rcall	.+578    	; 0x26aa <__fp_zero>
    2468:	b1 e0       	ldi	r27, 0x01	; 1
    246a:	08 95       	ret
    246c:	1e c1       	rjmp	.+572    	; 0x26aa <__fp_zero>
    246e:	67 2f       	mov	r22, r23
    2470:	78 2f       	mov	r23, r24
    2472:	88 27       	eor	r24, r24
    2474:	b8 5f       	subi	r27, 0xF8	; 248
    2476:	39 f0       	breq	.+14     	; 0x2486 <__fixunssfsi+0x46>
    2478:	b9 3f       	cpi	r27, 0xF9	; 249
    247a:	cc f3       	brlt	.-14     	; 0x246e <__fixunssfsi+0x2e>
    247c:	86 95       	lsr	r24
    247e:	77 95       	ror	r23
    2480:	67 95       	ror	r22
    2482:	b3 95       	inc	r27
    2484:	d9 f7       	brne	.-10     	; 0x247c <__fixunssfsi+0x3c>
    2486:	3e f4       	brtc	.+14     	; 0x2496 <__fixunssfsi+0x56>
    2488:	90 95       	com	r25
    248a:	80 95       	com	r24
    248c:	70 95       	com	r23
    248e:	61 95       	neg	r22
    2490:	7f 4f       	sbci	r23, 0xFF	; 255
    2492:	8f 4f       	sbci	r24, 0xFF	; 255
    2494:	9f 4f       	sbci	r25, 0xFF	; 255
    2496:	08 95       	ret

00002498 <__floatunsisf>:
    2498:	e8 94       	clt
    249a:	09 c0       	rjmp	.+18     	; 0x24ae <__floatsisf+0x12>

0000249c <__floatsisf>:
    249c:	97 fb       	bst	r25, 7
    249e:	3e f4       	brtc	.+14     	; 0x24ae <__floatsisf+0x12>
    24a0:	90 95       	com	r25
    24a2:	80 95       	com	r24
    24a4:	70 95       	com	r23
    24a6:	61 95       	neg	r22
    24a8:	7f 4f       	sbci	r23, 0xFF	; 255
    24aa:	8f 4f       	sbci	r24, 0xFF	; 255
    24ac:	9f 4f       	sbci	r25, 0xFF	; 255
    24ae:	99 23       	and	r25, r25
    24b0:	a9 f0       	breq	.+42     	; 0x24dc <__floatsisf+0x40>
    24b2:	f9 2f       	mov	r31, r25
    24b4:	96 e9       	ldi	r25, 0x96	; 150
    24b6:	bb 27       	eor	r27, r27
    24b8:	93 95       	inc	r25
    24ba:	f6 95       	lsr	r31
    24bc:	87 95       	ror	r24
    24be:	77 95       	ror	r23
    24c0:	67 95       	ror	r22
    24c2:	b7 95       	ror	r27
    24c4:	f1 11       	cpse	r31, r1
    24c6:	f8 cf       	rjmp	.-16     	; 0x24b8 <__floatsisf+0x1c>
    24c8:	fa f4       	brpl	.+62     	; 0x2508 <__floatsisf+0x6c>
    24ca:	bb 0f       	add	r27, r27
    24cc:	11 f4       	brne	.+4      	; 0x24d2 <__floatsisf+0x36>
    24ce:	60 ff       	sbrs	r22, 0
    24d0:	1b c0       	rjmp	.+54     	; 0x2508 <__floatsisf+0x6c>
    24d2:	6f 5f       	subi	r22, 0xFF	; 255
    24d4:	7f 4f       	sbci	r23, 0xFF	; 255
    24d6:	8f 4f       	sbci	r24, 0xFF	; 255
    24d8:	9f 4f       	sbci	r25, 0xFF	; 255
    24da:	16 c0       	rjmp	.+44     	; 0x2508 <__floatsisf+0x6c>
    24dc:	88 23       	and	r24, r24
    24de:	11 f0       	breq	.+4      	; 0x24e4 <__floatsisf+0x48>
    24e0:	96 e9       	ldi	r25, 0x96	; 150
    24e2:	11 c0       	rjmp	.+34     	; 0x2506 <__floatsisf+0x6a>
    24e4:	77 23       	and	r23, r23
    24e6:	21 f0       	breq	.+8      	; 0x24f0 <__floatsisf+0x54>
    24e8:	9e e8       	ldi	r25, 0x8E	; 142
    24ea:	87 2f       	mov	r24, r23
    24ec:	76 2f       	mov	r23, r22
    24ee:	05 c0       	rjmp	.+10     	; 0x24fa <__floatsisf+0x5e>
    24f0:	66 23       	and	r22, r22
    24f2:	71 f0       	breq	.+28     	; 0x2510 <__floatsisf+0x74>
    24f4:	96 e8       	ldi	r25, 0x86	; 134
    24f6:	86 2f       	mov	r24, r22
    24f8:	70 e0       	ldi	r23, 0x00	; 0
    24fa:	60 e0       	ldi	r22, 0x00	; 0
    24fc:	2a f0       	brmi	.+10     	; 0x2508 <__floatsisf+0x6c>
    24fe:	9a 95       	dec	r25
    2500:	66 0f       	add	r22, r22
    2502:	77 1f       	adc	r23, r23
    2504:	88 1f       	adc	r24, r24
    2506:	da f7       	brpl	.-10     	; 0x24fe <__floatsisf+0x62>
    2508:	88 0f       	add	r24, r24
    250a:	96 95       	lsr	r25
    250c:	87 95       	ror	r24
    250e:	97 f9       	bld	r25, 7
    2510:	08 95       	ret

00002512 <__fp_cmp>:
    2512:	99 0f       	add	r25, r25
    2514:	00 08       	sbc	r0, r0
    2516:	55 0f       	add	r21, r21
    2518:	aa 0b       	sbc	r26, r26
    251a:	e0 e8       	ldi	r30, 0x80	; 128
    251c:	fe ef       	ldi	r31, 0xFE	; 254
    251e:	16 16       	cp	r1, r22
    2520:	17 06       	cpc	r1, r23
    2522:	e8 07       	cpc	r30, r24
    2524:	f9 07       	cpc	r31, r25
    2526:	c0 f0       	brcs	.+48     	; 0x2558 <__fp_cmp+0x46>
    2528:	12 16       	cp	r1, r18
    252a:	13 06       	cpc	r1, r19
    252c:	e4 07       	cpc	r30, r20
    252e:	f5 07       	cpc	r31, r21
    2530:	98 f0       	brcs	.+38     	; 0x2558 <__fp_cmp+0x46>
    2532:	62 1b       	sub	r22, r18
    2534:	73 0b       	sbc	r23, r19
    2536:	84 0b       	sbc	r24, r20
    2538:	95 0b       	sbc	r25, r21
    253a:	39 f4       	brne	.+14     	; 0x254a <__fp_cmp+0x38>
    253c:	0a 26       	eor	r0, r26
    253e:	61 f0       	breq	.+24     	; 0x2558 <__fp_cmp+0x46>
    2540:	23 2b       	or	r18, r19
    2542:	24 2b       	or	r18, r20
    2544:	25 2b       	or	r18, r21
    2546:	21 f4       	brne	.+8      	; 0x2550 <__fp_cmp+0x3e>
    2548:	08 95       	ret
    254a:	0a 26       	eor	r0, r26
    254c:	09 f4       	brne	.+2      	; 0x2550 <__fp_cmp+0x3e>
    254e:	a1 40       	sbci	r26, 0x01	; 1
    2550:	a6 95       	lsr	r26
    2552:	8f ef       	ldi	r24, 0xFF	; 255
    2554:	81 1d       	adc	r24, r1
    2556:	81 1d       	adc	r24, r1
    2558:	08 95       	ret

0000255a <__fp_inf>:
    255a:	97 f9       	bld	r25, 7
    255c:	9f 67       	ori	r25, 0x7F	; 127
    255e:	80 e8       	ldi	r24, 0x80	; 128
    2560:	70 e0       	ldi	r23, 0x00	; 0
    2562:	60 e0       	ldi	r22, 0x00	; 0
    2564:	08 95       	ret

00002566 <__fp_nan>:
    2566:	9f ef       	ldi	r25, 0xFF	; 255
    2568:	80 ec       	ldi	r24, 0xC0	; 192
    256a:	08 95       	ret

0000256c <__fp_powser>:
    256c:	df 93       	push	r29
    256e:	cf 93       	push	r28
    2570:	1f 93       	push	r17
    2572:	0f 93       	push	r16
    2574:	ff 92       	push	r15
    2576:	ef 92       	push	r14
    2578:	df 92       	push	r13
    257a:	7b 01       	movw	r14, r22
    257c:	8c 01       	movw	r16, r24
    257e:	68 94       	set
    2580:	05 c0       	rjmp	.+10     	; 0x258c <__fp_powser+0x20>
    2582:	da 2e       	mov	r13, r26
    2584:	ef 01       	movw	r28, r30
    2586:	af d0       	rcall	.+350    	; 0x26e6 <__mulsf3x>
    2588:	fe 01       	movw	r30, r28
    258a:	e8 94       	clt
    258c:	a5 91       	lpm	r26, Z+
    258e:	25 91       	lpm	r18, Z+
    2590:	35 91       	lpm	r19, Z+
    2592:	45 91       	lpm	r20, Z+
    2594:	55 91       	lpm	r21, Z+
    2596:	ae f3       	brts	.-22     	; 0x2582 <__fp_powser+0x16>
    2598:	ef 01       	movw	r28, r30
    259a:	29 de       	rcall	.-942    	; 0x21ee <__addsf3x>
    259c:	fe 01       	movw	r30, r28
    259e:	97 01       	movw	r18, r14
    25a0:	a8 01       	movw	r20, r16
    25a2:	da 94       	dec	r13
    25a4:	79 f7       	brne	.-34     	; 0x2584 <__fp_powser+0x18>
    25a6:	df 90       	pop	r13
    25a8:	ef 90       	pop	r14
    25aa:	ff 90       	pop	r15
    25ac:	0f 91       	pop	r16
    25ae:	1f 91       	pop	r17
    25b0:	cf 91       	pop	r28
    25b2:	df 91       	pop	r29
    25b4:	08 95       	ret

000025b6 <__fp_pscA>:
    25b6:	00 24       	eor	r0, r0
    25b8:	0a 94       	dec	r0
    25ba:	16 16       	cp	r1, r22
    25bc:	17 06       	cpc	r1, r23
    25be:	18 06       	cpc	r1, r24
    25c0:	09 06       	cpc	r0, r25
    25c2:	08 95       	ret

000025c4 <__fp_pscB>:
    25c4:	00 24       	eor	r0, r0
    25c6:	0a 94       	dec	r0
    25c8:	12 16       	cp	r1, r18
    25ca:	13 06       	cpc	r1, r19
    25cc:	14 06       	cpc	r1, r20
    25ce:	05 06       	cpc	r0, r21
    25d0:	08 95       	ret
    25d2:	c9 cf       	rjmp	.-110    	; 0x2566 <__fp_nan>

000025d4 <__fp_rempio2>:
    25d4:	50 d0       	rcall	.+160    	; 0x2676 <__fp_splitA>
    25d6:	e8 f3       	brcs	.-6      	; 0x25d2 <__fp_pscB+0xe>
    25d8:	e8 94       	clt
    25da:	e0 e0       	ldi	r30, 0x00	; 0
    25dc:	bb 27       	eor	r27, r27
    25de:	9f 57       	subi	r25, 0x7F	; 127
    25e0:	f0 f0       	brcs	.+60     	; 0x261e <__fp_rempio2+0x4a>
    25e2:	2a ed       	ldi	r18, 0xDA	; 218
    25e4:	3f e0       	ldi	r19, 0x0F	; 15
    25e6:	49 ec       	ldi	r20, 0xC9	; 201
    25e8:	06 c0       	rjmp	.+12     	; 0x25f6 <__fp_rempio2+0x22>
    25ea:	ee 0f       	add	r30, r30
    25ec:	bb 0f       	add	r27, r27
    25ee:	66 1f       	adc	r22, r22
    25f0:	77 1f       	adc	r23, r23
    25f2:	88 1f       	adc	r24, r24
    25f4:	28 f0       	brcs	.+10     	; 0x2600 <__fp_rempio2+0x2c>
    25f6:	b2 3a       	cpi	r27, 0xA2	; 162
    25f8:	62 07       	cpc	r22, r18
    25fa:	73 07       	cpc	r23, r19
    25fc:	84 07       	cpc	r24, r20
    25fe:	28 f0       	brcs	.+10     	; 0x260a <__fp_rempio2+0x36>
    2600:	b2 5a       	subi	r27, 0xA2	; 162
    2602:	62 0b       	sbc	r22, r18
    2604:	73 0b       	sbc	r23, r19
    2606:	84 0b       	sbc	r24, r20
    2608:	e3 95       	inc	r30
    260a:	9a 95       	dec	r25
    260c:	72 f7       	brpl	.-36     	; 0x25ea <__fp_rempio2+0x16>
    260e:	80 38       	cpi	r24, 0x80	; 128
    2610:	30 f4       	brcc	.+12     	; 0x261e <__fp_rempio2+0x4a>
    2612:	9a 95       	dec	r25
    2614:	bb 0f       	add	r27, r27
    2616:	66 1f       	adc	r22, r22
    2618:	77 1f       	adc	r23, r23
    261a:	88 1f       	adc	r24, r24
    261c:	d2 f7       	brpl	.-12     	; 0x2612 <__fp_rempio2+0x3e>
    261e:	90 48       	sbci	r25, 0x80	; 128
    2620:	06 c1       	rjmp	.+524    	; 0x282e <__fp_mpack_finite>

00002622 <__fp_round>:
    2622:	09 2e       	mov	r0, r25
    2624:	03 94       	inc	r0
    2626:	00 0c       	add	r0, r0
    2628:	11 f4       	brne	.+4      	; 0x262e <__fp_round+0xc>
    262a:	88 23       	and	r24, r24
    262c:	52 f0       	brmi	.+20     	; 0x2642 <__fp_round+0x20>
    262e:	bb 0f       	add	r27, r27
    2630:	40 f4       	brcc	.+16     	; 0x2642 <__fp_round+0x20>
    2632:	bf 2b       	or	r27, r31
    2634:	11 f4       	brne	.+4      	; 0x263a <__fp_round+0x18>
    2636:	60 ff       	sbrs	r22, 0
    2638:	04 c0       	rjmp	.+8      	; 0x2642 <__fp_round+0x20>
    263a:	6f 5f       	subi	r22, 0xFF	; 255
    263c:	7f 4f       	sbci	r23, 0xFF	; 255
    263e:	8f 4f       	sbci	r24, 0xFF	; 255
    2640:	9f 4f       	sbci	r25, 0xFF	; 255
    2642:	08 95       	ret

00002644 <__fp_sinus>:
    2644:	ef 93       	push	r30
    2646:	e0 ff       	sbrs	r30, 0
    2648:	06 c0       	rjmp	.+12     	; 0x2656 <__fp_sinus+0x12>
    264a:	a2 ea       	ldi	r26, 0xA2	; 162
    264c:	2a ed       	ldi	r18, 0xDA	; 218
    264e:	3f e0       	ldi	r19, 0x0F	; 15
    2650:	49 ec       	ldi	r20, 0xC9	; 201
    2652:	5f eb       	ldi	r21, 0xBF	; 191
    2654:	cc dd       	rcall	.-1128   	; 0x21ee <__addsf3x>
    2656:	e5 df       	rcall	.-54     	; 0x2622 <__fp_round>
    2658:	0f 90       	pop	r0
    265a:	03 94       	inc	r0
    265c:	01 fc       	sbrc	r0, 1
    265e:	90 58       	subi	r25, 0x80	; 128
    2660:	e9 eb       	ldi	r30, 0xB9	; 185
    2662:	f0 e0       	ldi	r31, 0x00	; 0
    2664:	f7 c0       	rjmp	.+494    	; 0x2854 <__fp_powsodd>

00002666 <__fp_split3>:
    2666:	57 fd       	sbrc	r21, 7
    2668:	90 58       	subi	r25, 0x80	; 128
    266a:	44 0f       	add	r20, r20
    266c:	55 1f       	adc	r21, r21
    266e:	59 f0       	breq	.+22     	; 0x2686 <__fp_splitA+0x10>
    2670:	5f 3f       	cpi	r21, 0xFF	; 255
    2672:	71 f0       	breq	.+28     	; 0x2690 <__fp_splitA+0x1a>
    2674:	47 95       	ror	r20

00002676 <__fp_splitA>:
    2676:	88 0f       	add	r24, r24
    2678:	97 fb       	bst	r25, 7
    267a:	99 1f       	adc	r25, r25
    267c:	61 f0       	breq	.+24     	; 0x2696 <__fp_splitA+0x20>
    267e:	9f 3f       	cpi	r25, 0xFF	; 255
    2680:	79 f0       	breq	.+30     	; 0x26a0 <__fp_splitA+0x2a>
    2682:	87 95       	ror	r24
    2684:	08 95       	ret
    2686:	12 16       	cp	r1, r18
    2688:	13 06       	cpc	r1, r19
    268a:	14 06       	cpc	r1, r20
    268c:	55 1f       	adc	r21, r21
    268e:	f2 cf       	rjmp	.-28     	; 0x2674 <__fp_split3+0xe>
    2690:	46 95       	lsr	r20
    2692:	f1 df       	rcall	.-30     	; 0x2676 <__fp_splitA>
    2694:	08 c0       	rjmp	.+16     	; 0x26a6 <__fp_splitA+0x30>
    2696:	16 16       	cp	r1, r22
    2698:	17 06       	cpc	r1, r23
    269a:	18 06       	cpc	r1, r24
    269c:	99 1f       	adc	r25, r25
    269e:	f1 cf       	rjmp	.-30     	; 0x2682 <__fp_splitA+0xc>
    26a0:	86 95       	lsr	r24
    26a2:	71 05       	cpc	r23, r1
    26a4:	61 05       	cpc	r22, r1
    26a6:	08 94       	sec
    26a8:	08 95       	ret

000026aa <__fp_zero>:
    26aa:	e8 94       	clt

000026ac <__fp_szero>:
    26ac:	bb 27       	eor	r27, r27
    26ae:	66 27       	eor	r22, r22
    26b0:	77 27       	eor	r23, r23
    26b2:	cb 01       	movw	r24, r22
    26b4:	97 f9       	bld	r25, 7
    26b6:	08 95       	ret

000026b8 <__gesf2>:
    26b8:	2c df       	rcall	.-424    	; 0x2512 <__fp_cmp>
    26ba:	08 f4       	brcc	.+2      	; 0x26be <__gesf2+0x6>
    26bc:	8f ef       	ldi	r24, 0xFF	; 255
    26be:	08 95       	ret

000026c0 <inverse>:
    26c0:	9b 01       	movw	r18, r22
    26c2:	ac 01       	movw	r20, r24
    26c4:	60 e0       	ldi	r22, 0x00	; 0
    26c6:	70 e0       	ldi	r23, 0x00	; 0
    26c8:	80 e8       	ldi	r24, 0x80	; 128
    26ca:	9f e3       	ldi	r25, 0x3F	; 63
    26cc:	4c ce       	rjmp	.-872    	; 0x2366 <__divsf3>

000026ce <__mulsf3>:
    26ce:	0b d0       	rcall	.+22     	; 0x26e6 <__mulsf3x>
    26d0:	a8 cf       	rjmp	.-176    	; 0x2622 <__fp_round>
    26d2:	71 df       	rcall	.-286    	; 0x25b6 <__fp_pscA>
    26d4:	28 f0       	brcs	.+10     	; 0x26e0 <__mulsf3+0x12>
    26d6:	76 df       	rcall	.-276    	; 0x25c4 <__fp_pscB>
    26d8:	18 f0       	brcs	.+6      	; 0x26e0 <__mulsf3+0x12>
    26da:	95 23       	and	r25, r21
    26dc:	09 f0       	breq	.+2      	; 0x26e0 <__mulsf3+0x12>
    26de:	3d cf       	rjmp	.-390    	; 0x255a <__fp_inf>
    26e0:	42 cf       	rjmp	.-380    	; 0x2566 <__fp_nan>
    26e2:	11 24       	eor	r1, r1
    26e4:	e3 cf       	rjmp	.-58     	; 0x26ac <__fp_szero>

000026e6 <__mulsf3x>:
    26e6:	bf df       	rcall	.-130    	; 0x2666 <__fp_split3>
    26e8:	a0 f3       	brcs	.-24     	; 0x26d2 <__mulsf3+0x4>

000026ea <__mulsf3_pse>:
    26ea:	95 9f       	mul	r25, r21
    26ec:	d1 f3       	breq	.-12     	; 0x26e2 <__mulsf3+0x14>
    26ee:	95 0f       	add	r25, r21
    26f0:	50 e0       	ldi	r21, 0x00	; 0
    26f2:	55 1f       	adc	r21, r21
    26f4:	62 9f       	mul	r22, r18
    26f6:	f0 01       	movw	r30, r0
    26f8:	72 9f       	mul	r23, r18
    26fa:	bb 27       	eor	r27, r27
    26fc:	f0 0d       	add	r31, r0
    26fe:	b1 1d       	adc	r27, r1
    2700:	63 9f       	mul	r22, r19
    2702:	aa 27       	eor	r26, r26
    2704:	f0 0d       	add	r31, r0
    2706:	b1 1d       	adc	r27, r1
    2708:	aa 1f       	adc	r26, r26
    270a:	64 9f       	mul	r22, r20
    270c:	66 27       	eor	r22, r22
    270e:	b0 0d       	add	r27, r0
    2710:	a1 1d       	adc	r26, r1
    2712:	66 1f       	adc	r22, r22
    2714:	82 9f       	mul	r24, r18
    2716:	22 27       	eor	r18, r18
    2718:	b0 0d       	add	r27, r0
    271a:	a1 1d       	adc	r26, r1
    271c:	62 1f       	adc	r22, r18
    271e:	73 9f       	mul	r23, r19
    2720:	b0 0d       	add	r27, r0
    2722:	a1 1d       	adc	r26, r1
    2724:	62 1f       	adc	r22, r18
    2726:	83 9f       	mul	r24, r19
    2728:	a0 0d       	add	r26, r0
    272a:	61 1d       	adc	r22, r1
    272c:	22 1f       	adc	r18, r18
    272e:	74 9f       	mul	r23, r20
    2730:	33 27       	eor	r19, r19
    2732:	a0 0d       	add	r26, r0
    2734:	61 1d       	adc	r22, r1
    2736:	23 1f       	adc	r18, r19
    2738:	84 9f       	mul	r24, r20
    273a:	60 0d       	add	r22, r0
    273c:	21 1d       	adc	r18, r1
    273e:	82 2f       	mov	r24, r18
    2740:	76 2f       	mov	r23, r22
    2742:	6a 2f       	mov	r22, r26
    2744:	11 24       	eor	r1, r1
    2746:	9f 57       	subi	r25, 0x7F	; 127
    2748:	50 40       	sbci	r21, 0x00	; 0
    274a:	8a f0       	brmi	.+34     	; 0x276e <__mulsf3_pse+0x84>
    274c:	e1 f0       	breq	.+56     	; 0x2786 <__mulsf3_pse+0x9c>
    274e:	88 23       	and	r24, r24
    2750:	4a f0       	brmi	.+18     	; 0x2764 <__mulsf3_pse+0x7a>
    2752:	ee 0f       	add	r30, r30
    2754:	ff 1f       	adc	r31, r31
    2756:	bb 1f       	adc	r27, r27
    2758:	66 1f       	adc	r22, r22
    275a:	77 1f       	adc	r23, r23
    275c:	88 1f       	adc	r24, r24
    275e:	91 50       	subi	r25, 0x01	; 1
    2760:	50 40       	sbci	r21, 0x00	; 0
    2762:	a9 f7       	brne	.-22     	; 0x274e <__mulsf3_pse+0x64>
    2764:	9e 3f       	cpi	r25, 0xFE	; 254
    2766:	51 05       	cpc	r21, r1
    2768:	70 f0       	brcs	.+28     	; 0x2786 <__mulsf3_pse+0x9c>
    276a:	f7 ce       	rjmp	.-530    	; 0x255a <__fp_inf>
    276c:	9f cf       	rjmp	.-194    	; 0x26ac <__fp_szero>
    276e:	5f 3f       	cpi	r21, 0xFF	; 255
    2770:	ec f3       	brlt	.-6      	; 0x276c <__mulsf3_pse+0x82>
    2772:	98 3e       	cpi	r25, 0xE8	; 232
    2774:	dc f3       	brlt	.-10     	; 0x276c <__mulsf3_pse+0x82>
    2776:	86 95       	lsr	r24
    2778:	77 95       	ror	r23
    277a:	67 95       	ror	r22
    277c:	b7 95       	ror	r27
    277e:	f7 95       	ror	r31
    2780:	e7 95       	ror	r30
    2782:	9f 5f       	subi	r25, 0xFF	; 255
    2784:	c1 f7       	brne	.-16     	; 0x2776 <__mulsf3_pse+0x8c>
    2786:	fe 2b       	or	r31, r30
    2788:	88 0f       	add	r24, r24
    278a:	91 1d       	adc	r25, r1
    278c:	96 95       	lsr	r25
    278e:	87 95       	ror	r24
    2790:	97 f9       	bld	r25, 7
    2792:	08 95       	ret

00002794 <sin>:
    2794:	9f 93       	push	r25
    2796:	1e df       	rcall	.-452    	; 0x25d4 <__fp_rempio2>
    2798:	0f 90       	pop	r0
    279a:	07 fc       	sbrc	r0, 7
    279c:	ee 5f       	subi	r30, 0xFE	; 254
    279e:	52 cf       	rjmp	.-348    	; 0x2644 <__fp_sinus>
    27a0:	11 f4       	brne	.+4      	; 0x27a6 <sin+0x12>
    27a2:	0e f4       	brtc	.+2      	; 0x27a6 <sin+0x12>
    27a4:	e0 ce       	rjmp	.-576    	; 0x2566 <__fp_nan>
    27a6:	41 c0       	rjmp	.+130    	; 0x282a <__fp_mpack>

000027a8 <sqrt>:
    27a8:	66 df       	rcall	.-308    	; 0x2676 <__fp_splitA>
    27aa:	d0 f3       	brcs	.-12     	; 0x27a0 <sin+0xc>
    27ac:	99 23       	and	r25, r25
    27ae:	d9 f3       	breq	.-10     	; 0x27a6 <sin+0x12>
    27b0:	ce f3       	brts	.-14     	; 0x27a4 <sin+0x10>
    27b2:	9f 57       	subi	r25, 0x7F	; 127
    27b4:	55 0b       	sbc	r21, r21
    27b6:	87 ff       	sbrs	r24, 7
    27b8:	46 d0       	rcall	.+140    	; 0x2846 <__fp_norm2>
    27ba:	00 24       	eor	r0, r0
    27bc:	a0 e6       	ldi	r26, 0x60	; 96
    27be:	40 ea       	ldi	r20, 0xA0	; 160
    27c0:	90 01       	movw	r18, r0
    27c2:	80 58       	subi	r24, 0x80	; 128
    27c4:	56 95       	lsr	r21
    27c6:	97 95       	ror	r25
    27c8:	28 f4       	brcc	.+10     	; 0x27d4 <sqrt+0x2c>
    27ca:	80 5c       	subi	r24, 0xC0	; 192
    27cc:	66 0f       	add	r22, r22
    27ce:	77 1f       	adc	r23, r23
    27d0:	88 1f       	adc	r24, r24
    27d2:	20 f0       	brcs	.+8      	; 0x27dc <sqrt+0x34>
    27d4:	26 17       	cp	r18, r22
    27d6:	37 07       	cpc	r19, r23
    27d8:	48 07       	cpc	r20, r24
    27da:	30 f4       	brcc	.+12     	; 0x27e8 <sqrt+0x40>
    27dc:	62 1b       	sub	r22, r18
    27de:	73 0b       	sbc	r23, r19
    27e0:	84 0b       	sbc	r24, r20
    27e2:	20 29       	or	r18, r0
    27e4:	31 29       	or	r19, r1
    27e6:	4a 2b       	or	r20, r26
    27e8:	a6 95       	lsr	r26
    27ea:	17 94       	ror	r1
    27ec:	07 94       	ror	r0
    27ee:	20 25       	eor	r18, r0
    27f0:	31 25       	eor	r19, r1
    27f2:	4a 27       	eor	r20, r26
    27f4:	58 f7       	brcc	.-42     	; 0x27cc <sqrt+0x24>
    27f6:	66 0f       	add	r22, r22
    27f8:	77 1f       	adc	r23, r23
    27fa:	88 1f       	adc	r24, r24
    27fc:	20 f0       	brcs	.+8      	; 0x2806 <sqrt+0x5e>
    27fe:	26 17       	cp	r18, r22
    2800:	37 07       	cpc	r19, r23
    2802:	48 07       	cpc	r20, r24
    2804:	30 f4       	brcc	.+12     	; 0x2812 <sqrt+0x6a>
    2806:	62 0b       	sbc	r22, r18
    2808:	73 0b       	sbc	r23, r19
    280a:	84 0b       	sbc	r24, r20
    280c:	20 0d       	add	r18, r0
    280e:	31 1d       	adc	r19, r1
    2810:	41 1d       	adc	r20, r1
    2812:	a0 95       	com	r26
    2814:	81 f7       	brne	.-32     	; 0x27f6 <sqrt+0x4e>
    2816:	b9 01       	movw	r22, r18
    2818:	84 2f       	mov	r24, r20
    281a:	91 58       	subi	r25, 0x81	; 129
    281c:	88 0f       	add	r24, r24
    281e:	96 95       	lsr	r25
    2820:	87 95       	ror	r24
    2822:	08 95       	ret

00002824 <square>:
    2824:	9b 01       	movw	r18, r22
    2826:	ac 01       	movw	r20, r24
    2828:	52 cf       	rjmp	.-348    	; 0x26ce <__mulsf3>

0000282a <__fp_mpack>:
    282a:	9f 3f       	cpi	r25, 0xFF	; 255
    282c:	31 f0       	breq	.+12     	; 0x283a <__fp_mpack_finite+0xc>

0000282e <__fp_mpack_finite>:
    282e:	91 50       	subi	r25, 0x01	; 1
    2830:	20 f4       	brcc	.+8      	; 0x283a <__fp_mpack_finite+0xc>
    2832:	87 95       	ror	r24
    2834:	77 95       	ror	r23
    2836:	67 95       	ror	r22
    2838:	b7 95       	ror	r27
    283a:	88 0f       	add	r24, r24
    283c:	91 1d       	adc	r25, r1
    283e:	96 95       	lsr	r25
    2840:	87 95       	ror	r24
    2842:	97 f9       	bld	r25, 7
    2844:	08 95       	ret

00002846 <__fp_norm2>:
    2846:	91 50       	subi	r25, 0x01	; 1
    2848:	50 40       	sbci	r21, 0x00	; 0
    284a:	66 0f       	add	r22, r22
    284c:	77 1f       	adc	r23, r23
    284e:	88 1f       	adc	r24, r24
    2850:	d2 f7       	brpl	.-12     	; 0x2846 <__fp_norm2>
    2852:	08 95       	ret

00002854 <__fp_powsodd>:
    2854:	9f 93       	push	r25
    2856:	8f 93       	push	r24
    2858:	7f 93       	push	r23
    285a:	6f 93       	push	r22
    285c:	ff 93       	push	r31
    285e:	ef 93       	push	r30
    2860:	9b 01       	movw	r18, r22
    2862:	ac 01       	movw	r20, r24
    2864:	34 df       	rcall	.-408    	; 0x26ce <__mulsf3>
    2866:	ef 91       	pop	r30
    2868:	ff 91       	pop	r31
    286a:	80 de       	rcall	.-768    	; 0x256c <__fp_powser>
    286c:	2f 91       	pop	r18
    286e:	3f 91       	pop	r19
    2870:	4f 91       	pop	r20
    2872:	5f 91       	pop	r21
    2874:	2c cf       	rjmp	.-424    	; 0x26ce <__mulsf3>

00002876 <__mulsi3>:
    2876:	db 01       	movw	r26, r22
    2878:	8f 93       	push	r24
    287a:	9f 93       	push	r25
    287c:	40 d0       	rcall	.+128    	; 0x28fe <__muluhisi3>
    287e:	bf 91       	pop	r27
    2880:	af 91       	pop	r26
    2882:	a2 9f       	mul	r26, r18
    2884:	80 0d       	add	r24, r0
    2886:	91 1d       	adc	r25, r1
    2888:	a3 9f       	mul	r26, r19
    288a:	90 0d       	add	r25, r0
    288c:	b2 9f       	mul	r27, r18
    288e:	90 0d       	add	r25, r0
    2890:	11 24       	eor	r1, r1
    2892:	08 95       	ret

00002894 <__divmodhi4>:
    2894:	97 fb       	bst	r25, 7
    2896:	07 2e       	mov	r0, r23
    2898:	16 f4       	brtc	.+4      	; 0x289e <__divmodhi4+0xa>
    289a:	00 94       	com	r0
    289c:	06 d0       	rcall	.+12     	; 0x28aa <__divmodhi4_neg1>
    289e:	77 fd       	sbrc	r23, 7
    28a0:	08 d0       	rcall	.+16     	; 0x28b2 <__divmodhi4_neg2>
    28a2:	74 d0       	rcall	.+232    	; 0x298c <__udivmodhi4>
    28a4:	07 fc       	sbrc	r0, 7
    28a6:	05 d0       	rcall	.+10     	; 0x28b2 <__divmodhi4_neg2>
    28a8:	3e f4       	brtc	.+14     	; 0x28b8 <__divmodhi4_exit>

000028aa <__divmodhi4_neg1>:
    28aa:	90 95       	com	r25
    28ac:	81 95       	neg	r24
    28ae:	9f 4f       	sbci	r25, 0xFF	; 255
    28b0:	08 95       	ret

000028b2 <__divmodhi4_neg2>:
    28b2:	70 95       	com	r23
    28b4:	61 95       	neg	r22
    28b6:	7f 4f       	sbci	r23, 0xFF	; 255

000028b8 <__divmodhi4_exit>:
    28b8:	08 95       	ret

000028ba <__udivmodsi4>:
    28ba:	a1 e2       	ldi	r26, 0x21	; 33
    28bc:	1a 2e       	mov	r1, r26
    28be:	aa 1b       	sub	r26, r26
    28c0:	bb 1b       	sub	r27, r27
    28c2:	fd 01       	movw	r30, r26
    28c4:	0d c0       	rjmp	.+26     	; 0x28e0 <__udivmodsi4_ep>

000028c6 <__udivmodsi4_loop>:
    28c6:	aa 1f       	adc	r26, r26
    28c8:	bb 1f       	adc	r27, r27
    28ca:	ee 1f       	adc	r30, r30
    28cc:	ff 1f       	adc	r31, r31
    28ce:	a2 17       	cp	r26, r18
    28d0:	b3 07       	cpc	r27, r19
    28d2:	e4 07       	cpc	r30, r20
    28d4:	f5 07       	cpc	r31, r21
    28d6:	20 f0       	brcs	.+8      	; 0x28e0 <__udivmodsi4_ep>
    28d8:	a2 1b       	sub	r26, r18
    28da:	b3 0b       	sbc	r27, r19
    28dc:	e4 0b       	sbc	r30, r20
    28de:	f5 0b       	sbc	r31, r21

000028e0 <__udivmodsi4_ep>:
    28e0:	66 1f       	adc	r22, r22
    28e2:	77 1f       	adc	r23, r23
    28e4:	88 1f       	adc	r24, r24
    28e6:	99 1f       	adc	r25, r25
    28e8:	1a 94       	dec	r1
    28ea:	69 f7       	brne	.-38     	; 0x28c6 <__udivmodsi4_loop>
    28ec:	60 95       	com	r22
    28ee:	70 95       	com	r23
    28f0:	80 95       	com	r24
    28f2:	90 95       	com	r25
    28f4:	9b 01       	movw	r18, r22
    28f6:	ac 01       	movw	r20, r24
    28f8:	bd 01       	movw	r22, r26
    28fa:	cf 01       	movw	r24, r30
    28fc:	08 95       	ret

000028fe <__muluhisi3>:
    28fe:	5a d0       	rcall	.+180    	; 0x29b4 <__umulhisi3>
    2900:	a5 9f       	mul	r26, r21
    2902:	90 0d       	add	r25, r0
    2904:	b4 9f       	mul	r27, r20
    2906:	90 0d       	add	r25, r0
    2908:	a4 9f       	mul	r26, r20
    290a:	80 0d       	add	r24, r0
    290c:	91 1d       	adc	r25, r1
    290e:	11 24       	eor	r1, r1
    2910:	08 95       	ret

00002912 <__mulshisi3>:
    2912:	b7 ff       	sbrs	r27, 7
    2914:	f4 cf       	rjmp	.-24     	; 0x28fe <__muluhisi3>

00002916 <__mulohisi3>:
    2916:	f3 df       	rcall	.-26     	; 0x28fe <__muluhisi3>
    2918:	82 1b       	sub	r24, r18
    291a:	93 0b       	sbc	r25, r19
    291c:	08 95       	ret

0000291e <__prologue_saves__>:
    291e:	2f 92       	push	r2
    2920:	3f 92       	push	r3
    2922:	4f 92       	push	r4
    2924:	5f 92       	push	r5
    2926:	6f 92       	push	r6
    2928:	7f 92       	push	r7
    292a:	8f 92       	push	r8
    292c:	9f 92       	push	r9
    292e:	af 92       	push	r10
    2930:	bf 92       	push	r11
    2932:	cf 92       	push	r12
    2934:	df 92       	push	r13
    2936:	ef 92       	push	r14
    2938:	ff 92       	push	r15
    293a:	0f 93       	push	r16
    293c:	1f 93       	push	r17
    293e:	cf 93       	push	r28
    2940:	df 93       	push	r29
    2942:	cd b7       	in	r28, 0x3d	; 61
    2944:	de b7       	in	r29, 0x3e	; 62
    2946:	ca 1b       	sub	r28, r26
    2948:	db 0b       	sbc	r29, r27
    294a:	0f b6       	in	r0, 0x3f	; 63
    294c:	f8 94       	cli
    294e:	de bf       	out	0x3e, r29	; 62
    2950:	0f be       	out	0x3f, r0	; 63
    2952:	cd bf       	out	0x3d, r28	; 61
    2954:	09 94       	ijmp

00002956 <__epilogue_restores__>:
    2956:	2a 88       	ldd	r2, Y+18	; 0x12
    2958:	39 88       	ldd	r3, Y+17	; 0x11
    295a:	48 88       	ldd	r4, Y+16	; 0x10
    295c:	5f 84       	ldd	r5, Y+15	; 0x0f
    295e:	6e 84       	ldd	r6, Y+14	; 0x0e
    2960:	7d 84       	ldd	r7, Y+13	; 0x0d
    2962:	8c 84       	ldd	r8, Y+12	; 0x0c
    2964:	9b 84       	ldd	r9, Y+11	; 0x0b
    2966:	aa 84       	ldd	r10, Y+10	; 0x0a
    2968:	b9 84       	ldd	r11, Y+9	; 0x09
    296a:	c8 84       	ldd	r12, Y+8	; 0x08
    296c:	df 80       	ldd	r13, Y+7	; 0x07
    296e:	ee 80       	ldd	r14, Y+6	; 0x06
    2970:	fd 80       	ldd	r15, Y+5	; 0x05
    2972:	0c 81       	ldd	r16, Y+4	; 0x04
    2974:	1b 81       	ldd	r17, Y+3	; 0x03
    2976:	aa 81       	ldd	r26, Y+2	; 0x02
    2978:	b9 81       	ldd	r27, Y+1	; 0x01
    297a:	ce 0f       	add	r28, r30
    297c:	d1 1d       	adc	r29, r1
    297e:	0f b6       	in	r0, 0x3f	; 63
    2980:	f8 94       	cli
    2982:	de bf       	out	0x3e, r29	; 62
    2984:	0f be       	out	0x3f, r0	; 63
    2986:	cd bf       	out	0x3d, r28	; 61
    2988:	ed 01       	movw	r28, r26
    298a:	08 95       	ret

0000298c <__udivmodhi4>:
    298c:	aa 1b       	sub	r26, r26
    298e:	bb 1b       	sub	r27, r27
    2990:	51 e1       	ldi	r21, 0x11	; 17
    2992:	07 c0       	rjmp	.+14     	; 0x29a2 <__udivmodhi4_ep>

00002994 <__udivmodhi4_loop>:
    2994:	aa 1f       	adc	r26, r26
    2996:	bb 1f       	adc	r27, r27
    2998:	a6 17       	cp	r26, r22
    299a:	b7 07       	cpc	r27, r23
    299c:	10 f0       	brcs	.+4      	; 0x29a2 <__udivmodhi4_ep>
    299e:	a6 1b       	sub	r26, r22
    29a0:	b7 0b       	sbc	r27, r23

000029a2 <__udivmodhi4_ep>:
    29a2:	88 1f       	adc	r24, r24
    29a4:	99 1f       	adc	r25, r25
    29a6:	5a 95       	dec	r21
    29a8:	a9 f7       	brne	.-22     	; 0x2994 <__udivmodhi4_loop>
    29aa:	80 95       	com	r24
    29ac:	90 95       	com	r25
    29ae:	bc 01       	movw	r22, r24
    29b0:	cd 01       	movw	r24, r26
    29b2:	08 95       	ret

000029b4 <__umulhisi3>:
    29b4:	a2 9f       	mul	r26, r18
    29b6:	b0 01       	movw	r22, r0
    29b8:	b3 9f       	mul	r27, r19
    29ba:	c0 01       	movw	r24, r0
    29bc:	a3 9f       	mul	r26, r19
    29be:	70 0d       	add	r23, r0
    29c0:	81 1d       	adc	r24, r1
    29c2:	11 24       	eor	r1, r1
    29c4:	91 1d       	adc	r25, r1
    29c6:	b2 9f       	mul	r27, r18
    29c8:	70 0d       	add	r23, r0
    29ca:	81 1d       	adc	r24, r1
    29cc:	11 24       	eor	r1, r1
    29ce:	91 1d       	adc	r25, r1
    29d0:	08 95       	ret

000029d2 <printf>:
    29d2:	cf 93       	push	r28
    29d4:	df 93       	push	r29
    29d6:	cd b7       	in	r28, 0x3d	; 61
    29d8:	de b7       	in	r29, 0x3e	; 62
    29da:	ae 01       	movw	r20, r28
    29dc:	4b 5f       	subi	r20, 0xFB	; 251
    29de:	5f 4f       	sbci	r21, 0xFF	; 255
    29e0:	fa 01       	movw	r30, r20
    29e2:	61 91       	ld	r22, Z+
    29e4:	71 91       	ld	r23, Z+
    29e6:	af 01       	movw	r20, r30
    29e8:	80 91 f2 01 	lds	r24, 0x01F2	; 0x8001f2 <__iob+0x2>
    29ec:	90 91 f3 01 	lds	r25, 0x01F3	; 0x8001f3 <__iob+0x3>
    29f0:	36 d0       	rcall	.+108    	; 0x2a5e <vfprintf>
    29f2:	df 91       	pop	r29
    29f4:	cf 91       	pop	r28
    29f6:	08 95       	ret

000029f8 <putchar>:
    29f8:	60 91 f2 01 	lds	r22, 0x01F2	; 0x8001f2 <__iob+0x2>
    29fc:	70 91 f3 01 	lds	r23, 0x01F3	; 0x8001f3 <__iob+0x3>
    2a00:	41 c2       	rjmp	.+1154   	; 0x2e84 <fputc>

00002a02 <sprintf>:
    2a02:	0f 93       	push	r16
    2a04:	1f 93       	push	r17
    2a06:	cf 93       	push	r28
    2a08:	df 93       	push	r29
    2a0a:	cd b7       	in	r28, 0x3d	; 61
    2a0c:	de b7       	in	r29, 0x3e	; 62
    2a0e:	2e 97       	sbiw	r28, 0x0e	; 14
    2a10:	0f b6       	in	r0, 0x3f	; 63
    2a12:	f8 94       	cli
    2a14:	de bf       	out	0x3e, r29	; 62
    2a16:	0f be       	out	0x3f, r0	; 63
    2a18:	cd bf       	out	0x3d, r28	; 61
    2a1a:	0d 89       	ldd	r16, Y+21	; 0x15
    2a1c:	1e 89       	ldd	r17, Y+22	; 0x16
    2a1e:	86 e0       	ldi	r24, 0x06	; 6
    2a20:	8c 83       	std	Y+4, r24	; 0x04
    2a22:	1a 83       	std	Y+2, r17	; 0x02
    2a24:	09 83       	std	Y+1, r16	; 0x01
    2a26:	8f ef       	ldi	r24, 0xFF	; 255
    2a28:	9f e7       	ldi	r25, 0x7F	; 127
    2a2a:	9e 83       	std	Y+6, r25	; 0x06
    2a2c:	8d 83       	std	Y+5, r24	; 0x05
    2a2e:	ae 01       	movw	r20, r28
    2a30:	47 5e       	subi	r20, 0xE7	; 231
    2a32:	5f 4f       	sbci	r21, 0xFF	; 255
    2a34:	6f 89       	ldd	r22, Y+23	; 0x17
    2a36:	78 8d       	ldd	r23, Y+24	; 0x18
    2a38:	ce 01       	movw	r24, r28
    2a3a:	01 96       	adiw	r24, 0x01	; 1
    2a3c:	10 d0       	rcall	.+32     	; 0x2a5e <vfprintf>
    2a3e:	ef 81       	ldd	r30, Y+7	; 0x07
    2a40:	f8 85       	ldd	r31, Y+8	; 0x08
    2a42:	e0 0f       	add	r30, r16
    2a44:	f1 1f       	adc	r31, r17
    2a46:	10 82       	st	Z, r1
    2a48:	2e 96       	adiw	r28, 0x0e	; 14
    2a4a:	0f b6       	in	r0, 0x3f	; 63
    2a4c:	f8 94       	cli
    2a4e:	de bf       	out	0x3e, r29	; 62
    2a50:	0f be       	out	0x3f, r0	; 63
    2a52:	cd bf       	out	0x3d, r28	; 61
    2a54:	df 91       	pop	r29
    2a56:	cf 91       	pop	r28
    2a58:	1f 91       	pop	r17
    2a5a:	0f 91       	pop	r16
    2a5c:	08 95       	ret

00002a5e <vfprintf>:
    2a5e:	2f 92       	push	r2
    2a60:	3f 92       	push	r3
    2a62:	4f 92       	push	r4
    2a64:	5f 92       	push	r5
    2a66:	6f 92       	push	r6
    2a68:	7f 92       	push	r7
    2a6a:	8f 92       	push	r8
    2a6c:	9f 92       	push	r9
    2a6e:	af 92       	push	r10
    2a70:	bf 92       	push	r11
    2a72:	cf 92       	push	r12
    2a74:	df 92       	push	r13
    2a76:	ef 92       	push	r14
    2a78:	ff 92       	push	r15
    2a7a:	0f 93       	push	r16
    2a7c:	1f 93       	push	r17
    2a7e:	cf 93       	push	r28
    2a80:	df 93       	push	r29
    2a82:	cd b7       	in	r28, 0x3d	; 61
    2a84:	de b7       	in	r29, 0x3e	; 62
    2a86:	2b 97       	sbiw	r28, 0x0b	; 11
    2a88:	0f b6       	in	r0, 0x3f	; 63
    2a8a:	f8 94       	cli
    2a8c:	de bf       	out	0x3e, r29	; 62
    2a8e:	0f be       	out	0x3f, r0	; 63
    2a90:	cd bf       	out	0x3d, r28	; 61
    2a92:	6c 01       	movw	r12, r24
    2a94:	7b 01       	movw	r14, r22
    2a96:	8a 01       	movw	r16, r20
    2a98:	fc 01       	movw	r30, r24
    2a9a:	17 82       	std	Z+7, r1	; 0x07
    2a9c:	16 82       	std	Z+6, r1	; 0x06
    2a9e:	83 81       	ldd	r24, Z+3	; 0x03
    2aa0:	81 ff       	sbrs	r24, 1
    2aa2:	bf c1       	rjmp	.+894    	; 0x2e22 <vfprintf+0x3c4>
    2aa4:	ce 01       	movw	r24, r28
    2aa6:	01 96       	adiw	r24, 0x01	; 1
    2aa8:	3c 01       	movw	r6, r24
    2aaa:	f6 01       	movw	r30, r12
    2aac:	93 81       	ldd	r25, Z+3	; 0x03
    2aae:	f7 01       	movw	r30, r14
    2ab0:	93 fd       	sbrc	r25, 3
    2ab2:	85 91       	lpm	r24, Z+
    2ab4:	93 ff       	sbrs	r25, 3
    2ab6:	81 91       	ld	r24, Z+
    2ab8:	7f 01       	movw	r14, r30
    2aba:	88 23       	and	r24, r24
    2abc:	09 f4       	brne	.+2      	; 0x2ac0 <vfprintf+0x62>
    2abe:	ad c1       	rjmp	.+858    	; 0x2e1a <vfprintf+0x3bc>
    2ac0:	85 32       	cpi	r24, 0x25	; 37
    2ac2:	39 f4       	brne	.+14     	; 0x2ad2 <vfprintf+0x74>
    2ac4:	93 fd       	sbrc	r25, 3
    2ac6:	85 91       	lpm	r24, Z+
    2ac8:	93 ff       	sbrs	r25, 3
    2aca:	81 91       	ld	r24, Z+
    2acc:	7f 01       	movw	r14, r30
    2ace:	85 32       	cpi	r24, 0x25	; 37
    2ad0:	21 f4       	brne	.+8      	; 0x2ada <vfprintf+0x7c>
    2ad2:	b6 01       	movw	r22, r12
    2ad4:	90 e0       	ldi	r25, 0x00	; 0
    2ad6:	d6 d1       	rcall	.+940    	; 0x2e84 <fputc>
    2ad8:	e8 cf       	rjmp	.-48     	; 0x2aaa <vfprintf+0x4c>
    2ada:	91 2c       	mov	r9, r1
    2adc:	21 2c       	mov	r2, r1
    2ade:	31 2c       	mov	r3, r1
    2ae0:	ff e1       	ldi	r31, 0x1F	; 31
    2ae2:	f3 15       	cp	r31, r3
    2ae4:	d8 f0       	brcs	.+54     	; 0x2b1c <vfprintf+0xbe>
    2ae6:	8b 32       	cpi	r24, 0x2B	; 43
    2ae8:	79 f0       	breq	.+30     	; 0x2b08 <vfprintf+0xaa>
    2aea:	38 f4       	brcc	.+14     	; 0x2afa <vfprintf+0x9c>
    2aec:	80 32       	cpi	r24, 0x20	; 32
    2aee:	79 f0       	breq	.+30     	; 0x2b0e <vfprintf+0xb0>
    2af0:	83 32       	cpi	r24, 0x23	; 35
    2af2:	a1 f4       	brne	.+40     	; 0x2b1c <vfprintf+0xbe>
    2af4:	23 2d       	mov	r18, r3
    2af6:	20 61       	ori	r18, 0x10	; 16
    2af8:	1d c0       	rjmp	.+58     	; 0x2b34 <vfprintf+0xd6>
    2afa:	8d 32       	cpi	r24, 0x2D	; 45
    2afc:	61 f0       	breq	.+24     	; 0x2b16 <vfprintf+0xb8>
    2afe:	80 33       	cpi	r24, 0x30	; 48
    2b00:	69 f4       	brne	.+26     	; 0x2b1c <vfprintf+0xbe>
    2b02:	23 2d       	mov	r18, r3
    2b04:	21 60       	ori	r18, 0x01	; 1
    2b06:	16 c0       	rjmp	.+44     	; 0x2b34 <vfprintf+0xd6>
    2b08:	83 2d       	mov	r24, r3
    2b0a:	82 60       	ori	r24, 0x02	; 2
    2b0c:	38 2e       	mov	r3, r24
    2b0e:	e3 2d       	mov	r30, r3
    2b10:	e4 60       	ori	r30, 0x04	; 4
    2b12:	3e 2e       	mov	r3, r30
    2b14:	2a c0       	rjmp	.+84     	; 0x2b6a <vfprintf+0x10c>
    2b16:	f3 2d       	mov	r31, r3
    2b18:	f8 60       	ori	r31, 0x08	; 8
    2b1a:	1d c0       	rjmp	.+58     	; 0x2b56 <vfprintf+0xf8>
    2b1c:	37 fc       	sbrc	r3, 7
    2b1e:	2d c0       	rjmp	.+90     	; 0x2b7a <vfprintf+0x11c>
    2b20:	20 ed       	ldi	r18, 0xD0	; 208
    2b22:	28 0f       	add	r18, r24
    2b24:	2a 30       	cpi	r18, 0x0A	; 10
    2b26:	40 f0       	brcs	.+16     	; 0x2b38 <vfprintf+0xda>
    2b28:	8e 32       	cpi	r24, 0x2E	; 46
    2b2a:	b9 f4       	brne	.+46     	; 0x2b5a <vfprintf+0xfc>
    2b2c:	36 fc       	sbrc	r3, 6
    2b2e:	75 c1       	rjmp	.+746    	; 0x2e1a <vfprintf+0x3bc>
    2b30:	23 2d       	mov	r18, r3
    2b32:	20 64       	ori	r18, 0x40	; 64
    2b34:	32 2e       	mov	r3, r18
    2b36:	19 c0       	rjmp	.+50     	; 0x2b6a <vfprintf+0x10c>
    2b38:	36 fe       	sbrs	r3, 6
    2b3a:	06 c0       	rjmp	.+12     	; 0x2b48 <vfprintf+0xea>
    2b3c:	8a e0       	ldi	r24, 0x0A	; 10
    2b3e:	98 9e       	mul	r9, r24
    2b40:	20 0d       	add	r18, r0
    2b42:	11 24       	eor	r1, r1
    2b44:	92 2e       	mov	r9, r18
    2b46:	11 c0       	rjmp	.+34     	; 0x2b6a <vfprintf+0x10c>
    2b48:	ea e0       	ldi	r30, 0x0A	; 10
    2b4a:	2e 9e       	mul	r2, r30
    2b4c:	20 0d       	add	r18, r0
    2b4e:	11 24       	eor	r1, r1
    2b50:	22 2e       	mov	r2, r18
    2b52:	f3 2d       	mov	r31, r3
    2b54:	f0 62       	ori	r31, 0x20	; 32
    2b56:	3f 2e       	mov	r3, r31
    2b58:	08 c0       	rjmp	.+16     	; 0x2b6a <vfprintf+0x10c>
    2b5a:	8c 36       	cpi	r24, 0x6C	; 108
    2b5c:	21 f4       	brne	.+8      	; 0x2b66 <vfprintf+0x108>
    2b5e:	83 2d       	mov	r24, r3
    2b60:	80 68       	ori	r24, 0x80	; 128
    2b62:	38 2e       	mov	r3, r24
    2b64:	02 c0       	rjmp	.+4      	; 0x2b6a <vfprintf+0x10c>
    2b66:	88 36       	cpi	r24, 0x68	; 104
    2b68:	41 f4       	brne	.+16     	; 0x2b7a <vfprintf+0x11c>
    2b6a:	f7 01       	movw	r30, r14
    2b6c:	93 fd       	sbrc	r25, 3
    2b6e:	85 91       	lpm	r24, Z+
    2b70:	93 ff       	sbrs	r25, 3
    2b72:	81 91       	ld	r24, Z+
    2b74:	7f 01       	movw	r14, r30
    2b76:	81 11       	cpse	r24, r1
    2b78:	b3 cf       	rjmp	.-154    	; 0x2ae0 <vfprintf+0x82>
    2b7a:	98 2f       	mov	r25, r24
    2b7c:	9f 7d       	andi	r25, 0xDF	; 223
    2b7e:	95 54       	subi	r25, 0x45	; 69
    2b80:	93 30       	cpi	r25, 0x03	; 3
    2b82:	28 f4       	brcc	.+10     	; 0x2b8e <vfprintf+0x130>
    2b84:	0c 5f       	subi	r16, 0xFC	; 252
    2b86:	1f 4f       	sbci	r17, 0xFF	; 255
    2b88:	9f e3       	ldi	r25, 0x3F	; 63
    2b8a:	99 83       	std	Y+1, r25	; 0x01
    2b8c:	0d c0       	rjmp	.+26     	; 0x2ba8 <vfprintf+0x14a>
    2b8e:	83 36       	cpi	r24, 0x63	; 99
    2b90:	31 f0       	breq	.+12     	; 0x2b9e <vfprintf+0x140>
    2b92:	83 37       	cpi	r24, 0x73	; 115
    2b94:	71 f0       	breq	.+28     	; 0x2bb2 <vfprintf+0x154>
    2b96:	83 35       	cpi	r24, 0x53	; 83
    2b98:	09 f0       	breq	.+2      	; 0x2b9c <vfprintf+0x13e>
    2b9a:	55 c0       	rjmp	.+170    	; 0x2c46 <vfprintf+0x1e8>
    2b9c:	20 c0       	rjmp	.+64     	; 0x2bde <vfprintf+0x180>
    2b9e:	f8 01       	movw	r30, r16
    2ba0:	80 81       	ld	r24, Z
    2ba2:	89 83       	std	Y+1, r24	; 0x01
    2ba4:	0e 5f       	subi	r16, 0xFE	; 254
    2ba6:	1f 4f       	sbci	r17, 0xFF	; 255
    2ba8:	88 24       	eor	r8, r8
    2baa:	83 94       	inc	r8
    2bac:	91 2c       	mov	r9, r1
    2bae:	53 01       	movw	r10, r6
    2bb0:	12 c0       	rjmp	.+36     	; 0x2bd6 <vfprintf+0x178>
    2bb2:	28 01       	movw	r4, r16
    2bb4:	f2 e0       	ldi	r31, 0x02	; 2
    2bb6:	4f 0e       	add	r4, r31
    2bb8:	51 1c       	adc	r5, r1
    2bba:	f8 01       	movw	r30, r16
    2bbc:	a0 80       	ld	r10, Z
    2bbe:	b1 80       	ldd	r11, Z+1	; 0x01
    2bc0:	36 fe       	sbrs	r3, 6
    2bc2:	03 c0       	rjmp	.+6      	; 0x2bca <vfprintf+0x16c>
    2bc4:	69 2d       	mov	r22, r9
    2bc6:	70 e0       	ldi	r23, 0x00	; 0
    2bc8:	02 c0       	rjmp	.+4      	; 0x2bce <vfprintf+0x170>
    2bca:	6f ef       	ldi	r22, 0xFF	; 255
    2bcc:	7f ef       	ldi	r23, 0xFF	; 255
    2bce:	c5 01       	movw	r24, r10
    2bd0:	4e d1       	rcall	.+668    	; 0x2e6e <strnlen>
    2bd2:	4c 01       	movw	r8, r24
    2bd4:	82 01       	movw	r16, r4
    2bd6:	f3 2d       	mov	r31, r3
    2bd8:	ff 77       	andi	r31, 0x7F	; 127
    2bda:	3f 2e       	mov	r3, r31
    2bdc:	15 c0       	rjmp	.+42     	; 0x2c08 <vfprintf+0x1aa>
    2bde:	28 01       	movw	r4, r16
    2be0:	22 e0       	ldi	r18, 0x02	; 2
    2be2:	42 0e       	add	r4, r18
    2be4:	51 1c       	adc	r5, r1
    2be6:	f8 01       	movw	r30, r16
    2be8:	a0 80       	ld	r10, Z
    2bea:	b1 80       	ldd	r11, Z+1	; 0x01
    2bec:	36 fe       	sbrs	r3, 6
    2bee:	03 c0       	rjmp	.+6      	; 0x2bf6 <vfprintf+0x198>
    2bf0:	69 2d       	mov	r22, r9
    2bf2:	70 e0       	ldi	r23, 0x00	; 0
    2bf4:	02 c0       	rjmp	.+4      	; 0x2bfa <vfprintf+0x19c>
    2bf6:	6f ef       	ldi	r22, 0xFF	; 255
    2bf8:	7f ef       	ldi	r23, 0xFF	; 255
    2bfa:	c5 01       	movw	r24, r10
    2bfc:	2d d1       	rcall	.+602    	; 0x2e58 <strnlen_P>
    2bfe:	4c 01       	movw	r8, r24
    2c00:	f3 2d       	mov	r31, r3
    2c02:	f0 68       	ori	r31, 0x80	; 128
    2c04:	3f 2e       	mov	r3, r31
    2c06:	82 01       	movw	r16, r4
    2c08:	33 fc       	sbrc	r3, 3
    2c0a:	19 c0       	rjmp	.+50     	; 0x2c3e <vfprintf+0x1e0>
    2c0c:	82 2d       	mov	r24, r2
    2c0e:	90 e0       	ldi	r25, 0x00	; 0
    2c10:	88 16       	cp	r8, r24
    2c12:	99 06       	cpc	r9, r25
    2c14:	a0 f4       	brcc	.+40     	; 0x2c3e <vfprintf+0x1e0>
    2c16:	b6 01       	movw	r22, r12
    2c18:	80 e2       	ldi	r24, 0x20	; 32
    2c1a:	90 e0       	ldi	r25, 0x00	; 0
    2c1c:	33 d1       	rcall	.+614    	; 0x2e84 <fputc>
    2c1e:	2a 94       	dec	r2
    2c20:	f5 cf       	rjmp	.-22     	; 0x2c0c <vfprintf+0x1ae>
    2c22:	f5 01       	movw	r30, r10
    2c24:	37 fc       	sbrc	r3, 7
    2c26:	85 91       	lpm	r24, Z+
    2c28:	37 fe       	sbrs	r3, 7
    2c2a:	81 91       	ld	r24, Z+
    2c2c:	5f 01       	movw	r10, r30
    2c2e:	b6 01       	movw	r22, r12
    2c30:	90 e0       	ldi	r25, 0x00	; 0
    2c32:	28 d1       	rcall	.+592    	; 0x2e84 <fputc>
    2c34:	21 10       	cpse	r2, r1
    2c36:	2a 94       	dec	r2
    2c38:	21 e0       	ldi	r18, 0x01	; 1
    2c3a:	82 1a       	sub	r8, r18
    2c3c:	91 08       	sbc	r9, r1
    2c3e:	81 14       	cp	r8, r1
    2c40:	91 04       	cpc	r9, r1
    2c42:	79 f7       	brne	.-34     	; 0x2c22 <vfprintf+0x1c4>
    2c44:	e1 c0       	rjmp	.+450    	; 0x2e08 <vfprintf+0x3aa>
    2c46:	84 36       	cpi	r24, 0x64	; 100
    2c48:	11 f0       	breq	.+4      	; 0x2c4e <vfprintf+0x1f0>
    2c4a:	89 36       	cpi	r24, 0x69	; 105
    2c4c:	39 f5       	brne	.+78     	; 0x2c9c <vfprintf+0x23e>
    2c4e:	f8 01       	movw	r30, r16
    2c50:	37 fe       	sbrs	r3, 7
    2c52:	07 c0       	rjmp	.+14     	; 0x2c62 <vfprintf+0x204>
    2c54:	60 81       	ld	r22, Z
    2c56:	71 81       	ldd	r23, Z+1	; 0x01
    2c58:	82 81       	ldd	r24, Z+2	; 0x02
    2c5a:	93 81       	ldd	r25, Z+3	; 0x03
    2c5c:	0c 5f       	subi	r16, 0xFC	; 252
    2c5e:	1f 4f       	sbci	r17, 0xFF	; 255
    2c60:	08 c0       	rjmp	.+16     	; 0x2c72 <vfprintf+0x214>
    2c62:	60 81       	ld	r22, Z
    2c64:	71 81       	ldd	r23, Z+1	; 0x01
    2c66:	07 2e       	mov	r0, r23
    2c68:	00 0c       	add	r0, r0
    2c6a:	88 0b       	sbc	r24, r24
    2c6c:	99 0b       	sbc	r25, r25
    2c6e:	0e 5f       	subi	r16, 0xFE	; 254
    2c70:	1f 4f       	sbci	r17, 0xFF	; 255
    2c72:	f3 2d       	mov	r31, r3
    2c74:	ff 76       	andi	r31, 0x6F	; 111
    2c76:	3f 2e       	mov	r3, r31
    2c78:	97 ff       	sbrs	r25, 7
    2c7a:	09 c0       	rjmp	.+18     	; 0x2c8e <vfprintf+0x230>
    2c7c:	90 95       	com	r25
    2c7e:	80 95       	com	r24
    2c80:	70 95       	com	r23
    2c82:	61 95       	neg	r22
    2c84:	7f 4f       	sbci	r23, 0xFF	; 255
    2c86:	8f 4f       	sbci	r24, 0xFF	; 255
    2c88:	9f 4f       	sbci	r25, 0xFF	; 255
    2c8a:	f0 68       	ori	r31, 0x80	; 128
    2c8c:	3f 2e       	mov	r3, r31
    2c8e:	2a e0       	ldi	r18, 0x0A	; 10
    2c90:	30 e0       	ldi	r19, 0x00	; 0
    2c92:	a3 01       	movw	r20, r6
    2c94:	33 d1       	rcall	.+614    	; 0x2efc <__ultoa_invert>
    2c96:	88 2e       	mov	r8, r24
    2c98:	86 18       	sub	r8, r6
    2c9a:	44 c0       	rjmp	.+136    	; 0x2d24 <vfprintf+0x2c6>
    2c9c:	85 37       	cpi	r24, 0x75	; 117
    2c9e:	31 f4       	brne	.+12     	; 0x2cac <vfprintf+0x24e>
    2ca0:	23 2d       	mov	r18, r3
    2ca2:	2f 7e       	andi	r18, 0xEF	; 239
    2ca4:	b2 2e       	mov	r11, r18
    2ca6:	2a e0       	ldi	r18, 0x0A	; 10
    2ca8:	30 e0       	ldi	r19, 0x00	; 0
    2caa:	25 c0       	rjmp	.+74     	; 0x2cf6 <vfprintf+0x298>
    2cac:	93 2d       	mov	r25, r3
    2cae:	99 7f       	andi	r25, 0xF9	; 249
    2cb0:	b9 2e       	mov	r11, r25
    2cb2:	8f 36       	cpi	r24, 0x6F	; 111
    2cb4:	c1 f0       	breq	.+48     	; 0x2ce6 <vfprintf+0x288>
    2cb6:	18 f4       	brcc	.+6      	; 0x2cbe <vfprintf+0x260>
    2cb8:	88 35       	cpi	r24, 0x58	; 88
    2cba:	79 f0       	breq	.+30     	; 0x2cda <vfprintf+0x27c>
    2cbc:	ae c0       	rjmp	.+348    	; 0x2e1a <vfprintf+0x3bc>
    2cbe:	80 37       	cpi	r24, 0x70	; 112
    2cc0:	19 f0       	breq	.+6      	; 0x2cc8 <vfprintf+0x26a>
    2cc2:	88 37       	cpi	r24, 0x78	; 120
    2cc4:	21 f0       	breq	.+8      	; 0x2cce <vfprintf+0x270>
    2cc6:	a9 c0       	rjmp	.+338    	; 0x2e1a <vfprintf+0x3bc>
    2cc8:	e9 2f       	mov	r30, r25
    2cca:	e0 61       	ori	r30, 0x10	; 16
    2ccc:	be 2e       	mov	r11, r30
    2cce:	b4 fe       	sbrs	r11, 4
    2cd0:	0d c0       	rjmp	.+26     	; 0x2cec <vfprintf+0x28e>
    2cd2:	fb 2d       	mov	r31, r11
    2cd4:	f4 60       	ori	r31, 0x04	; 4
    2cd6:	bf 2e       	mov	r11, r31
    2cd8:	09 c0       	rjmp	.+18     	; 0x2cec <vfprintf+0x28e>
    2cda:	34 fe       	sbrs	r3, 4
    2cdc:	0a c0       	rjmp	.+20     	; 0x2cf2 <vfprintf+0x294>
    2cde:	29 2f       	mov	r18, r25
    2ce0:	26 60       	ori	r18, 0x06	; 6
    2ce2:	b2 2e       	mov	r11, r18
    2ce4:	06 c0       	rjmp	.+12     	; 0x2cf2 <vfprintf+0x294>
    2ce6:	28 e0       	ldi	r18, 0x08	; 8
    2ce8:	30 e0       	ldi	r19, 0x00	; 0
    2cea:	05 c0       	rjmp	.+10     	; 0x2cf6 <vfprintf+0x298>
    2cec:	20 e1       	ldi	r18, 0x10	; 16
    2cee:	30 e0       	ldi	r19, 0x00	; 0
    2cf0:	02 c0       	rjmp	.+4      	; 0x2cf6 <vfprintf+0x298>
    2cf2:	20 e1       	ldi	r18, 0x10	; 16
    2cf4:	32 e0       	ldi	r19, 0x02	; 2
    2cf6:	f8 01       	movw	r30, r16
    2cf8:	b7 fe       	sbrs	r11, 7
    2cfa:	07 c0       	rjmp	.+14     	; 0x2d0a <vfprintf+0x2ac>
    2cfc:	60 81       	ld	r22, Z
    2cfe:	71 81       	ldd	r23, Z+1	; 0x01
    2d00:	82 81       	ldd	r24, Z+2	; 0x02
    2d02:	93 81       	ldd	r25, Z+3	; 0x03
    2d04:	0c 5f       	subi	r16, 0xFC	; 252
    2d06:	1f 4f       	sbci	r17, 0xFF	; 255
    2d08:	06 c0       	rjmp	.+12     	; 0x2d16 <vfprintf+0x2b8>
    2d0a:	60 81       	ld	r22, Z
    2d0c:	71 81       	ldd	r23, Z+1	; 0x01
    2d0e:	80 e0       	ldi	r24, 0x00	; 0
    2d10:	90 e0       	ldi	r25, 0x00	; 0
    2d12:	0e 5f       	subi	r16, 0xFE	; 254
    2d14:	1f 4f       	sbci	r17, 0xFF	; 255
    2d16:	a3 01       	movw	r20, r6
    2d18:	f1 d0       	rcall	.+482    	; 0x2efc <__ultoa_invert>
    2d1a:	88 2e       	mov	r8, r24
    2d1c:	86 18       	sub	r8, r6
    2d1e:	fb 2d       	mov	r31, r11
    2d20:	ff 77       	andi	r31, 0x7F	; 127
    2d22:	3f 2e       	mov	r3, r31
    2d24:	36 fe       	sbrs	r3, 6
    2d26:	0d c0       	rjmp	.+26     	; 0x2d42 <vfprintf+0x2e4>
    2d28:	23 2d       	mov	r18, r3
    2d2a:	2e 7f       	andi	r18, 0xFE	; 254
    2d2c:	a2 2e       	mov	r10, r18
    2d2e:	89 14       	cp	r8, r9
    2d30:	58 f4       	brcc	.+22     	; 0x2d48 <vfprintf+0x2ea>
    2d32:	34 fe       	sbrs	r3, 4
    2d34:	0b c0       	rjmp	.+22     	; 0x2d4c <vfprintf+0x2ee>
    2d36:	32 fc       	sbrc	r3, 2
    2d38:	09 c0       	rjmp	.+18     	; 0x2d4c <vfprintf+0x2ee>
    2d3a:	83 2d       	mov	r24, r3
    2d3c:	8e 7e       	andi	r24, 0xEE	; 238
    2d3e:	a8 2e       	mov	r10, r24
    2d40:	05 c0       	rjmp	.+10     	; 0x2d4c <vfprintf+0x2ee>
    2d42:	b8 2c       	mov	r11, r8
    2d44:	a3 2c       	mov	r10, r3
    2d46:	03 c0       	rjmp	.+6      	; 0x2d4e <vfprintf+0x2f0>
    2d48:	b8 2c       	mov	r11, r8
    2d4a:	01 c0       	rjmp	.+2      	; 0x2d4e <vfprintf+0x2f0>
    2d4c:	b9 2c       	mov	r11, r9
    2d4e:	a4 fe       	sbrs	r10, 4
    2d50:	0f c0       	rjmp	.+30     	; 0x2d70 <vfprintf+0x312>
    2d52:	fe 01       	movw	r30, r28
    2d54:	e8 0d       	add	r30, r8
    2d56:	f1 1d       	adc	r31, r1
    2d58:	80 81       	ld	r24, Z
    2d5a:	80 33       	cpi	r24, 0x30	; 48
    2d5c:	21 f4       	brne	.+8      	; 0x2d66 <vfprintf+0x308>
    2d5e:	9a 2d       	mov	r25, r10
    2d60:	99 7e       	andi	r25, 0xE9	; 233
    2d62:	a9 2e       	mov	r10, r25
    2d64:	09 c0       	rjmp	.+18     	; 0x2d78 <vfprintf+0x31a>
    2d66:	a2 fe       	sbrs	r10, 2
    2d68:	06 c0       	rjmp	.+12     	; 0x2d76 <vfprintf+0x318>
    2d6a:	b3 94       	inc	r11
    2d6c:	b3 94       	inc	r11
    2d6e:	04 c0       	rjmp	.+8      	; 0x2d78 <vfprintf+0x31a>
    2d70:	8a 2d       	mov	r24, r10
    2d72:	86 78       	andi	r24, 0x86	; 134
    2d74:	09 f0       	breq	.+2      	; 0x2d78 <vfprintf+0x31a>
    2d76:	b3 94       	inc	r11
    2d78:	a3 fc       	sbrc	r10, 3
    2d7a:	10 c0       	rjmp	.+32     	; 0x2d9c <vfprintf+0x33e>
    2d7c:	a0 fe       	sbrs	r10, 0
    2d7e:	06 c0       	rjmp	.+12     	; 0x2d8c <vfprintf+0x32e>
    2d80:	b2 14       	cp	r11, r2
    2d82:	80 f4       	brcc	.+32     	; 0x2da4 <vfprintf+0x346>
    2d84:	28 0c       	add	r2, r8
    2d86:	92 2c       	mov	r9, r2
    2d88:	9b 18       	sub	r9, r11
    2d8a:	0d c0       	rjmp	.+26     	; 0x2da6 <vfprintf+0x348>
    2d8c:	b2 14       	cp	r11, r2
    2d8e:	58 f4       	brcc	.+22     	; 0x2da6 <vfprintf+0x348>
    2d90:	b6 01       	movw	r22, r12
    2d92:	80 e2       	ldi	r24, 0x20	; 32
    2d94:	90 e0       	ldi	r25, 0x00	; 0
    2d96:	76 d0       	rcall	.+236    	; 0x2e84 <fputc>
    2d98:	b3 94       	inc	r11
    2d9a:	f8 cf       	rjmp	.-16     	; 0x2d8c <vfprintf+0x32e>
    2d9c:	b2 14       	cp	r11, r2
    2d9e:	18 f4       	brcc	.+6      	; 0x2da6 <vfprintf+0x348>
    2da0:	2b 18       	sub	r2, r11
    2da2:	02 c0       	rjmp	.+4      	; 0x2da8 <vfprintf+0x34a>
    2da4:	98 2c       	mov	r9, r8
    2da6:	21 2c       	mov	r2, r1
    2da8:	a4 fe       	sbrs	r10, 4
    2daa:	0f c0       	rjmp	.+30     	; 0x2dca <vfprintf+0x36c>
    2dac:	b6 01       	movw	r22, r12
    2dae:	80 e3       	ldi	r24, 0x30	; 48
    2db0:	90 e0       	ldi	r25, 0x00	; 0
    2db2:	68 d0       	rcall	.+208    	; 0x2e84 <fputc>
    2db4:	a2 fe       	sbrs	r10, 2
    2db6:	16 c0       	rjmp	.+44     	; 0x2de4 <vfprintf+0x386>
    2db8:	a1 fc       	sbrc	r10, 1
    2dba:	03 c0       	rjmp	.+6      	; 0x2dc2 <vfprintf+0x364>
    2dbc:	88 e7       	ldi	r24, 0x78	; 120
    2dbe:	90 e0       	ldi	r25, 0x00	; 0
    2dc0:	02 c0       	rjmp	.+4      	; 0x2dc6 <vfprintf+0x368>
    2dc2:	88 e5       	ldi	r24, 0x58	; 88
    2dc4:	90 e0       	ldi	r25, 0x00	; 0
    2dc6:	b6 01       	movw	r22, r12
    2dc8:	0c c0       	rjmp	.+24     	; 0x2de2 <vfprintf+0x384>
    2dca:	8a 2d       	mov	r24, r10
    2dcc:	86 78       	andi	r24, 0x86	; 134
    2dce:	51 f0       	breq	.+20     	; 0x2de4 <vfprintf+0x386>
    2dd0:	a1 fe       	sbrs	r10, 1
    2dd2:	02 c0       	rjmp	.+4      	; 0x2dd8 <vfprintf+0x37a>
    2dd4:	8b e2       	ldi	r24, 0x2B	; 43
    2dd6:	01 c0       	rjmp	.+2      	; 0x2dda <vfprintf+0x37c>
    2dd8:	80 e2       	ldi	r24, 0x20	; 32
    2dda:	a7 fc       	sbrc	r10, 7
    2ddc:	8d e2       	ldi	r24, 0x2D	; 45
    2dde:	b6 01       	movw	r22, r12
    2de0:	90 e0       	ldi	r25, 0x00	; 0
    2de2:	50 d0       	rcall	.+160    	; 0x2e84 <fputc>
    2de4:	89 14       	cp	r8, r9
    2de6:	30 f4       	brcc	.+12     	; 0x2df4 <vfprintf+0x396>
    2de8:	b6 01       	movw	r22, r12
    2dea:	80 e3       	ldi	r24, 0x30	; 48
    2dec:	90 e0       	ldi	r25, 0x00	; 0
    2dee:	4a d0       	rcall	.+148    	; 0x2e84 <fputc>
    2df0:	9a 94       	dec	r9
    2df2:	f8 cf       	rjmp	.-16     	; 0x2de4 <vfprintf+0x386>
    2df4:	8a 94       	dec	r8
    2df6:	f3 01       	movw	r30, r6
    2df8:	e8 0d       	add	r30, r8
    2dfa:	f1 1d       	adc	r31, r1
    2dfc:	80 81       	ld	r24, Z
    2dfe:	b6 01       	movw	r22, r12
    2e00:	90 e0       	ldi	r25, 0x00	; 0
    2e02:	40 d0       	rcall	.+128    	; 0x2e84 <fputc>
    2e04:	81 10       	cpse	r8, r1
    2e06:	f6 cf       	rjmp	.-20     	; 0x2df4 <vfprintf+0x396>
    2e08:	22 20       	and	r2, r2
    2e0a:	09 f4       	brne	.+2      	; 0x2e0e <vfprintf+0x3b0>
    2e0c:	4e ce       	rjmp	.-868    	; 0x2aaa <vfprintf+0x4c>
    2e0e:	b6 01       	movw	r22, r12
    2e10:	80 e2       	ldi	r24, 0x20	; 32
    2e12:	90 e0       	ldi	r25, 0x00	; 0
    2e14:	37 d0       	rcall	.+110    	; 0x2e84 <fputc>
    2e16:	2a 94       	dec	r2
    2e18:	f7 cf       	rjmp	.-18     	; 0x2e08 <vfprintf+0x3aa>
    2e1a:	f6 01       	movw	r30, r12
    2e1c:	86 81       	ldd	r24, Z+6	; 0x06
    2e1e:	97 81       	ldd	r25, Z+7	; 0x07
    2e20:	02 c0       	rjmp	.+4      	; 0x2e26 <vfprintf+0x3c8>
    2e22:	8f ef       	ldi	r24, 0xFF	; 255
    2e24:	9f ef       	ldi	r25, 0xFF	; 255
    2e26:	2b 96       	adiw	r28, 0x0b	; 11
    2e28:	0f b6       	in	r0, 0x3f	; 63
    2e2a:	f8 94       	cli
    2e2c:	de bf       	out	0x3e, r29	; 62
    2e2e:	0f be       	out	0x3f, r0	; 63
    2e30:	cd bf       	out	0x3d, r28	; 61
    2e32:	df 91       	pop	r29
    2e34:	cf 91       	pop	r28
    2e36:	1f 91       	pop	r17
    2e38:	0f 91       	pop	r16
    2e3a:	ff 90       	pop	r15
    2e3c:	ef 90       	pop	r14
    2e3e:	df 90       	pop	r13
    2e40:	cf 90       	pop	r12
    2e42:	bf 90       	pop	r11
    2e44:	af 90       	pop	r10
    2e46:	9f 90       	pop	r9
    2e48:	8f 90       	pop	r8
    2e4a:	7f 90       	pop	r7
    2e4c:	6f 90       	pop	r6
    2e4e:	5f 90       	pop	r5
    2e50:	4f 90       	pop	r4
    2e52:	3f 90       	pop	r3
    2e54:	2f 90       	pop	r2
    2e56:	08 95       	ret

00002e58 <strnlen_P>:
    2e58:	fc 01       	movw	r30, r24
    2e5a:	05 90       	lpm	r0, Z+
    2e5c:	61 50       	subi	r22, 0x01	; 1
    2e5e:	70 40       	sbci	r23, 0x00	; 0
    2e60:	01 10       	cpse	r0, r1
    2e62:	d8 f7       	brcc	.-10     	; 0x2e5a <strnlen_P+0x2>
    2e64:	80 95       	com	r24
    2e66:	90 95       	com	r25
    2e68:	8e 0f       	add	r24, r30
    2e6a:	9f 1f       	adc	r25, r31
    2e6c:	08 95       	ret

00002e6e <strnlen>:
    2e6e:	fc 01       	movw	r30, r24
    2e70:	61 50       	subi	r22, 0x01	; 1
    2e72:	70 40       	sbci	r23, 0x00	; 0
    2e74:	01 90       	ld	r0, Z+
    2e76:	01 10       	cpse	r0, r1
    2e78:	d8 f7       	brcc	.-10     	; 0x2e70 <strnlen+0x2>
    2e7a:	80 95       	com	r24
    2e7c:	90 95       	com	r25
    2e7e:	8e 0f       	add	r24, r30
    2e80:	9f 1f       	adc	r25, r31
    2e82:	08 95       	ret

00002e84 <fputc>:
    2e84:	0f 93       	push	r16
    2e86:	1f 93       	push	r17
    2e88:	cf 93       	push	r28
    2e8a:	df 93       	push	r29
    2e8c:	fb 01       	movw	r30, r22
    2e8e:	23 81       	ldd	r18, Z+3	; 0x03
    2e90:	21 fd       	sbrc	r18, 1
    2e92:	03 c0       	rjmp	.+6      	; 0x2e9a <fputc+0x16>
    2e94:	8f ef       	ldi	r24, 0xFF	; 255
    2e96:	9f ef       	ldi	r25, 0xFF	; 255
    2e98:	2c c0       	rjmp	.+88     	; 0x2ef2 <fputc+0x6e>
    2e9a:	22 ff       	sbrs	r18, 2
    2e9c:	16 c0       	rjmp	.+44     	; 0x2eca <fputc+0x46>
    2e9e:	46 81       	ldd	r20, Z+6	; 0x06
    2ea0:	57 81       	ldd	r21, Z+7	; 0x07
    2ea2:	24 81       	ldd	r18, Z+4	; 0x04
    2ea4:	35 81       	ldd	r19, Z+5	; 0x05
    2ea6:	42 17       	cp	r20, r18
    2ea8:	53 07       	cpc	r21, r19
    2eaa:	44 f4       	brge	.+16     	; 0x2ebc <fputc+0x38>
    2eac:	a0 81       	ld	r26, Z
    2eae:	b1 81       	ldd	r27, Z+1	; 0x01
    2eb0:	9d 01       	movw	r18, r26
    2eb2:	2f 5f       	subi	r18, 0xFF	; 255
    2eb4:	3f 4f       	sbci	r19, 0xFF	; 255
    2eb6:	31 83       	std	Z+1, r19	; 0x01
    2eb8:	20 83       	st	Z, r18
    2eba:	8c 93       	st	X, r24
    2ebc:	26 81       	ldd	r18, Z+6	; 0x06
    2ebe:	37 81       	ldd	r19, Z+7	; 0x07
    2ec0:	2f 5f       	subi	r18, 0xFF	; 255
    2ec2:	3f 4f       	sbci	r19, 0xFF	; 255
    2ec4:	37 83       	std	Z+7, r19	; 0x07
    2ec6:	26 83       	std	Z+6, r18	; 0x06
    2ec8:	14 c0       	rjmp	.+40     	; 0x2ef2 <fputc+0x6e>
    2eca:	8b 01       	movw	r16, r22
    2ecc:	ec 01       	movw	r28, r24
    2ece:	fb 01       	movw	r30, r22
    2ed0:	00 84       	ldd	r0, Z+8	; 0x08
    2ed2:	f1 85       	ldd	r31, Z+9	; 0x09
    2ed4:	e0 2d       	mov	r30, r0
    2ed6:	09 95       	icall
    2ed8:	89 2b       	or	r24, r25
    2eda:	e1 f6       	brne	.-72     	; 0x2e94 <fputc+0x10>
    2edc:	d8 01       	movw	r26, r16
    2ede:	16 96       	adiw	r26, 0x06	; 6
    2ee0:	8d 91       	ld	r24, X+
    2ee2:	9c 91       	ld	r25, X
    2ee4:	17 97       	sbiw	r26, 0x07	; 7
    2ee6:	01 96       	adiw	r24, 0x01	; 1
    2ee8:	17 96       	adiw	r26, 0x07	; 7
    2eea:	9c 93       	st	X, r25
    2eec:	8e 93       	st	-X, r24
    2eee:	16 97       	sbiw	r26, 0x06	; 6
    2ef0:	ce 01       	movw	r24, r28
    2ef2:	df 91       	pop	r29
    2ef4:	cf 91       	pop	r28
    2ef6:	1f 91       	pop	r17
    2ef8:	0f 91       	pop	r16
    2efa:	08 95       	ret

00002efc <__ultoa_invert>:
    2efc:	fa 01       	movw	r30, r20
    2efe:	aa 27       	eor	r26, r26
    2f00:	28 30       	cpi	r18, 0x08	; 8
    2f02:	51 f1       	breq	.+84     	; 0x2f58 <__ultoa_invert+0x5c>
    2f04:	20 31       	cpi	r18, 0x10	; 16
    2f06:	81 f1       	breq	.+96     	; 0x2f68 <__ultoa_invert+0x6c>
    2f08:	e8 94       	clt
    2f0a:	6f 93       	push	r22
    2f0c:	6e 7f       	andi	r22, 0xFE	; 254
    2f0e:	6e 5f       	subi	r22, 0xFE	; 254
    2f10:	7f 4f       	sbci	r23, 0xFF	; 255
    2f12:	8f 4f       	sbci	r24, 0xFF	; 255
    2f14:	9f 4f       	sbci	r25, 0xFF	; 255
    2f16:	af 4f       	sbci	r26, 0xFF	; 255
    2f18:	b1 e0       	ldi	r27, 0x01	; 1
    2f1a:	3e d0       	rcall	.+124    	; 0x2f98 <__ultoa_invert+0x9c>
    2f1c:	b4 e0       	ldi	r27, 0x04	; 4
    2f1e:	3c d0       	rcall	.+120    	; 0x2f98 <__ultoa_invert+0x9c>
    2f20:	67 0f       	add	r22, r23
    2f22:	78 1f       	adc	r23, r24
    2f24:	89 1f       	adc	r24, r25
    2f26:	9a 1f       	adc	r25, r26
    2f28:	a1 1d       	adc	r26, r1
    2f2a:	68 0f       	add	r22, r24
    2f2c:	79 1f       	adc	r23, r25
    2f2e:	8a 1f       	adc	r24, r26
    2f30:	91 1d       	adc	r25, r1
    2f32:	a1 1d       	adc	r26, r1
    2f34:	6a 0f       	add	r22, r26
    2f36:	71 1d       	adc	r23, r1
    2f38:	81 1d       	adc	r24, r1
    2f3a:	91 1d       	adc	r25, r1
    2f3c:	a1 1d       	adc	r26, r1
    2f3e:	20 d0       	rcall	.+64     	; 0x2f80 <__ultoa_invert+0x84>
    2f40:	09 f4       	brne	.+2      	; 0x2f44 <__ultoa_invert+0x48>
    2f42:	68 94       	set
    2f44:	3f 91       	pop	r19
    2f46:	2a e0       	ldi	r18, 0x0A	; 10
    2f48:	26 9f       	mul	r18, r22
    2f4a:	11 24       	eor	r1, r1
    2f4c:	30 19       	sub	r19, r0
    2f4e:	30 5d       	subi	r19, 0xD0	; 208
    2f50:	31 93       	st	Z+, r19
    2f52:	de f6       	brtc	.-74     	; 0x2f0a <__ultoa_invert+0xe>
    2f54:	cf 01       	movw	r24, r30
    2f56:	08 95       	ret
    2f58:	46 2f       	mov	r20, r22
    2f5a:	47 70       	andi	r20, 0x07	; 7
    2f5c:	40 5d       	subi	r20, 0xD0	; 208
    2f5e:	41 93       	st	Z+, r20
    2f60:	b3 e0       	ldi	r27, 0x03	; 3
    2f62:	0f d0       	rcall	.+30     	; 0x2f82 <__ultoa_invert+0x86>
    2f64:	c9 f7       	brne	.-14     	; 0x2f58 <__ultoa_invert+0x5c>
    2f66:	f6 cf       	rjmp	.-20     	; 0x2f54 <__ultoa_invert+0x58>
    2f68:	46 2f       	mov	r20, r22
    2f6a:	4f 70       	andi	r20, 0x0F	; 15
    2f6c:	40 5d       	subi	r20, 0xD0	; 208
    2f6e:	4a 33       	cpi	r20, 0x3A	; 58
    2f70:	18 f0       	brcs	.+6      	; 0x2f78 <__ultoa_invert+0x7c>
    2f72:	49 5d       	subi	r20, 0xD9	; 217
    2f74:	31 fd       	sbrc	r19, 1
    2f76:	40 52       	subi	r20, 0x20	; 32
    2f78:	41 93       	st	Z+, r20
    2f7a:	02 d0       	rcall	.+4      	; 0x2f80 <__ultoa_invert+0x84>
    2f7c:	a9 f7       	brne	.-22     	; 0x2f68 <__ultoa_invert+0x6c>
    2f7e:	ea cf       	rjmp	.-44     	; 0x2f54 <__ultoa_invert+0x58>
    2f80:	b4 e0       	ldi	r27, 0x04	; 4
    2f82:	a6 95       	lsr	r26
    2f84:	97 95       	ror	r25
    2f86:	87 95       	ror	r24
    2f88:	77 95       	ror	r23
    2f8a:	67 95       	ror	r22
    2f8c:	ba 95       	dec	r27
    2f8e:	c9 f7       	brne	.-14     	; 0x2f82 <__ultoa_invert+0x86>
    2f90:	00 97       	sbiw	r24, 0x00	; 0
    2f92:	61 05       	cpc	r22, r1
    2f94:	71 05       	cpc	r23, r1
    2f96:	08 95       	ret
    2f98:	9b 01       	movw	r18, r22
    2f9a:	ac 01       	movw	r20, r24
    2f9c:	0a 2e       	mov	r0, r26
    2f9e:	06 94       	lsr	r0
    2fa0:	57 95       	ror	r21
    2fa2:	47 95       	ror	r20
    2fa4:	37 95       	ror	r19
    2fa6:	27 95       	ror	r18
    2fa8:	ba 95       	dec	r27
    2faa:	c9 f7       	brne	.-14     	; 0x2f9e <__ultoa_invert+0xa2>
    2fac:	62 0f       	add	r22, r18
    2fae:	73 1f       	adc	r23, r19
    2fb0:	84 1f       	adc	r24, r20
    2fb2:	95 1f       	adc	r25, r21
    2fb4:	a0 1d       	adc	r26, r0
    2fb6:	08 95       	ret

00002fb8 <_exit>:
    2fb8:	f8 94       	cli

00002fba <__stop_program>:
    2fba:	ff cf       	rjmp	.-2      	; 0x2fba <__stop_program>
