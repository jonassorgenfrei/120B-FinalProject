
jsorg002_finalProject.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ae  00800100  00002ece  00002f62  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002ece  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000040  008001ae  008001ae  00003010  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00003010  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000306c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000270  00000000  00000000  000030ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00003a4b  00000000  00000000  0000331c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000ede  00000000  00000000  00006d67  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000199a  00000000  00000000  00007c45  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000904  00000000  00000000  000095e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000b93  00000000  00000000  00009ee4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003cbb  00000000  00000000  0000aa77  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000002f8  00000000  00000000  0000e732  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	5b c1       	rjmp	.+694    	; 0x2b8 <__ctors_end>
       2:	00 00       	nop
       4:	78 c1       	rjmp	.+752    	; 0x2f6 <__bad_interrupt>
       6:	00 00       	nop
       8:	76 c1       	rjmp	.+748    	; 0x2f6 <__bad_interrupt>
       a:	00 00       	nop
       c:	74 c1       	rjmp	.+744    	; 0x2f6 <__bad_interrupt>
       e:	00 00       	nop
      10:	72 c1       	rjmp	.+740    	; 0x2f6 <__bad_interrupt>
      12:	00 00       	nop
      14:	70 c1       	rjmp	.+736    	; 0x2f6 <__bad_interrupt>
      16:	00 00       	nop
      18:	6e c1       	rjmp	.+732    	; 0x2f6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	6c c1       	rjmp	.+728    	; 0x2f6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	6a c1       	rjmp	.+724    	; 0x2f6 <__bad_interrupt>
      22:	00 00       	nop
      24:	68 c1       	rjmp	.+720    	; 0x2f6 <__bad_interrupt>
      26:	00 00       	nop
      28:	66 c1       	rjmp	.+716    	; 0x2f6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	64 c1       	rjmp	.+712    	; 0x2f6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	62 c1       	rjmp	.+708    	; 0x2f6 <__bad_interrupt>
      32:	00 00       	nop
      34:	9e c2       	rjmp	.+1340   	; 0x572 <__vector_13>
      36:	00 00       	nop
      38:	5e c1       	rjmp	.+700    	; 0x2f6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	5c c1       	rjmp	.+696    	; 0x2f6 <__bad_interrupt>
      3e:	00 00       	nop
      40:	5a c1       	rjmp	.+692    	; 0x2f6 <__bad_interrupt>
      42:	00 00       	nop
      44:	58 c1       	rjmp	.+688    	; 0x2f6 <__bad_interrupt>
      46:	00 00       	nop
      48:	56 c1       	rjmp	.+684    	; 0x2f6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	54 c1       	rjmp	.+680    	; 0x2f6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	52 c1       	rjmp	.+676    	; 0x2f6 <__bad_interrupt>
      52:	00 00       	nop
      54:	50 c1       	rjmp	.+672    	; 0x2f6 <__bad_interrupt>
      56:	00 00       	nop
      58:	4e c1       	rjmp	.+668    	; 0x2f6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	4c c1       	rjmp	.+664    	; 0x2f6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	4a c1       	rjmp	.+660    	; 0x2f6 <__bad_interrupt>
      62:	00 00       	nop
      64:	48 c1       	rjmp	.+656    	; 0x2f6 <__bad_interrupt>
      66:	00 00       	nop
      68:	46 c1       	rjmp	.+652    	; 0x2f6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	44 c1       	rjmp	.+648    	; 0x2f6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	42 c1       	rjmp	.+644    	; 0x2f6 <__bad_interrupt>
      72:	00 00       	nop
      74:	40 c1       	rjmp	.+640    	; 0x2f6 <__bad_interrupt>
      76:	00 00       	nop
      78:	3e c1       	rjmp	.+636    	; 0x2f6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	3c c1       	rjmp	.+632    	; 0x2f6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	3a c1       	rjmp	.+628    	; 0x2f6 <__bad_interrupt>
      82:	00 00       	nop
      84:	38 c1       	rjmp	.+624    	; 0x2f6 <__bad_interrupt>
      86:	00 00       	nop
      88:	36 c1       	rjmp	.+620    	; 0x2f6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	08 4a       	sbci	r16, 0xA8	; 168
      8e:	d7 3b       	cpi	r29, 0xB7	; 183
      90:	3b ce       	rjmp	.-906    	; 0xfffffd08 <__eeprom_end+0xff7efd08>
      92:	01 6e       	ori	r16, 0xE1	; 225
      94:	84 bc       	out	0x24, r8	; 36
      96:	bf fd       	.word	0xfdbf	; ????
      98:	c1 2f       	mov	r28, r17
      9a:	3d 6c       	ori	r19, 0xCD	; 205
      9c:	74 31       	cpi	r23, 0x14	; 20
      9e:	9a bd       	out	0x2a, r25	; 42
      a0:	56 83       	std	Z+6, r21	; 0x06
      a2:	3d da       	rcall	.-2950   	; 0xfffff51e <__eeprom_end+0xff7ef51e>
      a4:	3d 00       	.word	0x003d	; ????
      a6:	c7 7f       	andi	r28, 0xF7	; 247
      a8:	11 be       	out	0x31, r1	; 49
      aa:	d9 e4       	ldi	r29, 0x49	; 73
      ac:	bb 4c       	sbci	r27, 0xCB	; 203
      ae:	3e 91       	ld	r19, -X
      b0:	6b aa       	std	Y+51, r6	; 0x33
      b2:	aa be       	out	0x3a, r10	; 58
      b4:	00 00       	nop
      b6:	00 80       	ld	r0, Z
      b8:	3f 05       	cpc	r19, r15
      ba:	a8 4c       	sbci	r26, 0xC8	; 200
      bc:	cd b2       	in	r12, 0x1d	; 29
      be:	d4 4e       	sbci	r29, 0xE4	; 228
      c0:	b9 38       	cpi	r27, 0x89	; 137
      c2:	36 a9       	ldd	r19, Z+54	; 0x36
      c4:	02 0c       	add	r0, r2
      c6:	50 b9       	out	0x00, r21	; 0
      c8:	91 86       	std	Z+9, r9	; 0x09
      ca:	88 08       	sbc	r8, r8
      cc:	3c a6       	std	Y+44, r3	; 0x2c
      ce:	aa aa       	std	Y+50, r10	; 0x32
      d0:	2a be       	out	0x3a, r2	; 58
      d2:	00 00       	nop
      d4:	00 80       	ld	r0, Z
      d6:	3f 00       	.word	0x003f	; ????

000000d8 <FONT_CHARS>:
      d8:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
      e8:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
      f8:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     108:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     118:	00 08 08 08 08 08 00 60 60 00 00 20 10 08 04 02     .......``.. ....
     128:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     138:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     148:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     158:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     168:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     178:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     188:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     198:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     1a8:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     1b8:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     1c8:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     1d8:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     1e8:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     1f8:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     208:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     218:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     228:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     238:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     248:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     258:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     268:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     278:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     288:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     298:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     2a8:	00 00 41 36 08 00 08 08 2a 1c 08 08 1c 2a 08 08     ..A6....*....*..

000002b8 <__ctors_end>:
     2b8:	11 24       	eor	r1, r1
     2ba:	1f be       	out	0x3f, r1	; 63
     2bc:	cf ef       	ldi	r28, 0xFF	; 255
     2be:	d0 e4       	ldi	r29, 0x40	; 64
     2c0:	de bf       	out	0x3e, r29	; 62
     2c2:	cd bf       	out	0x3d, r28	; 61

000002c4 <__do_copy_data>:
     2c4:	11 e0       	ldi	r17, 0x01	; 1
     2c6:	a0 e0       	ldi	r26, 0x00	; 0
     2c8:	b1 e0       	ldi	r27, 0x01	; 1
     2ca:	ee ec       	ldi	r30, 0xCE	; 206
     2cc:	fe e2       	ldi	r31, 0x2E	; 46
     2ce:	00 e0       	ldi	r16, 0x00	; 0
     2d0:	0b bf       	out	0x3b, r16	; 59
     2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <__do_copy_data+0x14>
     2d4:	07 90       	elpm	r0, Z+
     2d6:	0d 92       	st	X+, r0
     2d8:	ae 3a       	cpi	r26, 0xAE	; 174
     2da:	b1 07       	cpc	r27, r17
     2dc:	d9 f7       	brne	.-10     	; 0x2d4 <__do_copy_data+0x10>

000002de <__do_clear_bss>:
     2de:	21 e0       	ldi	r18, 0x01	; 1
     2e0:	ae ea       	ldi	r26, 0xAE	; 174
     2e2:	b1 e0       	ldi	r27, 0x01	; 1
     2e4:	01 c0       	rjmp	.+2      	; 0x2e8 <.do_clear_bss_start>

000002e6 <.do_clear_bss_loop>:
     2e6:	1d 92       	st	X+, r1

000002e8 <.do_clear_bss_start>:
     2e8:	ae 3e       	cpi	r26, 0xEE	; 238
     2ea:	b2 07       	cpc	r27, r18
     2ec:	e1 f7       	brne	.-8      	; 0x2e6 <.do_clear_bss_loop>
     2ee:	0e 94 0f 0f 	call	0x1e1e	; 0x1e1e <main>
     2f2:	0c 94 65 17 	jmp	0x2eca	; 0x2eca <_exit>

000002f6 <__bad_interrupt>:
     2f6:	84 ce       	rjmp	.-760    	; 0x0 <__vectors>

000002f8 <LCD_SetUpPorts>:
	LCD_WriteCommand(0x06);
	LCD_WriteCommand(0x01);				 
}

void LCD_SetUpPorts(){
	DDRC = 0xFF; 
     2f8:	8f ef       	ldi	r24, 0xFF	; 255
     2fa:	87 b9       	out	0x07, r24	; 7
	PORTC = 0x00;
     2fc:	18 b8       	out	0x08, r1	; 8
     2fe:	08 95       	ret

00000300 <delay_ms>:
}

void delay_ms(int miliSec) //for 8 Mhz crystal
{
    int i,j;
    for(i=0;i<miliSec;i++)
     300:	18 16       	cp	r1, r24
     302:	19 06       	cpc	r1, r25
     304:	5c f0       	brlt	.+22     	; 0x31c <delay_ms+0x1c>
     306:	08 95       	ret
    for(j=0;j<775;j++)
  {
   asm("nop");
     308:	00 00       	nop
     30a:	21 50       	subi	r18, 0x01	; 1
     30c:	31 09       	sbc	r19, r1

void delay_ms(int miliSec) //for 8 Mhz crystal
{
    int i,j;
    for(i=0;i<miliSec;i++)
    for(j=0;j<775;j++)
     30e:	e1 f7       	brne	.-8      	; 0x308 <delay_ms+0x8>
}

void delay_ms(int miliSec) //for 8 Mhz crystal
{
    int i,j;
    for(i=0;i<miliSec;i++)
     310:	4f 5f       	subi	r20, 0xFF	; 255
     312:	5f 4f       	sbci	r21, 0xFF	; 255
     314:	84 17       	cp	r24, r20
     316:	95 07       	cpc	r25, r21
     318:	19 f4       	brne	.+6      	; 0x320 <delay_ms+0x20>
     31a:	08 95       	ret
     31c:	40 e0       	ldi	r20, 0x00	; 0
     31e:	50 e0       	ldi	r21, 0x00	; 0
											// 16x2 LCD: column - 9
   }
}

void delay_ms(int miliSec) //for 8 Mhz crystal
{
     320:	27 e0       	ldi	r18, 0x07	; 7
     322:	33 e0       	ldi	r19, 0x03	; 3
     324:	f1 cf       	rjmp	.-30     	; 0x308 <delay_ms+0x8>

00000326 <LCD_WriteCommand>:
	DDRC = 0xFF; 
	PORTC = 0x00;
}

void LCD_WriteCommand (unsigned char Command) {
	CONTROL_BUS &= ~(1<<RS);// To write Commands
     326:	42 98       	cbi	0x08, 2	; 8
	char z1 = Command << 4;// To shift 4 bits
	Command &= 0b11110000; //masking lower 4 bits
	CONTROL_BUS = (CONTROL_BUS & 0x0F)|Command; // sending data to LCD
     328:	98 b1       	in	r25, 0x08	; 8
     32a:	9f 70       	andi	r25, 0x0F	; 15
     32c:	28 2f       	mov	r18, r24
     32e:	20 7f       	andi	r18, 0xF0	; 240
     330:	92 2b       	or	r25, r18
     332:	98 b9       	out	0x08, r25	; 8
	
	CONTROL_BUS |= (1<<E);//send falling edge to send data to LCD
     334:	43 9a       	sbi	0x08, 3	; 8
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     336:	ef e9       	ldi	r30, 0x9F	; 159
     338:	ff e0       	ldi	r31, 0x0F	; 15
     33a:	31 97       	sbiw	r30, 0x01	; 1
     33c:	f1 f7       	brne	.-4      	; 0x33a <LCD_WriteCommand+0x14>
     33e:	00 c0       	rjmp	.+0      	; 0x340 <LCD_WriteCommand+0x1a>
     340:	00 00       	nop
	_delay_ms(1);
	CONTROL_BUS &= ~(1<<3);
     342:	43 98       	cbi	0x08, 3	; 8
     344:	ef e9       	ldi	r30, 0x9F	; 159
     346:	ff e0       	ldi	r31, 0x0F	; 15
     348:	31 97       	sbiw	r30, 0x01	; 1
     34a:	f1 f7       	brne	.-4      	; 0x348 <LCD_WriteCommand+0x22>
     34c:	00 c0       	rjmp	.+0      	; 0x34e <LCD_WriteCommand+0x28>
     34e:	00 00       	nop
	_delay_ms(1);
	z1 &= 0b11110000;//Again masking lower 4 bits
	CONTROL_BUS = (CONTROL_BUS & 0x0F)|z1;//Sending Remaining Data to LCD
     350:	98 b1       	in	r25, 0x08	; 8
     352:	9f 70       	andi	r25, 0x0F	; 15
     354:	82 95       	swap	r24
     356:	80 7f       	andi	r24, 0xF0	; 240
     358:	89 2b       	or	r24, r25
     35a:	88 b9       	out	0x08, r24	; 8
	
	CONTROL_BUS |= (1<<E);//send falling edge to send data to LCD
     35c:	43 9a       	sbi	0x08, 3	; 8
	delay_ms(1);
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	90 e0       	ldi	r25, 0x00	; 0
     362:	ce df       	rcall	.-100    	; 0x300 <delay_ms>
	CONTROL_BUS &= ~(1<<E);
     364:	43 98       	cbi	0x08, 3	; 8
	delay_ms(1);
     366:	81 e0       	ldi	r24, 0x01	; 1
     368:	90 e0       	ldi	r25, 0x00	; 0
     36a:	ca cf       	rjmp	.-108    	; 0x300 <delay_ms>
     36c:	08 95       	ret

0000036e <LCD_ClearScreen>:
#define E 3			// pin number of uC connected to pin 6 of LCD disp.

/*-------------------------------------------------------------------------*/

void LCD_ClearScreen(void) {
   LCD_WriteCommand(0x01);
     36e:	81 e0       	ldi	r24, 0x01	; 1
     370:	da cf       	rjmp	.-76     	; 0x326 <LCD_WriteCommand>
     372:	08 95       	ret

00000374 <LCD_init>:
}

void LCD_init(void) {
	LCD_WriteCommand(0x02);
     374:	82 e0       	ldi	r24, 0x02	; 2
     376:	d7 df       	rcall	.-82     	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(0x28);
     378:	88 e2       	ldi	r24, 0x28	; 40
     37a:	d5 df       	rcall	.-86     	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(0x0c);
     37c:	8c e0       	ldi	r24, 0x0C	; 12
     37e:	d3 df       	rcall	.-90     	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(0x06);
     380:	86 e0       	ldi	r24, 0x06	; 6
     382:	d1 df       	rcall	.-94     	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(0x01);				 
     384:	81 e0       	ldi	r24, 0x01	; 1
     386:	cf cf       	rjmp	.-98     	; 0x326 <LCD_WriteCommand>
     388:	08 95       	ret

0000038a <LCD_Cursor>:
     38a:	81 31       	cpi	r24, 0x11	; 17
	sprintf(str3, "%03d",b);
	pos = LCD_APPEND_DisplayString(pos, str3);
}

void LCD_Cursor(unsigned char column) {
   if ( column < 17 ) { // 16x1 LCD: column < 9
     38c:	18 f4       	brcc	.+6      	; 0x394 <LCD_Cursor+0xa>
						// 16x2 LCD: column < 17
      LCD_WriteCommand(0x80 + column - 1);
     38e:	81 58       	subi	r24, 0x81	; 129
     390:	ca cf       	rjmp	.-108    	; 0x326 <LCD_WriteCommand>
     392:	08 95       	ret
   } else {
      LCD_WriteCommand(0xB8 + column - 9);	// 16x1 LCD: column - 1
     394:	81 55       	subi	r24, 0x51	; 81
     396:	c7 cf       	rjmp	.-114    	; 0x326 <LCD_WriteCommand>
     398:	08 95       	ret

0000039a <LCD_WriteData>:
	CONTROL_BUS &= ~(1<<E);
	delay_ms(1);
	
}

void LCD_WriteData(unsigned char Data) {
     39a:	cf 93       	push	r28
     39c:	c8 2f       	mov	r28, r24
	CONTROL_BUS |= (1 << RS);// To write Data
     39e:	42 9a       	sbi	0x08, 2	; 8
	char t1 = Data << 4;// To shift 4 bits
	Data &= 0b11110000;// for masking the lower 4 bits
	CONTROL_BUS = (CONTROL_BUS & 0x0F)|Data;//sending data
     3a0:	88 b1       	in	r24, 0x08	; 8
     3a2:	8f 70       	andi	r24, 0x0F	; 15
     3a4:	9c 2f       	mov	r25, r28
     3a6:	90 7f       	andi	r25, 0xF0	; 240
     3a8:	89 2b       	or	r24, r25
     3aa:	88 b9       	out	0x08, r24	; 8

	CONTROL_BUS |= (1<<E); //send falling edge to send data to LCD
     3ac:	43 9a       	sbi	0x08, 3	; 8
	delay_ms(1);
     3ae:	81 e0       	ldi	r24, 0x01	; 1
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	a6 df       	rcall	.-180    	; 0x300 <delay_ms>
	CONTROL_BUS &= ~(1<<E);
     3b4:	43 98       	cbi	0x08, 3	; 8
	delay_ms(1);
     3b6:	81 e0       	ldi	r24, 0x01	; 1
     3b8:	90 e0       	ldi	r25, 0x00	; 0
     3ba:	a2 df       	rcall	.-188    	; 0x300 <delay_ms>
	
	t1 &= 0b11110000;//Again masking lower 4 bits
	CONTROL_BUS = (CONTROL_BUS & 0x0F)|t1;// Sending remaining data
     3bc:	88 b1       	in	r24, 0x08	; 8
     3be:	8f 70       	andi	r24, 0x0F	; 15
     3c0:	c2 95       	swap	r28
     3c2:	c0 7f       	andi	r28, 0xF0	; 240
     3c4:	c8 2b       	or	r28, r24
     3c6:	c8 b9       	out	0x08, r28	; 8
	
	CONTROL_BUS |= (1<<E);//send falling edge to send data to LCD
     3c8:	43 9a       	sbi	0x08, 3	; 8
	delay_ms(1);
     3ca:	81 e0       	ldi	r24, 0x01	; 1
     3cc:	90 e0       	ldi	r25, 0x00	; 0
     3ce:	98 df       	rcall	.-208    	; 0x300 <delay_ms>
	CONTROL_BUS &= ~(1<<E);
	delay_ms(1);
     3d0:	43 98       	cbi	0x08, 3	; 8
     3d2:	81 e0       	ldi	r24, 0x01	; 1
     3d4:	90 e0       	ldi	r25, 0x00	; 0
     3d6:	94 df       	rcall	.-216    	; 0x300 <delay_ms>
	
}
     3d8:	cf 91       	pop	r28
     3da:	08 95       	ret

000003dc <LCD_DisplayString>:

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
     3dc:	0f 93       	push	r16
     3de:	1f 93       	push	r17
     3e0:	cf 93       	push	r28
     3e2:	df 93       	push	r29
     3e4:	18 2f       	mov	r17, r24
     3e6:	eb 01       	movw	r28, r22
   LCD_ClearScreen();
     3e8:	c2 df       	rcall	.-124    	; 0x36e <LCD_ClearScreen>
   unsigned char c = column;
   while(*string) {
     3ea:	88 81       	ld	r24, Y
     3ec:	88 23       	and	r24, r24
     3ee:	51 f0       	breq	.+20     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
      LCD_Cursor(c++);
     3f0:	01 e0       	ldi	r16, 0x01	; 1
     3f2:	01 0f       	add	r16, r17
     3f4:	81 2f       	mov	r24, r17
     3f6:	c9 df       	rcall	.-110    	; 0x38a <LCD_Cursor>
      LCD_WriteData(*string++);
     3f8:	89 91       	ld	r24, Y+
     3fa:	cf df       	rcall	.-98     	; 0x39a <LCD_WriteData>
     3fc:	10 2f       	mov	r17, r16

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
   LCD_ClearScreen();
   unsigned char c = column;
   while(*string) {
      LCD_Cursor(c++);
     3fe:	88 81       	ld	r24, Y
}

void LCD_DisplayString( unsigned char column, const unsigned char* string) {
   LCD_ClearScreen();
   unsigned char c = column;
   while(*string) {
     400:	81 11       	cpse	r24, r1
     402:	f6 cf       	rjmp	.-20     	; 0x3f0 <LCD_DisplayString+0x14>
     404:	df 91       	pop	r29
      LCD_Cursor(c++);
      LCD_WriteData(*string++);
   }
}
     406:	cf 91       	pop	r28
     408:	1f 91       	pop	r17
     40a:	0f 91       	pop	r16
     40c:	08 95       	ret

0000040e <LCD_APPEND_DisplayString>:
     40e:	1f 93       	push	r17

static unsigned char LCD_APPEND_DisplayString( unsigned char column, const unsigned char* string) {
     410:	cf 93       	push	r28
     412:	df 93       	push	r29
	   unsigned char c = column;
	   while(*string) {
     414:	fb 01       	movw	r30, r22
     416:	90 81       	ld	r25, Z
     418:	99 23       	and	r25, r25
     41a:	59 f0       	breq	.+22     	; 0x432 <LCD_APPEND_DisplayString+0x24>
     41c:	eb 01       	movw	r28, r22
		   LCD_Cursor(c++);
     41e:	11 e0       	ldi	r17, 0x01	; 1
     420:	18 0f       	add	r17, r24
     422:	b3 df       	rcall	.-154    	; 0x38a <LCD_Cursor>
		   LCD_WriteData(*string++);
     424:	89 91       	ld	r24, Y+
     426:	b9 df       	rcall	.-142    	; 0x39a <LCD_WriteData>
}

static unsigned char LCD_APPEND_DisplayString( unsigned char column, const unsigned char* string) {
	   unsigned char c = column;
	   while(*string) {
		   LCD_Cursor(c++);
     428:	81 2f       	mov	r24, r17
   }
}

static unsigned char LCD_APPEND_DisplayString( unsigned char column, const unsigned char* string) {
	   unsigned char c = column;
	   while(*string) {
     42a:	98 81       	ld	r25, Y
     42c:	91 11       	cpse	r25, r1
     42e:	f7 cf       	rjmp	.-18     	; 0x41e <LCD_APPEND_DisplayString+0x10>
     430:	01 c0       	rjmp	.+2      	; 0x434 <LCD_APPEND_DisplayString+0x26>
      LCD_WriteData(*string++);
   }
}

static unsigned char LCD_APPEND_DisplayString( unsigned char column, const unsigned char* string) {
	   unsigned char c = column;
     432:	18 2f       	mov	r17, r24
	   while(*string) {
		   LCD_Cursor(c++);
		   LCD_WriteData(*string++);
	   }
	   return c;
}
     434:	81 2f       	mov	r24, r17
     436:	df 91       	pop	r29
     438:	cf 91       	pop	r28
     43a:	1f 91       	pop	r17
     43c:	08 95       	ret

0000043e <LCD_printfRGB>:

void LCD_printfRGB(char r, char g, char b){
     43e:	ac e0       	ldi	r26, 0x0C	; 12
     440:	b0 e0       	ldi	r27, 0x00	; 0
     442:	e5 e2       	ldi	r30, 0x25	; 37
     444:	f2 e0       	ldi	r31, 0x02	; 2
     446:	0c 94 39 14 	jmp	0x2872	; 0x2872 <__prologue_saves__+0x12>
     44a:	b6 2e       	mov	r11, r22
     44c:	d4 2e       	mov	r13, r20
	//LCD_ClearScreen();
	unsigned char pos = 1;
	unsigned char str1[4];
	sprintf(str1, "%03d",r);
     44e:	1f 92       	push	r1
     450:	8f 93       	push	r24
     452:	02 e2       	ldi	r16, 0x22	; 34
     454:	11 e0       	ldi	r17, 0x01	; 1
     456:	1f 93       	push	r17
     458:	0f 93       	push	r16
     45a:	ce 01       	movw	r24, r28
     45c:	01 96       	adiw	r24, 0x01	; 1
     45e:	7c 01       	movw	r14, r24
     460:	9f 93       	push	r25
     462:	8f 93       	push	r24
     464:	0e 94 8a 14 	call	0x2914	; 0x2914 <sprintf>
	pos = LCD_APPEND_DisplayString(pos, "Color:          R");
     468:	67 e2       	ldi	r22, 0x27	; 39
     46a:	71 e0       	ldi	r23, 0x01	; 1
     46c:	81 e0       	ldi	r24, 0x01	; 1
     46e:	cf df       	rcall	.-98     	; 0x40e <LCD_APPEND_DisplayString>
	pos = LCD_APPEND_DisplayString(pos, str1);
     470:	b7 01       	movw	r22, r14
     472:	cd df       	rcall	.-102    	; 0x40e <LCD_APPEND_DisplayString>
	pos = LCD_APPEND_DisplayString(pos, "|G");
     474:	69 e3       	ldi	r22, 0x39	; 57
     476:	71 e0       	ldi	r23, 0x01	; 1
     478:	ca df       	rcall	.-108    	; 0x40e <LCD_APPEND_DisplayString>
     47a:	c8 2e       	mov	r12, r24
	unsigned char str2[4];
	sprintf(str2, "%03d",g);
     47c:	1f 92       	push	r1
     47e:	bf 92       	push	r11
     480:	1f 93       	push	r17
     482:	0f 93       	push	r16
     484:	7e 01       	movw	r14, r28
     486:	95 e0       	ldi	r25, 0x05	; 5
     488:	e9 0e       	add	r14, r25
     48a:	f1 1c       	adc	r15, r1
     48c:	ff 92       	push	r15
     48e:	ef 92       	push	r14
     490:	0e 94 8a 14 	call	0x2914	; 0x2914 <sprintf>
	pos = LCD_APPEND_DisplayString(pos, str2);
     494:	b7 01       	movw	r22, r14
     496:	8c 2d       	mov	r24, r12
	pos = LCD_APPEND_DisplayString(pos, "|B");
     498:	ba df       	rcall	.-140    	; 0x40e <LCD_APPEND_DisplayString>
     49a:	6c e3       	ldi	r22, 0x3C	; 60
     49c:	71 e0       	ldi	r23, 0x01	; 1
     49e:	b7 df       	rcall	.-146    	; 0x40e <LCD_APPEND_DisplayString>
     4a0:	f8 2e       	mov	r15, r24
	unsigned char str3[4];
	sprintf(str3, "%03d",b);
     4a2:	1f 92       	push	r1
     4a4:	df 92       	push	r13
     4a6:	1f 93       	push	r17
     4a8:	0f 93       	push	r16
     4aa:	8e 01       	movw	r16, r28
     4ac:	07 5f       	subi	r16, 0xF7	; 247
     4ae:	1f 4f       	sbci	r17, 0xFF	; 255
     4b0:	1f 93       	push	r17
     4b2:	0f 93       	push	r16
     4b4:	0e 94 8a 14 	call	0x2914	; 0x2914 <sprintf>
	pos = LCD_APPEND_DisplayString(pos, str3);
     4b8:	b8 01       	movw	r22, r16
     4ba:	8f 2d       	mov	r24, r15
     4bc:	a8 df       	rcall	.-176    	; 0x40e <LCD_APPEND_DisplayString>
}
     4be:	0f b6       	in	r0, 0x3f	; 63
     4c0:	f8 94       	cli
     4c2:	de bf       	out	0x3e, r29	; 62
     4c4:	0f be       	out	0x3f, r0	; 63
     4c6:	cd bf       	out	0x3d, r28	; 61
     4c8:	2c 96       	adiw	r28, 0x0c	; 12
     4ca:	e9 e0       	ldi	r30, 0x09	; 9
     4cc:	0c 94 55 14 	jmp	0x28aa	; 0x28aa <__epilogue_restores__+0x12>

000004d0 <SMTICK1>:
		if(c==0){return b;}
		a = b;
		b = c;
	}
	return 0;
}
     4d0:	00 97       	sbiw	r24, 0x00	; 0
     4d2:	19 f0       	breq	.+6      	; 0x4da <SMTICK1+0xa>
     4d4:	01 97       	sbiw	r24, 0x01	; 1
     4d6:	29 f0       	breq	.+10     	; 0x4e2 <SMTICK1+0x12>
     4d8:	11 c0       	rjmp	.+34     	; 0x4fc <SMTICK1+0x2c>
     4da:	6f e3       	ldi	r22, 0x3F	; 63
     4dc:	71 e0       	ldi	r23, 0x01	; 1
     4de:	81 e0       	ldi	r24, 0x01	; 1
     4e0:	7d df       	rcall	.-262    	; 0x3dc <LCD_DisplayString>
     4e2:	80 91 e3 01 	lds	r24, 0x01E3	; 0x8001e3 <newInput>
     4e6:	81 11       	cpse	r24, r1
     4e8:	0c c0       	rjmp	.+24     	; 0x502 <SMTICK1+0x32>
     4ea:	e3 e0       	ldi	r30, 0x03	; 3
     4ec:	f1 e0       	ldi	r31, 0x01	; 1
     4ee:	42 81       	ldd	r20, Z+2	; 0x02
     4f0:	61 81       	ldd	r22, Z+1	; 0x01
     4f2:	80 81       	ld	r24, Z
     4f4:	a4 df       	rcall	.-184    	; 0x43e <LCD_printfRGB>
     4f6:	81 e0       	ldi	r24, 0x01	; 1
     4f8:	90 e0       	ldi	r25, 0x00	; 0
     4fa:	08 95       	ret
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	08 95       	ret
     502:	81 e0       	ldi	r24, 0x01	; 1
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	08 95       	ret

00000508 <TimerSet>:
     508:	60 93 06 01 	sts	0x0106, r22	; 0x800106 <_avr_timer_M>
     50c:	70 93 07 01 	sts	0x0107, r23	; 0x800107 <_avr_timer_M+0x1>
     510:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_avr_timer_M+0x2>
     514:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_avr_timer_M+0x3>
     518:	60 93 e4 01 	sts	0x01E4, r22	; 0x8001e4 <_avr_timer_cntcurr>
     51c:	70 93 e5 01 	sts	0x01E5, r23	; 0x8001e5 <_avr_timer_cntcurr+0x1>
     520:	80 93 e6 01 	sts	0x01E6, r24	; 0x8001e6 <_avr_timer_cntcurr+0x2>
     524:	90 93 e7 01 	sts	0x01E7, r25	; 0x8001e7 <_avr_timer_cntcurr+0x3>
     528:	08 95       	ret

0000052a <TimerOn>:
     52a:	8b e0       	ldi	r24, 0x0B	; 11
     52c:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
     530:	8d e7       	ldi	r24, 0x7D	; 125
     532:	90 e0       	ldi	r25, 0x00	; 0
     534:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
     538:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
     53c:	82 e0       	ldi	r24, 0x02	; 2
     53e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
     542:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x7e0085>
     546:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x7e0084>
     54a:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_avr_timer_M>
     54e:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_avr_timer_M+0x1>
     552:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_avr_timer_M+0x2>
     556:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_avr_timer_M+0x3>
     55a:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <_avr_timer_cntcurr>
     55e:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <_avr_timer_cntcurr+0x1>
     562:	a0 93 e6 01 	sts	0x01E6, r26	; 0x8001e6 <_avr_timer_cntcurr+0x2>
     566:	b0 93 e7 01 	sts	0x01E7, r27	; 0x8001e7 <_avr_timer_cntcurr+0x3>
     56a:	8f b7       	in	r24, 0x3f	; 63
     56c:	80 68       	ori	r24, 0x80	; 128
     56e:	8f bf       	out	0x3f, r24	; 63
     570:	08 95       	ret

00000572 <__vector_13>:
     572:	1f 92       	push	r1
     574:	0f 92       	push	r0
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	0f 92       	push	r0
     57a:	11 24       	eor	r1, r1
     57c:	8f 93       	push	r24
     57e:	9f 93       	push	r25
     580:	af 93       	push	r26
     582:	bf 93       	push	r27
     584:	80 91 e4 01 	lds	r24, 0x01E4	; 0x8001e4 <_avr_timer_cntcurr>
     588:	90 91 e5 01 	lds	r25, 0x01E5	; 0x8001e5 <_avr_timer_cntcurr+0x1>
     58c:	a0 91 e6 01 	lds	r26, 0x01E6	; 0x8001e6 <_avr_timer_cntcurr+0x2>
     590:	b0 91 e7 01 	lds	r27, 0x01E7	; 0x8001e7 <_avr_timer_cntcurr+0x3>
     594:	01 97       	sbiw	r24, 0x01	; 1
     596:	a1 09       	sbc	r26, r1
     598:	b1 09       	sbc	r27, r1
     59a:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <_avr_timer_cntcurr>
     59e:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <_avr_timer_cntcurr+0x1>
     5a2:	a0 93 e6 01 	sts	0x01E6, r26	; 0x8001e6 <_avr_timer_cntcurr+0x2>
     5a6:	b0 93 e7 01 	sts	0x01E7, r27	; 0x8001e7 <_avr_timer_cntcurr+0x3>
     5aa:	89 2b       	or	r24, r25
     5ac:	8a 2b       	or	r24, r26
     5ae:	8b 2b       	or	r24, r27
     5b0:	99 f4       	brne	.+38     	; 0x5d8 <__vector_13+0x66>
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	80 93 e8 01 	sts	0x01E8, r24	; 0x8001e8 <TimerFlag>
     5b8:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <_avr_timer_M>
     5bc:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <_avr_timer_M+0x1>
     5c0:	a0 91 08 01 	lds	r26, 0x0108	; 0x800108 <_avr_timer_M+0x2>
     5c4:	b0 91 09 01 	lds	r27, 0x0109	; 0x800109 <_avr_timer_M+0x3>
     5c8:	80 93 e4 01 	sts	0x01E4, r24	; 0x8001e4 <_avr_timer_cntcurr>
     5cc:	90 93 e5 01 	sts	0x01E5, r25	; 0x8001e5 <_avr_timer_cntcurr+0x1>
     5d0:	a0 93 e6 01 	sts	0x01E6, r26	; 0x8001e6 <_avr_timer_cntcurr+0x2>
     5d4:	b0 93 e7 01 	sts	0x01E7, r27	; 0x8001e7 <_avr_timer_cntcurr+0x3>
     5d8:	bf 91       	pop	r27
     5da:	af 91       	pop	r26
     5dc:	9f 91       	pop	r25
     5de:	8f 91       	pop	r24
     5e0:	0f 90       	pop	r0
     5e2:	0f be       	out	0x3f, r0	; 63
     5e4:	0f 90       	pop	r0
     5e6:	1f 90       	pop	r1
     5e8:	18 95       	reti

000005ea <hsvtorgb>:
     5ea:	a4 e0       	ldi	r26, 0x04	; 4
     5ec:	b0 e0       	ldi	r27, 0x00	; 0
     5ee:	eb ef       	ldi	r30, 0xFB	; 251
     5f0:	f2 e0       	ldi	r31, 0x02	; 2
     5f2:	0c 94 30 14 	jmp	0x2860	; 0x2860 <__prologue_saves__>
     5f6:	2b 01       	movw	r4, r22
     5f8:	3c 01       	movw	r6, r24
     5fa:	49 83       	std	Y+1, r20	; 0x01
     5fc:	62 2f       	mov	r22, r18
     5fe:	70 e0       	ldi	r23, 0x00	; 0
     600:	80 e0       	ldi	r24, 0x00	; 0
     602:	90 e0       	ldi	r25, 0x00	; 0
     604:	0e 94 ed 11 	call	0x23da	; 0x23da <__floatunsisf>
     608:	20 e0       	ldi	r18, 0x00	; 0
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	4f e7       	ldi	r20, 0x7F	; 127
     60e:	53 e4       	ldi	r21, 0x43	; 67
     610:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     614:	6b 01       	movw	r12, r22
     616:	7c 01       	movw	r14, r24
     618:	29 81       	ldd	r18, Y+1	; 0x01
     61a:	62 2f       	mov	r22, r18
     61c:	70 e0       	ldi	r23, 0x00	; 0
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	0e 94 ed 11 	call	0x23da	; 0x23da <__floatunsisf>
     626:	a7 01       	movw	r20, r14
     628:	96 01       	movw	r18, r12
     62a:	0e 94 08 13 	call	0x2610	; 0x2610 <__mulsf3>
     62e:	20 e0       	ldi	r18, 0x00	; 0
     630:	30 e0       	ldi	r19, 0x00	; 0
     632:	4f e7       	ldi	r20, 0x7F	; 127
     634:	53 e4       	ldi	r21, 0x43	; 67
     636:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     63a:	16 2f       	mov	r17, r22
     63c:	7c 83       	std	Y+4, r23	; 0x04
     63e:	8b 83       	std	Y+3, r24	; 0x03
     640:	09 2f       	mov	r16, r25
     642:	c3 01       	movw	r24, r6
     644:	b2 01       	movw	r22, r4
     646:	0e 94 ed 11 	call	0x23da	; 0x23da <__floatunsisf>
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	40 e7       	ldi	r20, 0x70	; 112
     650:	52 e4       	ldi	r21, 0x42	; 66
     652:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     656:	4b 01       	movw	r8, r22
     658:	5c 01       	movw	r10, r24
     65a:	c3 01       	movw	r24, r6
     65c:	b2 01       	movw	r22, r4
     65e:	2c e3       	ldi	r18, 0x3C	; 60
     660:	30 e0       	ldi	r19, 0x00	; 0
     662:	40 e0       	ldi	r20, 0x00	; 0
     664:	50 e0       	ldi	r21, 0x00	; 0
     666:	0e 94 fe 13 	call	0x27fc	; 0x27fc <__udivmodsi4>
     66a:	21 70       	andi	r18, 0x01	; 1
     66c:	33 27       	eor	r19, r19
     66e:	21 50       	subi	r18, 0x01	; 1
     670:	31 09       	sbc	r19, r1
     672:	c9 01       	movw	r24, r18
     674:	99 23       	and	r25, r25
     676:	24 f4       	brge	.+8      	; 0x680 <hsvtorgb+0x96>
     678:	88 27       	eor	r24, r24
     67a:	99 27       	eor	r25, r25
     67c:	82 1b       	sub	r24, r18
     67e:	93 0b       	sbc	r25, r19
     680:	61 e0       	ldi	r22, 0x01	; 1
     682:	70 e0       	ldi	r23, 0x00	; 0
     684:	68 1b       	sub	r22, r24
     686:	79 0b       	sbc	r23, r25
     688:	07 2e       	mov	r0, r23
     68a:	00 0c       	add	r0, r0
     68c:	88 0b       	sbc	r24, r24
     68e:	99 0b       	sbc	r25, r25
     690:	0e 94 ef 11 	call	0x23de	; 0x23de <__floatsisf>
     694:	21 2f       	mov	r18, r17
     696:	3c 81       	ldd	r19, Y+4	; 0x04
     698:	4b 81       	ldd	r20, Y+3	; 0x03
     69a:	50 2f       	mov	r21, r16
     69c:	0e 94 08 13 	call	0x2610	; 0x2610 <__mulsf3>
     6a0:	66 2e       	mov	r6, r22
     6a2:	77 2e       	mov	r7, r23
     6a4:	58 2e       	mov	r5, r24
     6a6:	49 2e       	mov	r4, r25
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	a9 01       	movw	r20, r18
     6ae:	c5 01       	movw	r24, r10
     6b0:	b4 01       	movw	r22, r8
     6b2:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     6b6:	88 23       	and	r24, r24
     6b8:	5c f0       	brlt	.+22     	; 0x6d0 <hsvtorgb+0xe6>
     6ba:	20 e0       	ldi	r18, 0x00	; 0
     6bc:	30 e0       	ldi	r19, 0x00	; 0
     6be:	40 e8       	ldi	r20, 0x80	; 128
     6c0:	5f e3       	ldi	r21, 0x3F	; 63
     6c2:	c5 01       	movw	r24, r10
     6c4:	b4 01       	movw	r22, r8
     6c6:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     6ca:	18 16       	cp	r1, r24
     6cc:	0c f0       	brlt	.+2      	; 0x6d0 <hsvtorgb+0xe6>
     6ce:	77 c0       	rjmp	.+238    	; 0x7be <hsvtorgb+0x1d4>
     6d0:	20 e0       	ldi	r18, 0x00	; 0
     6d2:	30 e0       	ldi	r19, 0x00	; 0
     6d4:	40 e8       	ldi	r20, 0x80	; 128
     6d6:	5f e3       	ldi	r21, 0x3F	; 63
     6d8:	c5 01       	movw	r24, r10
     6da:	b4 01       	movw	r22, r8
     6dc:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     6e0:	88 23       	and	r24, r24
     6e2:	5c f0       	brlt	.+22     	; 0x6fa <hsvtorgb+0x110>
     6e4:	20 e0       	ldi	r18, 0x00	; 0
     6e6:	30 e0       	ldi	r19, 0x00	; 0
     6e8:	40 e0       	ldi	r20, 0x00	; 0
     6ea:	50 e4       	ldi	r21, 0x40	; 64
     6ec:	c5 01       	movw	r24, r10
     6ee:	b4 01       	movw	r22, r8
     6f0:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     6f4:	18 16       	cp	r1, r24
     6f6:	0c f0       	brlt	.+2      	; 0x6fa <hsvtorgb+0x110>
     6f8:	6f c0       	rjmp	.+222    	; 0x7d8 <hsvtorgb+0x1ee>
     6fa:	20 e0       	ldi	r18, 0x00	; 0
     6fc:	30 e0       	ldi	r19, 0x00	; 0
     6fe:	40 e0       	ldi	r20, 0x00	; 0
     700:	50 e4       	ldi	r21, 0x40	; 64
     702:	c5 01       	movw	r24, r10
     704:	b4 01       	movw	r22, r8
     706:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     70a:	88 23       	and	r24, r24
     70c:	5c f0       	brlt	.+22     	; 0x724 <hsvtorgb+0x13a>
     70e:	20 e0       	ldi	r18, 0x00	; 0
     710:	30 e0       	ldi	r19, 0x00	; 0
     712:	40 e4       	ldi	r20, 0x40	; 64
     714:	50 e4       	ldi	r21, 0x40	; 64
     716:	c5 01       	movw	r24, r10
     718:	b4 01       	movw	r22, r8
     71a:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     71e:	18 16       	cp	r1, r24
     720:	0c f0       	brlt	.+2      	; 0x724 <hsvtorgb+0x13a>
     722:	63 c0       	rjmp	.+198    	; 0x7ea <hsvtorgb+0x200>
     724:	20 e0       	ldi	r18, 0x00	; 0
     726:	30 e0       	ldi	r19, 0x00	; 0
     728:	40 e4       	ldi	r20, 0x40	; 64
     72a:	50 e4       	ldi	r21, 0x40	; 64
     72c:	c5 01       	movw	r24, r10
     72e:	b4 01       	movw	r22, r8
     730:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     734:	88 23       	and	r24, r24
     736:	5c f0       	brlt	.+22     	; 0x74e <hsvtorgb+0x164>
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	40 e8       	ldi	r20, 0x80	; 128
     73e:	50 e4       	ldi	r21, 0x40	; 64
     740:	c5 01       	movw	r24, r10
     742:	b4 01       	movw	r22, r8
     744:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     748:	18 16       	cp	r1, r24
     74a:	0c f0       	brlt	.+2      	; 0x74e <hsvtorgb+0x164>
     74c:	5b c0       	rjmp	.+182    	; 0x804 <hsvtorgb+0x21a>
     74e:	20 e0       	ldi	r18, 0x00	; 0
     750:	30 e0       	ldi	r19, 0x00	; 0
     752:	40 e8       	ldi	r20, 0x80	; 128
     754:	50 e4       	ldi	r21, 0x40	; 64
     756:	c5 01       	movw	r24, r10
     758:	b4 01       	movw	r22, r8
     75a:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     75e:	88 23       	and	r24, r24
     760:	5c f0       	brlt	.+22     	; 0x778 <hsvtorgb+0x18e>
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	40 ea       	ldi	r20, 0xA0	; 160
     768:	50 e4       	ldi	r21, 0x40	; 64
     76a:	c5 01       	movw	r24, r10
     76c:	b4 01       	movw	r22, r8
     76e:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     772:	18 16       	cp	r1, r24
     774:	0c f0       	brlt	.+2      	; 0x778 <hsvtorgb+0x18e>
     776:	54 c0       	rjmp	.+168    	; 0x820 <hsvtorgb+0x236>
     778:	20 e0       	ldi	r18, 0x00	; 0
     77a:	30 e0       	ldi	r19, 0x00	; 0
     77c:	40 ea       	ldi	r20, 0xA0	; 160
     77e:	50 e4       	ldi	r21, 0x40	; 64
     780:	c5 01       	movw	r24, r10
     782:	b4 01       	movw	r22, r8
     784:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     788:	88 23       	and	r24, r24
     78a:	0c f4       	brge	.+2      	; 0x78e <hsvtorgb+0x1a4>
     78c:	53 c0       	rjmp	.+166    	; 0x834 <hsvtorgb+0x24a>
     78e:	20 e0       	ldi	r18, 0x00	; 0
     790:	30 e0       	ldi	r19, 0x00	; 0
     792:	40 ec       	ldi	r20, 0xC0	; 192
     794:	50 e4       	ldi	r21, 0x40	; 64
     796:	c5 01       	movw	r24, r10
     798:	b4 01       	movw	r22, r8
     79a:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     79e:	18 16       	cp	r1, r24
     7a0:	0c f4       	brge	.+2      	; 0x7a4 <hsvtorgb+0x1ba>
     7a2:	55 c0       	rjmp	.+170    	; 0x84e <hsvtorgb+0x264>
     7a4:	36 2c       	mov	r3, r6
     7a6:	27 2c       	mov	r2, r7
     7a8:	59 82       	std	Y+1, r5	; 0x01
     7aa:	4a 82       	std	Y+2, r4	; 0x02
     7ac:	61 2e       	mov	r6, r17
     7ae:	7c 80       	ldd	r7, Y+4	; 0x04
     7b0:	5b 80       	ldd	r5, Y+3	; 0x03
     7b2:	40 2e       	mov	r4, r16
     7b4:	b1 2c       	mov	r11, r1
     7b6:	a1 2c       	mov	r10, r1
     7b8:	91 2c       	mov	r9, r1
     7ba:	81 2c       	mov	r8, r1
     7bc:	54 c0       	rjmp	.+168    	; 0x866 <hsvtorgb+0x27c>
     7be:	b6 2c       	mov	r11, r6
     7c0:	a7 2c       	mov	r10, r7
     7c2:	95 2c       	mov	r9, r5
     7c4:	84 2c       	mov	r8, r4
     7c6:	61 2e       	mov	r6, r17
     7c8:	7c 80       	ldd	r7, Y+4	; 0x04
     7ca:	5b 80       	ldd	r5, Y+3	; 0x03
     7cc:	40 2e       	mov	r4, r16
     7ce:	31 2c       	mov	r3, r1
     7d0:	21 2c       	mov	r2, r1
     7d2:	19 82       	std	Y+1, r1	; 0x01
     7d4:	1a 82       	std	Y+2, r1	; 0x02
     7d6:	47 c0       	rjmp	.+142    	; 0x866 <hsvtorgb+0x27c>
     7d8:	b1 2e       	mov	r11, r17
     7da:	ac 80       	ldd	r10, Y+4	; 0x04
     7dc:	9b 80       	ldd	r9, Y+3	; 0x03
     7de:	80 2e       	mov	r8, r16
     7e0:	31 2c       	mov	r3, r1
     7e2:	21 2c       	mov	r2, r1
     7e4:	19 82       	std	Y+1, r1	; 0x01
     7e6:	1a 82       	std	Y+2, r1	; 0x02
     7e8:	3e c0       	rjmp	.+124    	; 0x866 <hsvtorgb+0x27c>
     7ea:	36 2c       	mov	r3, r6
     7ec:	27 2c       	mov	r2, r7
     7ee:	59 82       	std	Y+1, r5	; 0x01
     7f0:	4a 82       	std	Y+2, r4	; 0x02
     7f2:	b1 2e       	mov	r11, r17
     7f4:	ac 80       	ldd	r10, Y+4	; 0x04
     7f6:	9b 80       	ldd	r9, Y+3	; 0x03
     7f8:	80 2e       	mov	r8, r16
     7fa:	61 2c       	mov	r6, r1
     7fc:	71 2c       	mov	r7, r1
     7fe:	51 2c       	mov	r5, r1
     800:	41 2c       	mov	r4, r1
     802:	31 c0       	rjmp	.+98     	; 0x866 <hsvtorgb+0x27c>
     804:	31 2e       	mov	r3, r17
     806:	2c 80       	ldd	r2, Y+4	; 0x04
     808:	8b 81       	ldd	r24, Y+3	; 0x03
     80a:	89 83       	std	Y+1, r24	; 0x01
     80c:	0a 83       	std	Y+2, r16	; 0x02
     80e:	b6 2c       	mov	r11, r6
     810:	a7 2c       	mov	r10, r7
     812:	95 2c       	mov	r9, r5
     814:	84 2c       	mov	r8, r4
     816:	61 2c       	mov	r6, r1
     818:	71 2c       	mov	r7, r1
     81a:	51 2c       	mov	r5, r1
     81c:	41 2c       	mov	r4, r1
     81e:	23 c0       	rjmp	.+70     	; 0x866 <hsvtorgb+0x27c>
     820:	31 2e       	mov	r3, r17
     822:	2c 80       	ldd	r2, Y+4	; 0x04
     824:	2b 81       	ldd	r18, Y+3	; 0x03
     826:	29 83       	std	Y+1, r18	; 0x01
     828:	0a 83       	std	Y+2, r16	; 0x02
     82a:	b1 2c       	mov	r11, r1
     82c:	a1 2c       	mov	r10, r1
     82e:	91 2c       	mov	r9, r1
     830:	81 2c       	mov	r8, r1
     832:	19 c0       	rjmp	.+50     	; 0x866 <hsvtorgb+0x27c>
     834:	31 2c       	mov	r3, r1
     836:	21 2c       	mov	r2, r1
     838:	19 82       	std	Y+1, r1	; 0x01
     83a:	1a 82       	std	Y+2, r1	; 0x02
     83c:	b1 2c       	mov	r11, r1
     83e:	a1 2c       	mov	r10, r1
     840:	91 2c       	mov	r9, r1
     842:	81 2c       	mov	r8, r1
     844:	61 2c       	mov	r6, r1
     846:	71 2c       	mov	r7, r1
     848:	51 2c       	mov	r5, r1
     84a:	41 2c       	mov	r4, r1
     84c:	0c c0       	rjmp	.+24     	; 0x866 <hsvtorgb+0x27c>
     84e:	31 2c       	mov	r3, r1
     850:	21 2c       	mov	r2, r1
     852:	19 82       	std	Y+1, r1	; 0x01
     854:	1a 82       	std	Y+2, r1	; 0x02
     856:	b1 2c       	mov	r11, r1
     858:	a1 2c       	mov	r10, r1
     85a:	91 2c       	mov	r9, r1
     85c:	81 2c       	mov	r8, r1
     85e:	61 2c       	mov	r6, r1
     860:	71 2c       	mov	r7, r1
     862:	51 2c       	mov	r5, r1
     864:	41 2c       	mov	r4, r1
     866:	21 2f       	mov	r18, r17
     868:	3c 81       	ldd	r19, Y+4	; 0x04
     86a:	4b 81       	ldd	r20, Y+3	; 0x03
     86c:	50 2f       	mov	r21, r16
     86e:	c7 01       	movw	r24, r14
     870:	b6 01       	movw	r22, r12
     872:	0e 94 8b 10 	call	0x2116	; 0x2116 <__subsf3>
     876:	6b 01       	movw	r12, r22
     878:	7c 01       	movw	r14, r24
     87a:	9b 01       	movw	r18, r22
     87c:	ac 01       	movw	r20, r24
     87e:	66 2d       	mov	r22, r6
     880:	77 2d       	mov	r23, r7
     882:	85 2d       	mov	r24, r5
     884:	94 2d       	mov	r25, r4
     886:	0e 94 8c 10 	call	0x2118	; 0x2118 <__addsf3>
     88a:	20 e0       	ldi	r18, 0x00	; 0
     88c:	30 e0       	ldi	r19, 0x00	; 0
     88e:	4f e7       	ldi	r20, 0x7F	; 127
     890:	53 e4       	ldi	r21, 0x43	; 67
     892:	0e 94 08 13 	call	0x2610	; 0x2610 <__mulsf3>
     896:	0e 94 c1 11 	call	0x2382	; 0x2382 <__fixunssfsi>
     89a:	6b 83       	std	Y+3, r22	; 0x03
     89c:	a7 01       	movw	r20, r14
     89e:	96 01       	movw	r18, r12
     8a0:	6b 2d       	mov	r22, r11
     8a2:	7a 2d       	mov	r23, r10
     8a4:	89 2d       	mov	r24, r9
     8a6:	98 2d       	mov	r25, r8
     8a8:	0e 94 8c 10 	call	0x2118	; 0x2118 <__addsf3>
     8ac:	20 e0       	ldi	r18, 0x00	; 0
     8ae:	30 e0       	ldi	r19, 0x00	; 0
     8b0:	4f e7       	ldi	r20, 0x7F	; 127
     8b2:	53 e4       	ldi	r21, 0x43	; 67
     8b4:	0e 94 08 13 	call	0x2610	; 0x2610 <__mulsf3>
     8b8:	0e 94 c1 11 	call	0x2382	; 0x2382 <__fixunssfsi>
     8bc:	6c 83       	std	Y+4, r22	; 0x04
     8be:	a7 01       	movw	r20, r14
     8c0:	96 01       	movw	r18, r12
     8c2:	63 2d       	mov	r22, r3
     8c4:	72 2d       	mov	r23, r2
     8c6:	89 81       	ldd	r24, Y+1	; 0x01
     8c8:	9a 81       	ldd	r25, Y+2	; 0x02
     8ca:	0e 94 8c 10 	call	0x2118	; 0x2118 <__addsf3>
     8ce:	20 e0       	ldi	r18, 0x00	; 0
     8d0:	30 e0       	ldi	r19, 0x00	; 0
     8d2:	4f e7       	ldi	r20, 0x7F	; 127
     8d4:	53 e4       	ldi	r21, 0x43	; 67
     8d6:	0e 94 08 13 	call	0x2610	; 0x2610 <__mulsf3>
     8da:	0e 94 c1 11 	call	0x2382	; 0x2382 <__fixunssfsi>
     8de:	86 2f       	mov	r24, r22
     8e0:	6b 81       	ldd	r22, Y+3	; 0x03
     8e2:	7c 81       	ldd	r23, Y+4	; 0x04
     8e4:	24 96       	adiw	r28, 0x04	; 4
     8e6:	e2 e1       	ldi	r30, 0x12	; 18
     8e8:	0c 94 4c 14 	jmp	0x2898	; 0x2898 <__epilogue_restores__>

000008ec <rgbtohsv>:
     8ec:	a7 e1       	ldi	r26, 0x17	; 23
     8ee:	b0 e0       	ldi	r27, 0x00	; 0
     8f0:	ec e7       	ldi	r30, 0x7C	; 124
     8f2:	f4 e0       	ldi	r31, 0x04	; 4
     8f4:	0c 94 30 14 	jmp	0x2860	; 0x2860 <__prologue_saves__>
     8f8:	e7 2e       	mov	r14, r23
     8fa:	f8 2e       	mov	r15, r24
     8fc:	70 e0       	ldi	r23, 0x00	; 0
     8fe:	80 e0       	ldi	r24, 0x00	; 0
     900:	90 e0       	ldi	r25, 0x00	; 0
     902:	0e 94 ed 11 	call	0x23da	; 0x23da <__floatunsisf>
     906:	20 e0       	ldi	r18, 0x00	; 0
     908:	30 e0       	ldi	r19, 0x00	; 0
     90a:	4f e7       	ldi	r20, 0x7F	; 127
     90c:	53 e4       	ldi	r21, 0x43	; 67
     90e:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     912:	26 2e       	mov	r2, r22
     914:	37 2e       	mov	r3, r23
     916:	08 2f       	mov	r16, r24
     918:	19 2f       	mov	r17, r25
     91a:	6e 2d       	mov	r22, r14
     91c:	70 e0       	ldi	r23, 0x00	; 0
     91e:	80 e0       	ldi	r24, 0x00	; 0
     920:	90 e0       	ldi	r25, 0x00	; 0
     922:	0e 94 ed 11 	call	0x23da	; 0x23da <__floatunsisf>
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	4f e7       	ldi	r20, 0x7F	; 127
     92c:	53 e4       	ldi	r21, 0x43	; 67
     92e:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     932:	e6 2e       	mov	r14, r22
     934:	d7 2e       	mov	r13, r23
     936:	c8 2e       	mov	r12, r24
     938:	a9 2e       	mov	r10, r25
     93a:	6f 2d       	mov	r22, r15
     93c:	70 e0       	ldi	r23, 0x00	; 0
     93e:	80 e0       	ldi	r24, 0x00	; 0
     940:	90 e0       	ldi	r25, 0x00	; 0
     942:	0e 94 ed 11 	call	0x23da	; 0x23da <__floatunsisf>
     946:	20 e0       	ldi	r18, 0x00	; 0
     948:	30 e0       	ldi	r19, 0x00	; 0
     94a:	4f e7       	ldi	r20, 0x7F	; 127
     94c:	53 e4       	ldi	r21, 0x43	; 67
     94e:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     952:	46 2e       	mov	r4, r22
     954:	67 2e       	mov	r6, r23
     956:	88 2e       	mov	r8, r24
     958:	9b 87       	std	Y+11, r25	; 0x0b
     95a:	2e 2d       	mov	r18, r14
     95c:	3d 2d       	mov	r19, r13
     95e:	4c 2d       	mov	r20, r12
     960:	5a 2d       	mov	r21, r10
     962:	62 2d       	mov	r22, r2
     964:	73 2d       	mov	r23, r3
     966:	80 2f       	mov	r24, r16
     968:	91 2f       	mov	r25, r17
     96a:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     96e:	88 23       	and	r24, r24
     970:	94 f4       	brge	.+36     	; 0x996 <rgbtohsv+0xaa>
     972:	24 2d       	mov	r18, r4
     974:	36 2d       	mov	r19, r6
     976:	48 2d       	mov	r20, r8
     978:	5b 85       	ldd	r21, Y+11	; 0x0b
     97a:	6e 2d       	mov	r22, r14
     97c:	7d 2d       	mov	r23, r13
     97e:	8c 2d       	mov	r24, r12
     980:	9a 2d       	mov	r25, r10
     982:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     986:	88 23       	and	r24, r24
     988:	0c f4       	brge	.+2      	; 0x98c <rgbtohsv+0xa0>
     98a:	57 c1       	rjmp	.+686    	; 0xc3a <rgbtohsv+0x34e>
     98c:	5e 2c       	mov	r5, r14
     98e:	7d 2c       	mov	r7, r13
     990:	9c 2c       	mov	r9, r12
     992:	ba 2c       	mov	r11, r10
     994:	1d c0       	rjmp	.+58     	; 0x9d0 <rgbtohsv+0xe4>
     996:	24 2d       	mov	r18, r4
     998:	36 2d       	mov	r19, r6
     99a:	48 2d       	mov	r20, r8
     99c:	5b 85       	ldd	r21, Y+11	; 0x0b
     99e:	62 2d       	mov	r22, r2
     9a0:	73 2d       	mov	r23, r3
     9a2:	80 2f       	mov	r24, r16
     9a4:	91 2f       	mov	r25, r17
     9a6:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     9aa:	88 23       	and	r24, r24
     9ac:	0c f4       	brge	.+2      	; 0x9b0 <rgbtohsv+0xc4>
     9ae:	4a c1       	rjmp	.+660    	; 0xc44 <rgbtohsv+0x358>
     9b0:	2e 2d       	mov	r18, r14
     9b2:	3d 2d       	mov	r19, r13
     9b4:	4c 2d       	mov	r20, r12
     9b6:	5a 2d       	mov	r21, r10
     9b8:	62 2d       	mov	r22, r2
     9ba:	73 2d       	mov	r23, r3
     9bc:	80 2f       	mov	r24, r16
     9be:	91 2f       	mov	r25, r17
     9c0:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     9c4:	88 23       	and	r24, r24
     9c6:	ac f4       	brge	.+42     	; 0x9f2 <rgbtohsv+0x106>
     9c8:	52 2c       	mov	r5, r2
     9ca:	73 2c       	mov	r7, r3
     9cc:	90 2e       	mov	r9, r16
     9ce:	b1 2e       	mov	r11, r17
     9d0:	24 2d       	mov	r18, r4
     9d2:	36 2d       	mov	r19, r6
     9d4:	48 2d       	mov	r20, r8
     9d6:	5b 85       	ldd	r21, Y+11	; 0x0b
     9d8:	62 2d       	mov	r22, r2
     9da:	73 2d       	mov	r23, r3
     9dc:	80 2f       	mov	r24, r16
     9de:	91 2f       	mov	r25, r17
     9e0:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     9e4:	88 23       	and	r24, r24
     9e6:	d4 f0       	brlt	.+52     	; 0xa1c <rgbtohsv+0x130>
     9e8:	4f 82       	std	Y+7, r4	; 0x07
     9ea:	6c 86       	std	Y+12, r6	; 0x0c
     9ec:	88 8a       	std	Y+16, r8	; 0x10
     9ee:	fb 84       	ldd	r15, Y+11	; 0x0b
     9f0:	27 c0       	rjmp	.+78     	; 0xa40 <rgbtohsv+0x154>
     9f2:	52 2c       	mov	r5, r2
     9f4:	73 2c       	mov	r7, r3
     9f6:	90 2e       	mov	r9, r16
     9f8:	b1 2e       	mov	r11, r17
     9fa:	24 2d       	mov	r18, r4
     9fc:	36 2d       	mov	r19, r6
     9fe:	48 2d       	mov	r20, r8
     a00:	5b 85       	ldd	r21, Y+11	; 0x0b
     a02:	6e 2d       	mov	r22, r14
     a04:	7d 2d       	mov	r23, r13
     a06:	8c 2d       	mov	r24, r12
     a08:	9a 2d       	mov	r25, r10
     a0a:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     a0e:	88 23       	and	r24, r24
     a10:	54 f0       	brlt	.+20     	; 0xa26 <rgbtohsv+0x13a>
     a12:	4f 82       	std	Y+7, r4	; 0x07
     a14:	6c 86       	std	Y+12, r6	; 0x0c
     a16:	88 8a       	std	Y+16, r8	; 0x10
     a18:	fb 84       	ldd	r15, Y+11	; 0x0b
     a1a:	12 c0       	rjmp	.+36     	; 0xa40 <rgbtohsv+0x154>
     a1c:	2f 82       	std	Y+7, r2	; 0x07
     a1e:	3c 86       	std	Y+12, r3	; 0x0c
     a20:	08 8b       	std	Y+16, r16	; 0x10
     a22:	f1 2e       	mov	r15, r17
     a24:	0d c0       	rjmp	.+26     	; 0xa40 <rgbtohsv+0x154>
     a26:	ef 82       	std	Y+7, r14	; 0x07
     a28:	dc 86       	std	Y+12, r13	; 0x0c
     a2a:	c8 8a       	std	Y+16, r12	; 0x10
     a2c:	fa 2c       	mov	r15, r10
     a2e:	08 c0       	rjmp	.+16     	; 0xa40 <rgbtohsv+0x154>
     a30:	54 2c       	mov	r5, r4
     a32:	76 2c       	mov	r7, r6
     a34:	98 2c       	mov	r9, r8
     a36:	bb 84       	ldd	r11, Y+11	; 0x0b
     a38:	2f 82       	std	Y+7, r2	; 0x07
     a3a:	3c 86       	std	Y+12, r3	; 0x0c
     a3c:	08 8b       	std	Y+16, r16	; 0x10
     a3e:	f1 2e       	mov	r15, r17
     a40:	20 e0       	ldi	r18, 0x00	; 0
     a42:	30 e0       	ldi	r19, 0x00	; 0
     a44:	4f e7       	ldi	r20, 0x7F	; 127
     a46:	53 e4       	ldi	r21, 0x43	; 67
     a48:	65 2d       	mov	r22, r5
     a4a:	77 2d       	mov	r23, r7
     a4c:	89 2d       	mov	r24, r9
     a4e:	9b 2d       	mov	r25, r11
     a50:	0e 94 08 13 	call	0x2610	; 0x2610 <__mulsf3>
     a54:	6c 8b       	std	Y+20, r22	; 0x14
     a56:	7d 8b       	std	Y+21, r23	; 0x15
     a58:	8e 8b       	std	Y+22, r24	; 0x16
     a5a:	9f 8b       	std	Y+23, r25	; 0x17
     a5c:	2f 81       	ldd	r18, Y+7	; 0x07
     a5e:	3c 85       	ldd	r19, Y+12	; 0x0c
     a60:	48 89       	ldd	r20, Y+16	; 0x10
     a62:	5f 2d       	mov	r21, r15
     a64:	65 2d       	mov	r22, r5
     a66:	77 2d       	mov	r23, r7
     a68:	89 2d       	mov	r24, r9
     a6a:	9b 2d       	mov	r25, r11
     a6c:	0e 94 8b 10 	call	0x2116	; 0x2116 <__subsf3>
     a70:	6f 83       	std	Y+7, r22	; 0x07
     a72:	78 87       	std	Y+8, r23	; 0x08
     a74:	89 87       	std	Y+9, r24	; 0x09
     a76:	9a 87       	std	Y+10, r25	; 0x0a
     a78:	20 e0       	ldi	r18, 0x00	; 0
     a7a:	30 e0       	ldi	r19, 0x00	; 0
     a7c:	a9 01       	movw	r20, r18
     a7e:	65 2d       	mov	r22, r5
     a80:	77 2d       	mov	r23, r7
     a82:	89 2d       	mov	r24, r9
     a84:	9b 2d       	mov	r25, r11
     a86:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     a8a:	18 16       	cp	r1, r24
     a8c:	6c f5       	brge	.+90     	; 0xae8 <rgbtohsv+0x1fc>
     a8e:	25 2d       	mov	r18, r5
     a90:	37 2d       	mov	r19, r7
     a92:	49 2d       	mov	r20, r9
     a94:	5b 2d       	mov	r21, r11
     a96:	6f 81       	ldd	r22, Y+7	; 0x07
     a98:	78 85       	ldd	r23, Y+8	; 0x08
     a9a:	89 85       	ldd	r24, Y+9	; 0x09
     a9c:	9a 85       	ldd	r25, Y+10	; 0x0a
     a9e:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     aa2:	20 e0       	ldi	r18, 0x00	; 0
     aa4:	30 e0       	ldi	r19, 0x00	; 0
     aa6:	4f e7       	ldi	r20, 0x7F	; 127
     aa8:	53 e4       	ldi	r21, 0x43	; 67
     aaa:	0e 94 08 13 	call	0x2610	; 0x2610 <__mulsf3>
     aae:	68 8b       	std	Y+16, r22	; 0x10
     ab0:	79 8b       	std	Y+17, r23	; 0x11
     ab2:	8a 8b       	std	Y+18, r24	; 0x12
     ab4:	9b 8b       	std	Y+19, r25	; 0x13
     ab6:	2f e6       	ldi	r18, 0x6F	; 111
     ab8:	32 e1       	ldi	r19, 0x12	; 18
     aba:	43 e8       	ldi	r20, 0x83	; 131
     abc:	5a e3       	ldi	r21, 0x3A	; 58
     abe:	65 2d       	mov	r22, r5
     ac0:	77 2d       	mov	r23, r7
     ac2:	89 2d       	mov	r24, r9
     ac4:	9b 2d       	mov	r25, r11
     ac6:	0e 94 8b 10 	call	0x2116	; 0x2116 <__subsf3>
     aca:	6c 87       	std	Y+12, r22	; 0x0c
     acc:	7d 87       	std	Y+13, r23	; 0x0d
     ace:	8e 87       	std	Y+14, r24	; 0x0e
     ad0:	9f 87       	std	Y+15, r25	; 0x0f
     ad2:	9b 01       	movw	r18, r22
     ad4:	ac 01       	movw	r20, r24
     ad6:	62 2d       	mov	r22, r2
     ad8:	73 2d       	mov	r23, r3
     ada:	80 2f       	mov	r24, r16
     adc:	91 2f       	mov	r25, r17
     ade:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     ae2:	18 16       	cp	r1, r24
     ae4:	44 f0       	brlt	.+16     	; 0xaf6 <rgbtohsv+0x20a>
     ae6:	2c c0       	rjmp	.+88     	; 0xb40 <rgbtohsv+0x254>
     ae8:	19 82       	std	Y+1, r1	; 0x01
     aea:	1a 82       	std	Y+2, r1	; 0x02
     aec:	1b 82       	std	Y+3, r1	; 0x03
     aee:	1c 82       	std	Y+4, r1	; 0x04
     af0:	1d 82       	std	Y+5, r1	; 0x05
     af2:	1e 82       	std	Y+6, r1	; 0x06
     af4:	b9 c0       	rjmp	.+370    	; 0xc68 <rgbtohsv+0x37c>
     af6:	2f e6       	ldi	r18, 0x6F	; 111
     af8:	32 e1       	ldi	r19, 0x12	; 18
     afa:	43 e8       	ldi	r20, 0x83	; 131
     afc:	5a e3       	ldi	r21, 0x3A	; 58
     afe:	65 2d       	mov	r22, r5
     b00:	77 2d       	mov	r23, r7
     b02:	89 2d       	mov	r24, r9
     b04:	9b 2d       	mov	r25, r11
     b06:	0e 94 8c 10 	call	0x2118	; 0x2118 <__addsf3>
     b0a:	9b 01       	movw	r18, r22
     b0c:	ac 01       	movw	r20, r24
     b0e:	62 2d       	mov	r22, r2
     b10:	73 2d       	mov	r23, r3
     b12:	80 2f       	mov	r24, r16
     b14:	91 2f       	mov	r25, r17
     b16:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     b1a:	88 23       	and	r24, r24
     b1c:	8c f4       	brge	.+34     	; 0xb40 <rgbtohsv+0x254>
     b1e:	24 2d       	mov	r18, r4
     b20:	36 2d       	mov	r19, r6
     b22:	48 2d       	mov	r20, r8
     b24:	5b 85       	ldd	r21, Y+11	; 0x0b
     b26:	6e 2d       	mov	r22, r14
     b28:	7d 2d       	mov	r23, r13
     b2a:	8c 2d       	mov	r24, r12
     b2c:	9a 2d       	mov	r25, r10
     b2e:	0e 94 8b 10 	call	0x2116	; 0x2116 <__subsf3>
     b32:	2f 81       	ldd	r18, Y+7	; 0x07
     b34:	38 85       	ldd	r19, Y+8	; 0x08
     b36:	49 85       	ldd	r20, Y+9	; 0x09
     b38:	5a 85       	ldd	r21, Y+10	; 0x0a
     b3a:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     b3e:	4d c0       	rjmp	.+154    	; 0xbda <rgbtohsv+0x2ee>
     b40:	2c 85       	ldd	r18, Y+12	; 0x0c
     b42:	3d 85       	ldd	r19, Y+13	; 0x0d
     b44:	4e 85       	ldd	r20, Y+14	; 0x0e
     b46:	5f 85       	ldd	r21, Y+15	; 0x0f
     b48:	6e 2d       	mov	r22, r14
     b4a:	7d 2d       	mov	r23, r13
     b4c:	8c 2d       	mov	r24, r12
     b4e:	9a 2d       	mov	r25, r10
     b50:	0e 94 fd 12 	call	0x25fa	; 0x25fa <__gesf2>
     b54:	18 16       	cp	r1, r24
     b56:	5c f5       	brge	.+86     	; 0xbae <rgbtohsv+0x2c2>
     b58:	2f e6       	ldi	r18, 0x6F	; 111
     b5a:	32 e1       	ldi	r19, 0x12	; 18
     b5c:	43 e8       	ldi	r20, 0x83	; 131
     b5e:	5a e3       	ldi	r21, 0x3A	; 58
     b60:	65 2d       	mov	r22, r5
     b62:	77 2d       	mov	r23, r7
     b64:	89 2d       	mov	r24, r9
     b66:	9b 2d       	mov	r25, r11
     b68:	0e 94 8c 10 	call	0x2118	; 0x2118 <__addsf3>
     b6c:	9b 01       	movw	r18, r22
     b6e:	ac 01       	movw	r20, r24
     b70:	6e 2d       	mov	r22, r14
     b72:	7d 2d       	mov	r23, r13
     b74:	8c 2d       	mov	r24, r12
     b76:	9a 2d       	mov	r25, r10
     b78:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     b7c:	88 23       	and	r24, r24
     b7e:	bc f4       	brge	.+46     	; 0xbae <rgbtohsv+0x2c2>
     b80:	22 2d       	mov	r18, r2
     b82:	33 2d       	mov	r19, r3
     b84:	40 2f       	mov	r20, r16
     b86:	51 2f       	mov	r21, r17
     b88:	64 2d       	mov	r22, r4
     b8a:	76 2d       	mov	r23, r6
     b8c:	88 2d       	mov	r24, r8
     b8e:	9b 85       	ldd	r25, Y+11	; 0x0b
     b90:	0e 94 8b 10 	call	0x2116	; 0x2116 <__subsf3>
     b94:	2f 81       	ldd	r18, Y+7	; 0x07
     b96:	38 85       	ldd	r19, Y+8	; 0x08
     b98:	49 85       	ldd	r20, Y+9	; 0x09
     b9a:	5a 85       	ldd	r21, Y+10	; 0x0a
     b9c:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     ba0:	20 e0       	ldi	r18, 0x00	; 0
     ba2:	30 e0       	ldi	r19, 0x00	; 0
     ba4:	40 e0       	ldi	r20, 0x00	; 0
     ba6:	50 e4       	ldi	r21, 0x40	; 64
     ba8:	0e 94 8c 10 	call	0x2118	; 0x2118 <__addsf3>
     bac:	16 c0       	rjmp	.+44     	; 0xbda <rgbtohsv+0x2ee>
     bae:	2e 2d       	mov	r18, r14
     bb0:	3d 2d       	mov	r19, r13
     bb2:	4c 2d       	mov	r20, r12
     bb4:	5a 2d       	mov	r21, r10
     bb6:	62 2d       	mov	r22, r2
     bb8:	73 2d       	mov	r23, r3
     bba:	80 2f       	mov	r24, r16
     bbc:	91 2f       	mov	r25, r17
     bbe:	0e 94 8b 10 	call	0x2116	; 0x2116 <__subsf3>
     bc2:	2f 81       	ldd	r18, Y+7	; 0x07
     bc4:	38 85       	ldd	r19, Y+8	; 0x08
     bc6:	49 85       	ldd	r20, Y+9	; 0x09
     bc8:	5a 85       	ldd	r21, Y+10	; 0x0a
     bca:	0e 94 59 11 	call	0x22b2	; 0x22b2 <__divsf3>
     bce:	20 e0       	ldi	r18, 0x00	; 0
     bd0:	30 e0       	ldi	r19, 0x00	; 0
     bd2:	40 e8       	ldi	r20, 0x80	; 128
     bd4:	50 e4       	ldi	r21, 0x40	; 64
     bd6:	0e 94 8c 10 	call	0x2118	; 0x2118 <__addsf3>
     bda:	20 e0       	ldi	r18, 0x00	; 0
     bdc:	30 e0       	ldi	r19, 0x00	; 0
     bde:	40 e7       	ldi	r20, 0x70	; 112
     be0:	52 e4       	ldi	r21, 0x42	; 66
     be2:	0e 94 08 13 	call	0x2610	; 0x2610 <__mulsf3>
     be6:	6b 01       	movw	r12, r22
     be8:	7c 01       	movw	r14, r24
     bea:	20 e0       	ldi	r18, 0x00	; 0
     bec:	30 e0       	ldi	r19, 0x00	; 0
     bee:	a9 01       	movw	r20, r18
     bf0:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     bf4:	88 23       	and	r24, r24
     bf6:	54 f4       	brge	.+20     	; 0xc0c <rgbtohsv+0x320>
     bf8:	20 e0       	ldi	r18, 0x00	; 0
     bfa:	30 e0       	ldi	r19, 0x00	; 0
     bfc:	44 eb       	ldi	r20, 0xB4	; 180
     bfe:	53 e4       	ldi	r21, 0x43	; 67
     c00:	c7 01       	movw	r24, r14
     c02:	b6 01       	movw	r22, r12
     c04:	0e 94 8c 10 	call	0x2118	; 0x2118 <__addsf3>
     c08:	6b 01       	movw	r12, r22
     c0a:	7c 01       	movw	r14, r24
     c0c:	c7 01       	movw	r24, r14
     c0e:	b6 01       	movw	r22, r12
     c10:	0e 94 c1 11 	call	0x2382	; 0x2382 <__fixunssfsi>
     c14:	69 83       	std	Y+1, r22	; 0x01
     c16:	7a 83       	std	Y+2, r23	; 0x02
     c18:	8b 83       	std	Y+3, r24	; 0x03
     c1a:	9c 83       	std	Y+4, r25	; 0x04
     c1c:	68 89       	ldd	r22, Y+16	; 0x10
     c1e:	79 89       	ldd	r23, Y+17	; 0x11
     c20:	8a 89       	ldd	r24, Y+18	; 0x12
     c22:	9b 89       	ldd	r25, Y+19	; 0x13
     c24:	0e 94 c1 11 	call	0x2382	; 0x2382 <__fixunssfsi>
     c28:	6d 83       	std	Y+5, r22	; 0x05
     c2a:	6c 89       	ldd	r22, Y+20	; 0x14
     c2c:	7d 89       	ldd	r23, Y+21	; 0x15
     c2e:	8e 89       	ldd	r24, Y+22	; 0x16
     c30:	9f 89       	ldd	r25, Y+23	; 0x17
     c32:	0e 94 c1 11 	call	0x2382	; 0x2382 <__fixunssfsi>
     c36:	6e 83       	std	Y+6, r22	; 0x06
     c38:	17 c0       	rjmp	.+46     	; 0xc68 <rgbtohsv+0x37c>
     c3a:	54 2c       	mov	r5, r4
     c3c:	76 2c       	mov	r7, r6
     c3e:	98 2c       	mov	r9, r8
     c40:	bb 84       	ldd	r11, Y+11	; 0x0b
     c42:	c6 ce       	rjmp	.-628    	; 0x9d0 <rgbtohsv+0xe4>
     c44:	2e 2d       	mov	r18, r14
     c46:	3d 2d       	mov	r19, r13
     c48:	4c 2d       	mov	r20, r12
     c4a:	5a 2d       	mov	r21, r10
     c4c:	62 2d       	mov	r22, r2
     c4e:	73 2d       	mov	r23, r3
     c50:	80 2f       	mov	r24, r16
     c52:	91 2f       	mov	r25, r17
     c54:	0e 94 52 11 	call	0x22a4	; 0x22a4 <__cmpsf2>
     c58:	88 23       	and	r24, r24
     c5a:	0c f4       	brge	.+2      	; 0xc5e <rgbtohsv+0x372>
     c5c:	e9 ce       	rjmp	.-558    	; 0xa30 <rgbtohsv+0x144>
     c5e:	54 2c       	mov	r5, r4
     c60:	76 2c       	mov	r7, r6
     c62:	98 2c       	mov	r9, r8
     c64:	bb 84       	ldd	r11, Y+11	; 0x0b
     c66:	c9 ce       	rjmp	.-622    	; 0x9fa <rgbtohsv+0x10e>
     c68:	29 81       	ldd	r18, Y+1	; 0x01
     c6a:	3a 81       	ldd	r19, Y+2	; 0x02
     c6c:	4b 81       	ldd	r20, Y+3	; 0x03
     c6e:	5c 81       	ldd	r21, Y+4	; 0x04
     c70:	6d 81       	ldd	r22, Y+5	; 0x05
     c72:	7e 81       	ldd	r23, Y+6	; 0x06
     c74:	80 e0       	ldi	r24, 0x00	; 0
     c76:	90 e0       	ldi	r25, 0x00	; 0
     c78:	67 96       	adiw	r28, 0x17	; 23
     c7a:	e2 e1       	ldi	r30, 0x12	; 18
     c7c:	0c 94 4c 14 	jmp	0x2898	; 0x2898 <__epilogue_restores__>

00000c80 <TFT_SetupPorts>:
     c80:	8f ef       	ldi	r24, 0xFF	; 255
     c82:	84 b9       	out	0x04, r24	; 4
     c84:	28 9a       	sbi	0x05, 0	; 5
     c86:	08 95       	ret

00000c88 <TFT_msDelay>:
     c88:	18 16       	cp	r1, r24
     c8a:	19 06       	cpc	r1, r25
     c8c:	6c f4       	brge	.+26     	; 0xca8 <TFT_msDelay+0x20>
     c8e:	20 e0       	ldi	r18, 0x00	; 0
     c90:	30 e0       	ldi	r19, 0x00	; 0
     c92:	ef e9       	ldi	r30, 0x9F	; 159
     c94:	ff e0       	ldi	r31, 0x0F	; 15
     c96:	31 97       	sbiw	r30, 0x01	; 1
     c98:	f1 f7       	brne	.-4      	; 0xc96 <TFT_msDelay+0xe>
     c9a:	00 c0       	rjmp	.+0      	; 0xc9c <TFT_msDelay+0x14>
     c9c:	00 00       	nop
     c9e:	2f 5f       	subi	r18, 0xFF	; 255
     ca0:	3f 4f       	sbci	r19, 0xFF	; 255
     ca2:	82 17       	cp	r24, r18
     ca4:	93 07       	cpc	r25, r19
     ca6:	a9 f7       	brne	.-22     	; 0xc92 <TFT_msDelay+0xa>
     ca8:	08 95       	ret

00000caa <intsqrt>:
     caa:	4f 92       	push	r4
     cac:	5f 92       	push	r5
     cae:	6f 92       	push	r6
     cb0:	7f 92       	push	r7
     cb2:	8f 92       	push	r8
     cb4:	9f 92       	push	r9
     cb6:	af 92       	push	r10
     cb8:	bf 92       	push	r11
     cba:	cf 92       	push	r12
     cbc:	df 92       	push	r13
     cbe:	ef 92       	push	r14
     cc0:	ff 92       	push	r15
     cc2:	2b 01       	movw	r4, r22
     cc4:	3c 01       	movw	r6, r24
     cc6:	67 2b       	or	r22, r23
     cc8:	68 2b       	or	r22, r24
     cca:	69 2b       	or	r22, r25
     ccc:	51 f1       	breq	.+84     	; 0xd22 <intsqrt+0x78>
     cce:	e0 e1       	ldi	r30, 0x10	; 16
     cd0:	f0 e0       	ldi	r31, 0x00	; 0
     cd2:	c1 2c       	mov	r12, r1
     cd4:	d1 2c       	mov	r13, r1
     cd6:	76 01       	movw	r14, r12
     cd8:	81 2c       	mov	r8, r1
     cda:	91 2c       	mov	r9, r1
     cdc:	54 01       	movw	r10, r8
     cde:	68 94       	set
     ce0:	97 f8       	bld	r9, 7
     ce2:	c8 28       	or	r12, r8
     ce4:	d9 28       	or	r13, r9
     ce6:	ea 28       	or	r14, r10
     ce8:	fb 28       	or	r15, r11
     cea:	a7 01       	movw	r20, r14
     cec:	96 01       	movw	r18, r12
     cee:	c7 01       	movw	r24, r14
     cf0:	b6 01       	movw	r22, r12
     cf2:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
     cf6:	46 16       	cp	r4, r22
     cf8:	57 06       	cpc	r5, r23
     cfa:	68 06       	cpc	r6, r24
     cfc:	79 06       	cpc	r7, r25
     cfe:	50 f4       	brcc	.+20     	; 0xd14 <intsqrt+0x6a>
     d00:	d5 01       	movw	r26, r10
     d02:	c4 01       	movw	r24, r8
     d04:	80 95       	com	r24
     d06:	90 95       	com	r25
     d08:	a0 95       	com	r26
     d0a:	b0 95       	com	r27
     d0c:	c8 22       	and	r12, r24
     d0e:	d9 22       	and	r13, r25
     d10:	ea 22       	and	r14, r26
     d12:	fb 22       	and	r15, r27
     d14:	b6 94       	lsr	r11
     d16:	a7 94       	ror	r10
     d18:	97 94       	ror	r9
     d1a:	87 94       	ror	r8
     d1c:	31 97       	sbiw	r30, 0x01	; 1
     d1e:	09 f7       	brne	.-62     	; 0xce2 <intsqrt+0x38>
     d20:	03 c0       	rjmp	.+6      	; 0xd28 <intsqrt+0x7e>
     d22:	c1 2c       	mov	r12, r1
     d24:	d1 2c       	mov	r13, r1
     d26:	76 01       	movw	r14, r12
     d28:	c7 01       	movw	r24, r14
     d2a:	b6 01       	movw	r22, r12
     d2c:	ff 90       	pop	r15
     d2e:	ef 90       	pop	r14
     d30:	df 90       	pop	r13
     d32:	cf 90       	pop	r12
     d34:	bf 90       	pop	r11
     d36:	af 90       	pop	r10
     d38:	9f 90       	pop	r9
     d3a:	8f 90       	pop	r8
     d3c:	7f 90       	pop	r7
     d3e:	6f 90       	pop	r6
     d40:	5f 90       	pop	r5
     d42:	4f 90       	pop	r4
     d44:	08 95       	ret

00000d46 <TFT_Xfer>:
     d46:	8e bd       	out	0x2e, r24	; 46
     d48:	0d b4       	in	r0, 0x2d	; 45
     d4a:	07 fe       	sbrs	r0, 7
     d4c:	fd cf       	rjmp	.-6      	; 0xd48 <TFT_Xfer+0x2>
     d4e:	8e b5       	in	r24, 0x2e	; 46
     d50:	08 95       	ret

00000d52 <TFT_WriteCmd>:
     d52:	2b 98       	cbi	0x05, 3	; 5
     d54:	f8 df       	rcall	.-16     	; 0xd46 <TFT_Xfer>
     d56:	2b 9a       	sbi	0x05, 3	; 5
     d58:	08 95       	ret

00000d5a <TFT_WriteWord>:
     d5a:	cf 93       	push	r28
     d5c:	c8 2f       	mov	r28, r24
     d5e:	89 2f       	mov	r24, r25
     d60:	f2 df       	rcall	.-28     	; 0xd46 <TFT_Xfer>
     d62:	8c 2f       	mov	r24, r28
     d64:	f0 df       	rcall	.-32     	; 0xd46 <TFT_Xfer>
     d66:	cf 91       	pop	r28
     d68:	08 95       	ret

00000d6a <TFT_Write565>:
     d6a:	0f 93       	push	r16
     d6c:	1f 93       	push	r17
     d6e:	cf 93       	push	r28
     d70:	df 93       	push	r29
     d72:	08 2f       	mov	r16, r24
     d74:	19 2f       	mov	r17, r25
     d76:	eb 01       	movw	r28, r22
     d78:	8c e2       	ldi	r24, 0x2C	; 44
     d7a:	eb df       	rcall	.-42     	; 0xd52 <TFT_WriteCmd>
     d7c:	20 97       	sbiw	r28, 0x00	; 0
     d7e:	59 f0       	breq	.+22     	; 0xd96 <TFT_Write565+0x2c>
     d80:	91 2f       	mov	r25, r17
     d82:	9e bd       	out	0x2e, r25	; 46
     d84:	0d b4       	in	r0, 0x2d	; 45
     d86:	07 fe       	sbrs	r0, 7
     d88:	fd cf       	rjmp	.-6      	; 0xd84 <TFT_Write565+0x1a>
     d8a:	0e bd       	out	0x2e, r16	; 46
     d8c:	0d b4       	in	r0, 0x2d	; 45
     d8e:	07 fe       	sbrs	r0, 7
     d90:	fd cf       	rjmp	.-6      	; 0xd8c <TFT_Write565+0x22>
     d92:	21 97       	sbiw	r28, 0x01	; 1
     d94:	b1 f7       	brne	.-20     	; 0xd82 <TFT_Write565+0x18>
     d96:	df 91       	pop	r29
     d98:	cf 91       	pop	r28
     d9a:	1f 91       	pop	r17
     d9c:	0f 91       	pop	r16
     d9e:	08 95       	ret

00000da0 <TFT_HardwareReset>:
     da0:	2a 98       	cbi	0x05, 2	; 5
     da2:	81 e0       	ldi	r24, 0x01	; 1
     da4:	90 e0       	ldi	r25, 0x00	; 0
     da6:	70 df       	rcall	.-288    	; 0xc88 <TFT_msDelay>
     da8:	2a 9a       	sbi	0x05, 2	; 5
     daa:	86 e9       	ldi	r24, 0x96	; 150
     dac:	90 e0       	ldi	r25, 0x00	; 0
     dae:	6c cf       	rjmp	.-296    	; 0xc88 <TFT_msDelay>
     db0:	08 95       	ret

00000db2 <TFT_InitDisplay>:
     db2:	f6 df       	rcall	.-20     	; 0xda0 <TFT_HardwareReset>
     db4:	81 e1       	ldi	r24, 0x11	; 17
     db6:	cd df       	rcall	.-102    	; 0xd52 <TFT_WriteCmd>
     db8:	86 e9       	ldi	r24, 0x96	; 150
     dba:	90 e0       	ldi	r25, 0x00	; 0
     dbc:	65 df       	rcall	.-310    	; 0xc88 <TFT_msDelay>
     dbe:	8a e3       	ldi	r24, 0x3A	; 58
     dc0:	c8 df       	rcall	.-112    	; 0xd52 <TFT_WriteCmd>
     dc2:	85 e0       	ldi	r24, 0x05	; 5
     dc4:	c0 df       	rcall	.-128    	; 0xd46 <TFT_Xfer>
     dc6:	89 e2       	ldi	r24, 0x29	; 41
     dc8:	c4 cf       	rjmp	.-120    	; 0xd52 <TFT_WriteCmd>
     dca:	08 95       	ret

00000dcc <TFT_SetAddrWindow>:
     dcc:	0f 93       	push	r16
     dce:	1f 93       	push	r17
     dd0:	cf 93       	push	r28
     dd2:	df 93       	push	r29
     dd4:	08 2f       	mov	r16, r24
     dd6:	d6 2f       	mov	r29, r22
     dd8:	14 2f       	mov	r17, r20
     dda:	c2 2f       	mov	r28, r18
     ddc:	8a e2       	ldi	r24, 0x2A	; 42
     dde:	b9 df       	rcall	.-142    	; 0xd52 <TFT_WriteCmd>
     de0:	80 2f       	mov	r24, r16
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	ba df       	rcall	.-140    	; 0xd5a <TFT_WriteWord>
     de6:	81 2f       	mov	r24, r17
     de8:	90 e0       	ldi	r25, 0x00	; 0
     dea:	b7 df       	rcall	.-146    	; 0xd5a <TFT_WriteWord>
     dec:	8b e2       	ldi	r24, 0x2B	; 43
     dee:	b1 df       	rcall	.-158    	; 0xd52 <TFT_WriteCmd>
     df0:	8d 2f       	mov	r24, r29
     df2:	90 e0       	ldi	r25, 0x00	; 0
     df4:	b2 df       	rcall	.-156    	; 0xd5a <TFT_WriteWord>
     df6:	8c 2f       	mov	r24, r28
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	af df       	rcall	.-162    	; 0xd5a <TFT_WriteWord>
     dfc:	df 91       	pop	r29
     dfe:	cf 91       	pop	r28
     e00:	1f 91       	pop	r17
     e02:	0f 91       	pop	r16
     e04:	08 95       	ret

00000e06 <TFT_ClearScreen>:
     e06:	2f e9       	ldi	r18, 0x9F	; 159
     e08:	4f e7       	ldi	r20, 0x7F	; 127
     e0a:	60 e0       	ldi	r22, 0x00	; 0
     e0c:	80 e0       	ldi	r24, 0x00	; 0
     e0e:	de df       	rcall	.-68     	; 0xdcc <TFT_SetAddrWindow>
     e10:	8c e2       	ldi	r24, 0x2C	; 44
     e12:	9f df       	rcall	.-194    	; 0xd52 <TFT_WriteCmd>
     e14:	80 e0       	ldi	r24, 0x00	; 0
     e16:	90 ea       	ldi	r25, 0xA0	; 160
     e18:	1e bc       	out	0x2e, r1	; 46
     e1a:	0d b4       	in	r0, 0x2d	; 45
     e1c:	07 fe       	sbrs	r0, 7
     e1e:	fd cf       	rjmp	.-6      	; 0xe1a <TFT_ClearScreen+0x14>
     e20:	01 97       	sbiw	r24, 0x01	; 1
     e22:	d1 f7       	brne	.-12     	; 0xe18 <TFT_ClearScreen+0x12>
     e24:	08 95       	ret

00000e26 <TFT_ColorToInt>:
     e26:	0f 93       	push	r16
     e28:	1f 93       	push	r17
     e2a:	cf 93       	push	r28
     e2c:	df 93       	push	r29
     e2e:	16 2f       	mov	r17, r22
     e30:	08 2f       	mov	r16, r24
     e32:	2f e3       	ldi	r18, 0x3F	; 63
     e34:	72 9f       	mul	r23, r18
     e36:	c0 01       	movw	r24, r0
     e38:	11 24       	eor	r1, r1
     e3a:	ef ef       	ldi	r30, 0xFF	; 255
     e3c:	f0 e0       	ldi	r31, 0x00	; 0
     e3e:	bf 01       	movw	r22, r30
     e40:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     e44:	eb 01       	movw	r28, r22
     e46:	cc 0f       	add	r28, r28
     e48:	dd 1f       	adc	r29, r29
     e4a:	c2 95       	swap	r28
     e4c:	d2 95       	swap	r29
     e4e:	d0 7f       	andi	r29, 0xF0	; 240
     e50:	dc 27       	eor	r29, r28
     e52:	c0 7f       	andi	r28, 0xF0	; 240
     e54:	dc 27       	eor	r29, r28
     e56:	4f e1       	ldi	r20, 0x1F	; 31
     e58:	41 9f       	mul	r20, r17
     e5a:	c0 01       	movw	r24, r0
     e5c:	11 24       	eor	r1, r1
     e5e:	bf 01       	movw	r22, r30
     e60:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     e64:	36 2f       	mov	r19, r22
     e66:	33 0f       	add	r19, r19
     e68:	33 0f       	add	r19, r19
     e6a:	33 0f       	add	r19, r19
     e6c:	20 e0       	ldi	r18, 0x00	; 0
     e6e:	2c 2b       	or	r18, r28
     e70:	3d 2b       	or	r19, r29
     e72:	40 9f       	mul	r20, r16
     e74:	c0 01       	movw	r24, r0
     e76:	11 24       	eor	r1, r1
     e78:	bf 01       	movw	r22, r30
     e7a:	0e 94 eb 13 	call	0x27d6	; 0x27d6 <__divmodhi4>
     e7e:	c9 01       	movw	r24, r18
     e80:	86 2b       	or	r24, r22
     e82:	97 2b       	or	r25, r23
     e84:	df 91       	pop	r29
     e86:	cf 91       	pop	r28
     e88:	1f 91       	pop	r17
     e8a:	0f 91       	pop	r16
     e8c:	08 95       	ret

00000e8e <TFT_DrawPixel>:
     e8e:	cf 93       	push	r28
     e90:	df 93       	push	r29
     e92:	ea 01       	movw	r28, r20
     e94:	26 2f       	mov	r18, r22
     e96:	48 2f       	mov	r20, r24
     e98:	99 df       	rcall	.-206    	; 0xdcc <TFT_SetAddrWindow>
     e9a:	61 e0       	ldi	r22, 0x01	; 1
     e9c:	70 e0       	ldi	r23, 0x00	; 0
     e9e:	ce 01       	movw	r24, r28
     ea0:	64 df       	rcall	.-312    	; 0xd6a <TFT_Write565>
     ea2:	df 91       	pop	r29
     ea4:	cf 91       	pop	r28
     ea6:	08 95       	ret

00000ea8 <TFT_HLine>:
     ea8:	0f 93       	push	r16
     eaa:	1f 93       	push	r17
     eac:	cf 93       	push	r28
     eae:	df 93       	push	r29
     eb0:	d8 2f       	mov	r29, r24
     eb2:	c6 2f       	mov	r28, r22
     eb4:	64 2f       	mov	r22, r20
     eb6:	89 01       	movw	r16, r18
     eb8:	24 2f       	mov	r18, r20
     eba:	4c 2f       	mov	r20, r28
     ebc:	87 df       	rcall	.-242    	; 0xdcc <TFT_SetAddrWindow>
     ebe:	cd 1b       	sub	r28, r29
     ec0:	cf 5f       	subi	r28, 0xFF	; 255
     ec2:	6c 2f       	mov	r22, r28
     ec4:	70 e0       	ldi	r23, 0x00	; 0
     ec6:	c8 01       	movw	r24, r16
     ec8:	50 df       	rcall	.-352    	; 0xd6a <TFT_Write565>
     eca:	df 91       	pop	r29
     ecc:	cf 91       	pop	r28
     ece:	1f 91       	pop	r17
     ed0:	0f 91       	pop	r16
     ed2:	08 95       	ret

00000ed4 <TFT_VLine>:
     ed4:	0f 93       	push	r16
     ed6:	1f 93       	push	r17
     ed8:	cf 93       	push	r28
     eda:	df 93       	push	r29
     edc:	d6 2f       	mov	r29, r22
     ede:	c4 2f       	mov	r28, r20
     ee0:	89 01       	movw	r16, r18
     ee2:	24 2f       	mov	r18, r20
     ee4:	48 2f       	mov	r20, r24
     ee6:	72 df       	rcall	.-284    	; 0xdcc <TFT_SetAddrWindow>
     ee8:	cd 1b       	sub	r28, r29
     eea:	cf 5f       	subi	r28, 0xFF	; 255
     eec:	6c 2f       	mov	r22, r28
     eee:	70 e0       	ldi	r23, 0x00	; 0
     ef0:	c8 01       	movw	r24, r16
     ef2:	3b df       	rcall	.-394    	; 0xd6a <TFT_Write565>
     ef4:	df 91       	pop	r29
     ef6:	cf 91       	pop	r28
     ef8:	1f 91       	pop	r17
     efa:	0f 91       	pop	r16
     efc:	08 95       	ret

00000efe <TFT_FillCircle>:
     efe:	4f 92       	push	r4
     f00:	5f 92       	push	r5
     f02:	6f 92       	push	r6
     f04:	7f 92       	push	r7
     f06:	9f 92       	push	r9
     f08:	af 92       	push	r10
     f0a:	bf 92       	push	r11
     f0c:	cf 92       	push	r12
     f0e:	df 92       	push	r13
     f10:	ef 92       	push	r14
     f12:	ff 92       	push	r15
     f14:	0f 93       	push	r16
     f16:	1f 93       	push	r17
     f18:	cf 93       	push	r28
     f1a:	df 93       	push	r29
     f1c:	e6 2e       	mov	r14, r22
     f1e:	69 01       	movw	r12, r18
     f20:	a4 2e       	mov	r10, r20
     f22:	b1 2c       	mov	r11, r1
     f24:	aa 9c       	mul	r10, r10
     f26:	20 01       	movw	r4, r0
     f28:	ab 9c       	mul	r10, r11
     f2a:	50 0c       	add	r5, r0
     f2c:	50 0c       	add	r5, r0
     f2e:	11 24       	eor	r1, r1
     f30:	05 2c       	mov	r0, r5
     f32:	00 0c       	add	r0, r0
     f34:	66 08       	sbc	r6, r6
     f36:	77 08       	sbc	r7, r7
     f38:	f8 2e       	mov	r15, r24
     f3a:	d8 2f       	mov	r29, r24
     f3c:	00 e0       	ldi	r16, 0x00	; 0
     f3e:	10 e0       	ldi	r17, 0x00	; 0
     f40:	00 9f       	mul	r16, r16
     f42:	c0 01       	movw	r24, r0
     f44:	01 9f       	mul	r16, r17
     f46:	90 0d       	add	r25, r0
     f48:	90 0d       	add	r25, r0
     f4a:	11 24       	eor	r1, r1
     f4c:	09 2e       	mov	r0, r25
     f4e:	00 0c       	add	r0, r0
     f50:	aa 0b       	sbc	r26, r26
     f52:	bb 0b       	sbc	r27, r27
     f54:	a3 01       	movw	r20, r6
     f56:	92 01       	movw	r18, r4
     f58:	28 1b       	sub	r18, r24
     f5a:	39 0b       	sbc	r19, r25
     f5c:	4a 0b       	sbc	r20, r26
     f5e:	5b 0b       	sbc	r21, r27
     f60:	ca 01       	movw	r24, r20
     f62:	b9 01       	movw	r22, r18
     f64:	a2 de       	rcall	.-700    	; 0xcaa <intsqrt>
     f66:	9e 2c       	mov	r9, r14
     f68:	96 1a       	sub	r9, r22
     f6a:	c6 2f       	mov	r28, r22
     f6c:	ce 0d       	add	r28, r14
     f6e:	96 01       	movw	r18, r12
     f70:	4c 2f       	mov	r20, r28
     f72:	69 2d       	mov	r22, r9
     f74:	8d 2f       	mov	r24, r29
     f76:	ae df       	rcall	.-164    	; 0xed4 <TFT_VLine>
     f78:	96 01       	movw	r18, r12
     f7a:	4c 2f       	mov	r20, r28
     f7c:	69 2d       	mov	r22, r9
     f7e:	8f 2d       	mov	r24, r15
     f80:	a9 df       	rcall	.-174    	; 0xed4 <TFT_VLine>
     f82:	0f 5f       	subi	r16, 0xFF	; 255
     f84:	1f 4f       	sbci	r17, 0xFF	; 255
     f86:	df 5f       	subi	r29, 0xFF	; 255
     f88:	fa 94       	dec	r15
     f8a:	a0 16       	cp	r10, r16
     f8c:	b1 06       	cpc	r11, r17
     f8e:	c4 f6       	brge	.-80     	; 0xf40 <TFT_FillCircle+0x42>
     f90:	df 91       	pop	r29
     f92:	cf 91       	pop	r28
     f94:	1f 91       	pop	r17
     f96:	0f 91       	pop	r16
     f98:	ff 90       	pop	r15
     f9a:	ef 90       	pop	r14
     f9c:	df 90       	pop	r13
     f9e:	cf 90       	pop	r12
     fa0:	bf 90       	pop	r11
     fa2:	af 90       	pop	r10
     fa4:	9f 90       	pop	r9
     fa6:	7f 90       	pop	r7
     fa8:	6f 90       	pop	r6
     faa:	5f 90       	pop	r5
     fac:	4f 90       	pop	r4
     fae:	08 95       	ret

00000fb0 <TFT_Ellipse>:
     fb0:	a8 e1       	ldi	r26, 0x18	; 24
     fb2:	b0 e0       	ldi	r27, 0x00	; 0
     fb4:	ee ed       	ldi	r30, 0xDE	; 222
     fb6:	f7 e0       	ldi	r31, 0x07	; 7
     fb8:	0c 94 30 14 	jmp	0x2860	; 0x2860 <__prologue_saves__>
     fbc:	88 8f       	std	Y+24, r24	; 0x18
     fbe:	6f 8b       	std	Y+23, r22	; 0x17
     fc0:	1a 83       	std	Y+2, r17	; 0x02
     fc2:	09 83       	std	Y+1, r16	; 0x01
     fc4:	ca 01       	movw	r24, r20
     fc6:	99 23       	and	r25, r25
     fc8:	0c f4       	brge	.+2      	; 0xfcc <TFT_Ellipse+0x1c>
     fca:	01 96       	adiw	r24, 0x01	; 1
     fcc:	ac 01       	movw	r20, r24
     fce:	55 95       	asr	r21
     fd0:	47 95       	ror	r20
     fd2:	5e 83       	std	Y+6, r21	; 0x06
     fd4:	4d 83       	std	Y+5, r20	; 0x05
     fd6:	c9 01       	movw	r24, r18
     fd8:	99 23       	and	r25, r25
     fda:	0c f4       	brge	.+2      	; 0xfde <TFT_Ellipse+0x2e>
     fdc:	01 96       	adiw	r24, 0x01	; 1
     fde:	dc 01       	movw	r26, r24
     fe0:	b5 95       	asr	r27
     fe2:	a7 95       	ror	r26
     fe4:	ba 8b       	std	Y+18, r27	; 0x12
     fe6:	a9 8b       	std	Y+17, r26	; 0x11
     fe8:	2d 81       	ldd	r18, Y+5	; 0x05
     fea:	3e 81       	ldd	r19, Y+6	; 0x06
     fec:	03 2e       	mov	r0, r19
     fee:	00 0c       	add	r0, r0
     ff0:	44 0b       	sbc	r20, r20
     ff2:	55 0b       	sbc	r21, r21
     ff4:	2b 8b       	std	Y+19, r18	; 0x13
     ff6:	3c 8b       	std	Y+20, r19	; 0x14
     ff8:	4d 8b       	std	Y+21, r20	; 0x15
     ffa:	5e 8b       	std	Y+22, r21	; 0x16
     ffc:	ca 01       	movw	r24, r20
     ffe:	b9 01       	movw	r22, r18
    1000:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    1004:	6b 01       	movw	r12, r22
    1006:	7c 01       	movw	r14, r24
    1008:	dc 01       	movw	r26, r24
    100a:	cb 01       	movw	r24, r22
    100c:	88 0f       	add	r24, r24
    100e:	99 1f       	adc	r25, r25
    1010:	aa 1f       	adc	r26, r26
    1012:	bb 1f       	adc	r27, r27
    1014:	89 87       	std	Y+9, r24	; 0x09
    1016:	9a 87       	std	Y+10, r25	; 0x0a
    1018:	ab 87       	std	Y+11, r26	; 0x0b
    101a:	bc 87       	std	Y+12, r27	; 0x0c
    101c:	a9 89       	ldd	r26, Y+17	; 0x11
    101e:	ba 89       	ldd	r27, Y+18	; 0x12
    1020:	4d 01       	movw	r8, r26
    1022:	bb 0f       	add	r27, r27
    1024:	aa 08       	sbc	r10, r10
    1026:	bb 08       	sbc	r11, r11
    1028:	a5 01       	movw	r20, r10
    102a:	94 01       	movw	r18, r8
    102c:	c5 01       	movw	r24, r10
    102e:	b4 01       	movw	r22, r8
    1030:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    1034:	9b 01       	movw	r18, r22
    1036:	ac 01       	movw	r20, r24
    1038:	22 0f       	add	r18, r18
    103a:	33 1f       	adc	r19, r19
    103c:	44 1f       	adc	r20, r20
    103e:	55 1f       	adc	r21, r21
    1040:	2d 87       	std	Y+13, r18	; 0x0d
    1042:	3e 87       	std	Y+14, r19	; 0x0e
    1044:	4f 87       	std	Y+15, r20	; 0x0f
    1046:	58 8b       	std	Y+16, r21	; 0x10
    1048:	a7 01       	movw	r20, r14
    104a:	96 01       	movw	r18, r12
    104c:	c5 01       	movw	r24, r10
    104e:	b4 01       	movw	r22, r8
    1050:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    1054:	6b 01       	movw	r12, r22
    1056:	7c 01       	movw	r14, r24
    1058:	29 85       	ldd	r18, Y+9	; 0x09
    105a:	3a 85       	ldd	r19, Y+10	; 0x0a
    105c:	4b 85       	ldd	r20, Y+11	; 0x0b
    105e:	5c 85       	ldd	r21, Y+12	; 0x0c
    1060:	c5 01       	movw	r24, r10
    1062:	b4 01       	movw	r22, r8
    1064:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    1068:	2b 01       	movw	r4, r22
    106a:	3c 01       	movw	r6, r24
    106c:	99 23       	and	r25, r25
    106e:	0c f4       	brge	.+2      	; 0x1072 <TFT_Ellipse+0xc2>
    1070:	5c c0       	rjmp	.+184    	; 0x112a <TFT_Ellipse+0x17a>
    1072:	38 8c       	ldd	r3, Y+24	; 0x18
    1074:	13 2d       	mov	r17, r3
    1076:	49 89       	ldd	r20, Y+17	; 0x11
    1078:	5a 89       	ldd	r21, Y+18	; 0x12
    107a:	58 87       	std	Y+8, r21	; 0x08
    107c:	4f 83       	std	Y+7, r20	; 0x07
    107e:	81 2c       	mov	r8, r1
    1080:	91 2c       	mov	r9, r1
    1082:	54 01       	movw	r10, r8
    1084:	1c 82       	std	Y+4, r1	; 0x04
    1086:	1b 82       	std	Y+3, r1	; 0x03
    1088:	23 2c       	mov	r2, r3
    108a:	49 81       	ldd	r20, Y+1	; 0x01
    108c:	5a 81       	ldd	r21, Y+2	; 0x02
    108e:	0f 81       	ldd	r16, Y+7	; 0x07
    1090:	8f 89       	ldd	r24, Y+23	; 0x17
    1092:	08 0f       	add	r16, r24
    1094:	60 2f       	mov	r22, r16
    1096:	81 2f       	mov	r24, r17
    1098:	fa de       	rcall	.-524    	; 0xe8e <TFT_DrawPixel>
    109a:	49 81       	ldd	r20, Y+1	; 0x01
    109c:	5a 81       	ldd	r21, Y+2	; 0x02
    109e:	9f 89       	ldd	r25, Y+23	; 0x17
    10a0:	af 81       	ldd	r26, Y+7	; 0x07
    10a2:	9a 1b       	sub	r25, r26
    10a4:	98 8f       	std	Y+24, r25	; 0x18
    10a6:	69 2f       	mov	r22, r25
    10a8:	81 2f       	mov	r24, r17
    10aa:	f1 de       	rcall	.-542    	; 0xe8e <TFT_DrawPixel>
    10ac:	49 81       	ldd	r20, Y+1	; 0x01
    10ae:	5a 81       	ldd	r21, Y+2	; 0x02
    10b0:	60 2f       	mov	r22, r16
    10b2:	83 2d       	mov	r24, r3
    10b4:	ec de       	rcall	.-552    	; 0xe8e <TFT_DrawPixel>
    10b6:	49 81       	ldd	r20, Y+1	; 0x01
    10b8:	5a 81       	ldd	r21, Y+2	; 0x02
    10ba:	68 8d       	ldd	r22, Y+24	; 0x18
    10bc:	83 2d       	mov	r24, r3
    10be:	e7 de       	rcall	.-562    	; 0xe8e <TFT_DrawPixel>
    10c0:	eb 81       	ldd	r30, Y+3	; 0x03
    10c2:	fc 81       	ldd	r31, Y+4	; 0x04
    10c4:	31 96       	adiw	r30, 0x01	; 1
    10c6:	ab 81       	ldd	r26, Y+3	; 0x03
    10c8:	bc 81       	ldd	r27, Y+4	; 0x04
    10ca:	2d 85       	ldd	r18, Y+13	; 0x0d
    10cc:	3e 85       	ldd	r19, Y+14	; 0x0e
    10ce:	4f 85       	ldd	r20, Y+15	; 0x0f
    10d0:	58 89       	ldd	r21, Y+16	; 0x10
    10d2:	0e 94 2a 14 	call	0x2854	; 0x2854 <__mulshisi3>
    10d6:	c6 1a       	sub	r12, r22
    10d8:	d7 0a       	sbc	r13, r23
    10da:	e8 0a       	sbc	r14, r24
    10dc:	f9 0a       	sbc	r15, r25
    10de:	82 0e       	add	r8, r18
    10e0:	93 1e       	adc	r9, r19
    10e2:	a4 1e       	adc	r10, r20
    10e4:	b5 1e       	adc	r11, r21
    10e6:	ff 20       	and	r15, r15
    10e8:	ac f4       	brge	.+42     	; 0x1114 <TFT_Ellipse+0x164>
    10ea:	2f 81       	ldd	r18, Y+7	; 0x07
    10ec:	38 85       	ldd	r19, Y+8	; 0x08
    10ee:	21 50       	subi	r18, 0x01	; 1
    10f0:	31 09       	sbc	r19, r1
    10f2:	38 87       	std	Y+8, r19	; 0x08
    10f4:	2f 83       	std	Y+7, r18	; 0x07
    10f6:	d9 01       	movw	r26, r18
    10f8:	29 85       	ldd	r18, Y+9	; 0x09
    10fa:	3a 85       	ldd	r19, Y+10	; 0x0a
    10fc:	4b 85       	ldd	r20, Y+11	; 0x0b
    10fe:	5c 85       	ldd	r21, Y+12	; 0x0c
    1100:	0e 94 2a 14 	call	0x2854	; 0x2854 <__mulshisi3>
    1104:	c6 0e       	add	r12, r22
    1106:	d7 1e       	adc	r13, r23
    1108:	e8 1e       	adc	r14, r24
    110a:	f9 1e       	adc	r15, r25
    110c:	42 1a       	sub	r4, r18
    110e:	53 0a       	sbc	r5, r19
    1110:	64 0a       	sbc	r6, r20
    1112:	75 0a       	sbc	r7, r21
    1114:	1f 5f       	subi	r17, 0xFF	; 255
    1116:	3a 94       	dec	r3
    1118:	fc 83       	std	Y+4, r31	; 0x04
    111a:	eb 83       	std	Y+3, r30	; 0x03
    111c:	48 14       	cp	r4, r8
    111e:	59 04       	cpc	r5, r9
    1120:	6a 04       	cpc	r6, r10
    1122:	7b 04       	cpc	r7, r11
    1124:	0c f0       	brlt	.+2      	; 0x1128 <TFT_Ellipse+0x178>
    1126:	b1 cf       	rjmp	.-158    	; 0x108a <TFT_Ellipse+0xda>
    1128:	28 8e       	std	Y+24, r2	; 0x18
    112a:	49 89       	ldd	r20, Y+17	; 0x11
    112c:	5a 89       	ldd	r21, Y+18	; 0x12
    112e:	44 9f       	mul	r20, r20
    1130:	c0 01       	movw	r24, r0
    1132:	45 9f       	mul	r20, r21
    1134:	90 0d       	add	r25, r0
    1136:	90 0d       	add	r25, r0
    1138:	11 24       	eor	r1, r1
    113a:	ad 81       	ldd	r26, Y+5	; 0x05
    113c:	be 81       	ldd	r27, Y+6	; 0x06
    113e:	8a 9f       	mul	r24, r26
    1140:	60 01       	movw	r12, r0
    1142:	8b 9f       	mul	r24, r27
    1144:	d0 0c       	add	r13, r0
    1146:	9a 9f       	mul	r25, r26
    1148:	d0 0c       	add	r13, r0
    114a:	11 24       	eor	r1, r1
    114c:	0d 2c       	mov	r0, r13
    114e:	00 0c       	add	r0, r0
    1150:	ee 08       	sbc	r14, r14
    1152:	ff 08       	sbc	r15, r15
    1154:	2b 89       	ldd	r18, Y+19	; 0x13
    1156:	3c 89       	ldd	r19, Y+20	; 0x14
    1158:	4d 89       	ldd	r20, Y+21	; 0x15
    115a:	5e 89       	ldd	r21, Y+22	; 0x16
    115c:	6d 85       	ldd	r22, Y+13	; 0x0d
    115e:	7e 85       	ldd	r23, Y+14	; 0x0e
    1160:	8f 85       	ldd	r24, Y+15	; 0x0f
    1162:	98 89       	ldd	r25, Y+16	; 0x10
    1164:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    1168:	2b 01       	movw	r4, r22
    116a:	3c 01       	movw	r6, r24
    116c:	99 23       	and	r25, r25
    116e:	0c f4       	brge	.+2      	; 0x1172 <TFT_Ellipse+0x1c2>
    1170:	52 c0       	rjmp	.+164    	; 0x1216 <TFT_Ellipse+0x266>
    1172:	1f 89       	ldd	r17, Y+23	; 0x17
    1174:	1b 83       	std	Y+3, r17	; 0x03
    1176:	81 2c       	mov	r8, r1
    1178:	91 2c       	mov	r9, r1
    117a:	54 01       	movw	r10, r8
    117c:	21 2c       	mov	r2, r1
    117e:	31 2c       	mov	r3, r1
    1180:	49 81       	ldd	r20, Y+1	; 0x01
    1182:	5a 81       	ldd	r21, Y+2	; 0x02
    1184:	6b 81       	ldd	r22, Y+3	; 0x03
    1186:	0d 81       	ldd	r16, Y+5	; 0x05
    1188:	38 8d       	ldd	r19, Y+24	; 0x18
    118a:	03 0f       	add	r16, r19
    118c:	80 2f       	mov	r24, r16
    118e:	7f de       	rcall	.-770    	; 0xe8e <TFT_DrawPixel>
    1190:	49 81       	ldd	r20, Y+1	; 0x01
    1192:	5a 81       	ldd	r21, Y+2	; 0x02
    1194:	61 2f       	mov	r22, r17
    1196:	80 2f       	mov	r24, r16
    1198:	7a de       	rcall	.-780    	; 0xe8e <TFT_DrawPixel>
    119a:	49 81       	ldd	r20, Y+1	; 0x01
    119c:	5a 81       	ldd	r21, Y+2	; 0x02
    119e:	6b 81       	ldd	r22, Y+3	; 0x03
    11a0:	08 8d       	ldd	r16, Y+24	; 0x18
    11a2:	8d 81       	ldd	r24, Y+5	; 0x05
    11a4:	08 1b       	sub	r16, r24
    11a6:	80 2f       	mov	r24, r16
    11a8:	72 de       	rcall	.-796    	; 0xe8e <TFT_DrawPixel>
    11aa:	49 81       	ldd	r20, Y+1	; 0x01
    11ac:	5a 81       	ldd	r21, Y+2	; 0x02
    11ae:	61 2f       	mov	r22, r17
    11b0:	80 2f       	mov	r24, r16
    11b2:	6d de       	rcall	.-806    	; 0xe8e <TFT_DrawPixel>
    11b4:	f1 01       	movw	r30, r2
    11b6:	31 96       	adiw	r30, 0x01	; 1
    11b8:	d1 01       	movw	r26, r2
    11ba:	29 85       	ldd	r18, Y+9	; 0x09
    11bc:	3a 85       	ldd	r19, Y+10	; 0x0a
    11be:	4b 85       	ldd	r20, Y+11	; 0x0b
    11c0:	5c 85       	ldd	r21, Y+12	; 0x0c
    11c2:	0e 94 2a 14 	call	0x2854	; 0x2854 <__mulshisi3>
    11c6:	c6 1a       	sub	r12, r22
    11c8:	d7 0a       	sbc	r13, r23
    11ca:	e8 0a       	sbc	r14, r24
    11cc:	f9 0a       	sbc	r15, r25
    11ce:	82 0e       	add	r8, r18
    11d0:	93 1e       	adc	r9, r19
    11d2:	a4 1e       	adc	r10, r20
    11d4:	b5 1e       	adc	r11, r21
    11d6:	ff 20       	and	r15, r15
    11d8:	9c f4       	brge	.+38     	; 0x1200 <TFT_Ellipse+0x250>
    11da:	ad 81       	ldd	r26, Y+5	; 0x05
    11dc:	be 81       	ldd	r27, Y+6	; 0x06
    11de:	11 97       	sbiw	r26, 0x01	; 1
    11e0:	be 83       	std	Y+6, r27	; 0x06
    11e2:	ad 83       	std	Y+5, r26	; 0x05
    11e4:	2d 85       	ldd	r18, Y+13	; 0x0d
    11e6:	3e 85       	ldd	r19, Y+14	; 0x0e
    11e8:	4f 85       	ldd	r20, Y+15	; 0x0f
    11ea:	58 89       	ldd	r21, Y+16	; 0x10
    11ec:	0e 94 2a 14 	call	0x2854	; 0x2854 <__mulshisi3>
    11f0:	c6 0e       	add	r12, r22
    11f2:	d7 1e       	adc	r13, r23
    11f4:	e8 1e       	adc	r14, r24
    11f6:	f9 1e       	adc	r15, r25
    11f8:	42 1a       	sub	r4, r18
    11fa:	53 0a       	sbc	r5, r19
    11fc:	64 0a       	sbc	r6, r20
    11fe:	75 0a       	sbc	r7, r21
    1200:	bb 81       	ldd	r27, Y+3	; 0x03
    1202:	bf 5f       	subi	r27, 0xFF	; 255
    1204:	bb 83       	std	Y+3, r27	; 0x03
    1206:	11 50       	subi	r17, 0x01	; 1
    1208:	1f 01       	movw	r2, r30
    120a:	48 14       	cp	r4, r8
    120c:	59 04       	cpc	r5, r9
    120e:	6a 04       	cpc	r6, r10
    1210:	7b 04       	cpc	r7, r11
    1212:	0c f0       	brlt	.+2      	; 0x1216 <TFT_Ellipse+0x266>
    1214:	b5 cf       	rjmp	.-150    	; 0x1180 <TFT_Ellipse+0x1d0>
    1216:	68 96       	adiw	r28, 0x18	; 24
    1218:	e2 e1       	ldi	r30, 0x12	; 18
    121a:	0c 94 4c 14 	jmp	0x2898	; 0x2898 <__epilogue_restores__>

0000121e <TFT_FillEllipse>:
    121e:	af e0       	ldi	r26, 0x0F	; 15
    1220:	b0 e0       	ldi	r27, 0x00	; 0
    1222:	e5 e1       	ldi	r30, 0x15	; 21
    1224:	f9 e0       	ldi	r31, 0x09	; 9
    1226:	0c 94 30 14 	jmp	0x2860	; 0x2860 <__prologue_saves__>
    122a:	e8 2f       	mov	r30, r24
    122c:	6e 87       	std	Y+14, r22	; 0x0e
    122e:	1e 83       	std	Y+6, r17	; 0x06
    1230:	0d 83       	std	Y+5, r16	; 0x05
    1232:	ca 01       	movw	r24, r20
    1234:	99 23       	and	r25, r25
    1236:	0c f4       	brge	.+2      	; 0x123a <TFT_FillEllipse+0x1c>
    1238:	01 96       	adiw	r24, 0x01	; 1
    123a:	6c 01       	movw	r12, r24
    123c:	d5 94       	asr	r13
    123e:	c7 94       	ror	r12
    1240:	c9 01       	movw	r24, r18
    1242:	99 23       	and	r25, r25
    1244:	0c f4       	brge	.+2      	; 0x1248 <TFT_FillEllipse+0x2a>
    1246:	01 96       	adiw	r24, 0x01	; 1
    1248:	9c 01       	movw	r18, r24
    124a:	35 95       	asr	r19
    124c:	27 95       	ror	r18
    124e:	39 87       	std	Y+9, r19	; 0x09
    1250:	28 87       	std	Y+8, r18	; 0x08
    1252:	cc 9c       	mul	r12, r12
    1254:	c0 01       	movw	r24, r0
    1256:	cd 9c       	mul	r12, r13
    1258:	90 0d       	add	r25, r0
    125a:	90 0d       	add	r25, r0
    125c:	11 24       	eor	r1, r1
    125e:	9c 01       	movw	r18, r24
    1260:	99 0f       	add	r25, r25
    1262:	44 0b       	sbc	r20, r20
    1264:	55 0b       	sbc	r21, r21
    1266:	2a 87       	std	Y+10, r18	; 0x0a
    1268:	3b 87       	std	Y+11, r19	; 0x0b
    126a:	4c 87       	std	Y+12, r20	; 0x0c
    126c:	5d 87       	std	Y+13, r21	; 0x0d
    126e:	48 85       	ldd	r20, Y+8	; 0x08
    1270:	59 85       	ldd	r21, Y+9	; 0x09
    1272:	44 9f       	mul	r20, r20
    1274:	c0 01       	movw	r24, r0
    1276:	45 9f       	mul	r20, r21
    1278:	90 0d       	add	r25, r0
    127a:	90 0d       	add	r25, r0
    127c:	11 24       	eor	r1, r1
    127e:	9c 01       	movw	r18, r24
    1280:	99 0f       	add	r25, r25
    1282:	44 0b       	sbc	r20, r20
    1284:	55 0b       	sbc	r21, r21
    1286:	29 83       	std	Y+1, r18	; 0x01
    1288:	3a 83       	std	Y+2, r19	; 0x02
    128a:	4b 83       	std	Y+3, r20	; 0x03
    128c:	5c 83       	std	Y+4, r21	; 0x04
    128e:	2a 85       	ldd	r18, Y+10	; 0x0a
    1290:	3b 85       	ldd	r19, Y+11	; 0x0b
    1292:	4c 85       	ldd	r20, Y+12	; 0x0c
    1294:	5d 85       	ldd	r21, Y+13	; 0x0d
    1296:	69 81       	ldd	r22, Y+1	; 0x01
    1298:	7a 81       	ldd	r23, Y+2	; 0x02
    129a:	8b 81       	ldd	r24, Y+3	; 0x03
    129c:	9c 81       	ldd	r25, Y+4	; 0x04
    129e:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    12a2:	2b 01       	movw	r4, r22
    12a4:	3c 01       	movw	r6, r24
    12a6:	ef 83       	std	Y+7, r30	; 0x07
    12a8:	6e 2f       	mov	r22, r30
    12aa:	6c 0d       	add	r22, r12
    12ac:	2d 81       	ldd	r18, Y+5	; 0x05
    12ae:	3e 81       	ldd	r19, Y+6	; 0x06
    12b0:	4e 85       	ldd	r20, Y+14	; 0x0e
    12b2:	8e 2f       	mov	r24, r30
    12b4:	8c 19       	sub	r24, r12
    12b6:	f8 dd       	rcall	.-1040   	; 0xea8 <TFT_HLine>
    12b8:	48 85       	ldd	r20, Y+8	; 0x08
    12ba:	59 85       	ldd	r21, Y+9	; 0x09
    12bc:	14 16       	cp	r1, r20
    12be:	15 06       	cpc	r1, r21
    12c0:	0c f0       	brlt	.+2      	; 0x12c4 <TFT_FillEllipse+0xa6>
    12c2:	98 c0       	rjmp	.+304    	; 0x13f4 <TFT_FillEllipse+0x1d6>
    12c4:	0e 85       	ldd	r16, Y+14	; 0x0e
    12c6:	0f 5f       	subi	r16, 0xFF	; 255
    12c8:	1e 85       	ldd	r17, Y+14	; 0x0e
    12ca:	11 50       	subi	r17, 0x01	; 1
    12cc:	e1 2c       	mov	r14, r1
    12ce:	f1 2c       	mov	r15, r1
    12d0:	22 24       	eor	r2, r2
    12d2:	23 94       	inc	r2
    12d4:	31 2c       	mov	r3, r1
    12d6:	f6 01       	movw	r30, r12
    12d8:	02 c0       	rjmp	.+4      	; 0x12de <TFT_FillEllipse+0xc0>
    12da:	ee 85       	ldd	r30, Y+14	; 0x0e
    12dc:	ff 85       	ldd	r31, Y+15	; 0x0f
    12de:	51 e0       	ldi	r21, 0x01	; 1
    12e0:	e5 1a       	sub	r14, r21
    12e2:	f1 08       	sbc	r15, r1
    12e4:	cf 01       	movw	r24, r30
    12e6:	8e 19       	sub	r24, r14
    12e8:	9f 09       	sbc	r25, r15
    12ea:	9f 87       	std	Y+15, r25	; 0x0f
    12ec:	8e 87       	std	Y+14, r24	; 0x0e
    12ee:	18 16       	cp	r1, r24
    12f0:	19 06       	cpc	r1, r25
    12f2:	0c f0       	brlt	.+2      	; 0x12f6 <TFT_FillEllipse+0xd8>
    12f4:	5e c0       	rjmp	.+188    	; 0x13b2 <TFT_FillEllipse+0x194>
    12f6:	2a 85       	ldd	r18, Y+10	; 0x0a
    12f8:	3b 85       	ldd	r19, Y+11	; 0x0b
    12fa:	4c 85       	ldd	r20, Y+12	; 0x0c
    12fc:	5d 85       	ldd	r21, Y+13	; 0x0d
    12fe:	61 01       	movw	r12, r2
    1300:	03 2c       	mov	r0, r3
    1302:	00 0c       	add	r0, r0
    1304:	ee 08       	sbc	r14, r14
    1306:	ff 08       	sbc	r15, r15
    1308:	c7 01       	movw	r24, r14
    130a:	b6 01       	movw	r22, r12
    130c:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    1310:	9b 01       	movw	r18, r22
    1312:	ac 01       	movw	r20, r24
    1314:	c7 01       	movw	r24, r14
    1316:	b6 01       	movw	r22, r12
    1318:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    131c:	4b 01       	movw	r8, r22
    131e:	5c 01       	movw	r10, r24
    1320:	29 81       	ldd	r18, Y+1	; 0x01
    1322:	3a 81       	ldd	r19, Y+2	; 0x02
    1324:	4b 81       	ldd	r20, Y+3	; 0x03
    1326:	5c 81       	ldd	r21, Y+4	; 0x04
    1328:	8e 85       	ldd	r24, Y+14	; 0x0e
    132a:	9f 85       	ldd	r25, Y+15	; 0x0f
    132c:	6c 01       	movw	r12, r24
    132e:	99 0f       	add	r25, r25
    1330:	ee 08       	sbc	r14, r14
    1332:	ff 08       	sbc	r15, r15
    1334:	c7 01       	movw	r24, r14
    1336:	b6 01       	movw	r22, r12
    1338:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    133c:	9b 01       	movw	r18, r22
    133e:	ac 01       	movw	r20, r24
    1340:	c7 01       	movw	r24, r14
    1342:	b6 01       	movw	r22, r12
    1344:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    1348:	dc 01       	movw	r26, r24
    134a:	cb 01       	movw	r24, r22
    134c:	88 0d       	add	r24, r8
    134e:	99 1d       	adc	r25, r9
    1350:	aa 1d       	adc	r26, r10
    1352:	bb 1d       	adc	r27, r11
    1354:	48 16       	cp	r4, r24
    1356:	59 06       	cpc	r5, r25
    1358:	6a 06       	cpc	r6, r26
    135a:	7b 06       	cpc	r7, r27
    135c:	0c f1       	brlt	.+66     	; 0x13a0 <TFT_FillEllipse+0x182>
    135e:	29 c0       	rjmp	.+82     	; 0x13b2 <TFT_FillEllipse+0x194>
    1360:	29 81       	ldd	r18, Y+1	; 0x01
    1362:	3a 81       	ldd	r19, Y+2	; 0x02
    1364:	4b 81       	ldd	r20, Y+3	; 0x03
    1366:	5c 81       	ldd	r21, Y+4	; 0x04
    1368:	8e 85       	ldd	r24, Y+14	; 0x0e
    136a:	9f 85       	ldd	r25, Y+15	; 0x0f
    136c:	6c 01       	movw	r12, r24
    136e:	99 0f       	add	r25, r25
    1370:	ee 08       	sbc	r14, r14
    1372:	ff 08       	sbc	r15, r15
    1374:	c7 01       	movw	r24, r14
    1376:	b6 01       	movw	r22, r12
    1378:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    137c:	9b 01       	movw	r18, r22
    137e:	ac 01       	movw	r20, r24
    1380:	c7 01       	movw	r24, r14
    1382:	b6 01       	movw	r22, r12
    1384:	0e 94 dc 13 	call	0x27b8	; 0x27b8 <__mulsi3>
    1388:	dc 01       	movw	r26, r24
    138a:	cb 01       	movw	r24, r22
    138c:	88 0d       	add	r24, r8
    138e:	99 1d       	adc	r25, r9
    1390:	aa 1d       	adc	r26, r10
    1392:	bb 1d       	adc	r27, r11
    1394:	48 16       	cp	r4, r24
    1396:	59 06       	cpc	r5, r25
    1398:	6a 06       	cpc	r6, r26
    139a:	7b 06       	cpc	r7, r27
    139c:	54 f4       	brge	.+20     	; 0x13b2 <TFT_FillEllipse+0x194>
    139e:	00 c0       	rjmp	.+0      	; 0x13a0 <TFT_FillEllipse+0x182>
    13a0:	4e 85       	ldd	r20, Y+14	; 0x0e
    13a2:	5f 85       	ldd	r21, Y+15	; 0x0f
    13a4:	41 50       	subi	r20, 0x01	; 1
    13a6:	51 09       	sbc	r21, r1
    13a8:	5f 87       	std	Y+15, r21	; 0x0f
    13aa:	4e 87       	std	Y+14, r20	; 0x0e
    13ac:	45 2b       	or	r20, r21
    13ae:	c1 f6       	brne	.-80     	; 0x1360 <TFT_FillEllipse+0x142>
    13b0:	00 c0       	rjmp	.+0      	; 0x13b2 <TFT_FillEllipse+0x194>
    13b2:	7f 01       	movw	r14, r30
    13b4:	2e 85       	ldd	r18, Y+14	; 0x0e
    13b6:	3f 85       	ldd	r19, Y+15	; 0x0f
    13b8:	e2 1a       	sub	r14, r18
    13ba:	f3 0a       	sbc	r15, r19
    13bc:	2d 81       	ldd	r18, Y+5	; 0x05
    13be:	3e 81       	ldd	r19, Y+6	; 0x06
    13c0:	40 2f       	mov	r20, r16
    13c2:	cf 80       	ldd	r12, Y+7	; 0x07
    13c4:	5e 85       	ldd	r21, Y+14	; 0x0e
    13c6:	c5 0e       	add	r12, r21
    13c8:	6c 2d       	mov	r22, r12
    13ca:	df 80       	ldd	r13, Y+7	; 0x07
    13cc:	d5 1a       	sub	r13, r21
    13ce:	8d 2d       	mov	r24, r13
    13d0:	6b dd       	rcall	.-1322   	; 0xea8 <TFT_HLine>
    13d2:	2d 81       	ldd	r18, Y+5	; 0x05
    13d4:	3e 81       	ldd	r19, Y+6	; 0x06
    13d6:	41 2f       	mov	r20, r17
    13d8:	6c 2d       	mov	r22, r12
    13da:	8d 2d       	mov	r24, r13
    13dc:	65 dd       	rcall	.-1334   	; 0xea8 <TFT_HLine>
    13de:	8f ef       	ldi	r24, 0xFF	; 255
    13e0:	28 1a       	sub	r2, r24
    13e2:	38 0a       	sbc	r3, r24
    13e4:	0f 5f       	subi	r16, 0xFF	; 255
    13e6:	11 50       	subi	r17, 0x01	; 1
    13e8:	28 85       	ldd	r18, Y+8	; 0x08
    13ea:	39 85       	ldd	r19, Y+9	; 0x09
    13ec:	22 15       	cp	r18, r2
    13ee:	33 05       	cpc	r19, r3
    13f0:	0c f0       	brlt	.+2      	; 0x13f4 <TFT_FillEllipse+0x1d6>
    13f2:	73 cf       	rjmp	.-282    	; 0x12da <TFT_FillEllipse+0xbc>
    13f4:	2f 96       	adiw	r28, 0x0f	; 15
    13f6:	e2 e1       	ldi	r30, 0x12	; 18
    13f8:	0c 94 4c 14 	jmp	0x2898	; 0x2898 <__epilogue_restores__>

000013fc <TFT_AdvanceCursor>:
    13fc:	80 91 e9 01 	lds	r24, 0x01E9	; 0x8001e9 <curX>
    1400:	8f 5f       	subi	r24, 0xFF	; 255
    1402:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <curX>
    1406:	85 31       	cpi	r24, 0x15	; 21
    1408:	38 f0       	brcs	.+14     	; 0x1418 <TFT_AdvanceCursor+0x1c>
    140a:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <curY>
    140e:	8f 5f       	subi	r24, 0xFF	; 255
    1410:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <curY>
    1414:	10 92 e9 01 	sts	0x01E9, r1	; 0x8001e9 <curX>
    1418:	80 91 ea 01 	lds	r24, 0x01EA	; 0x8001ea <curY>
    141c:	84 31       	cpi	r24, 0x14	; 20
    141e:	10 f0       	brcs	.+4      	; 0x1424 <TFT_AdvanceCursor+0x28>
    1420:	10 92 ea 01 	sts	0x01EA, r1	; 0x8001ea <curY>
    1424:	08 95       	ret

00001426 <TFT_PutCh>:
    1426:	a0 e0       	ldi	r26, 0x00	; 0
    1428:	b0 e0       	ldi	r27, 0x00	; 0
    142a:	e9 e1       	ldi	r30, 0x19	; 25
    142c:	fa e0       	ldi	r31, 0x0A	; 10
    142e:	0c 94 37 14 	jmp	0x286e	; 0x286e <__prologue_saves__+0xe>
    1432:	c8 2f       	mov	r28, r24
    1434:	86 2f       	mov	r24, r22
    1436:	64 2f       	mov	r22, r20
    1438:	b2 2e       	mov	r11, r18
    143a:	c3 2e       	mov	r12, r19
    143c:	26 e0       	ldi	r18, 0x06	; 6
    143e:	24 0f       	add	r18, r20
    1440:	44 e0       	ldi	r20, 0x04	; 4
    1442:	48 0f       	add	r20, r24
    1444:	c3 dc       	rcall	.-1658   	; 0xdcc <TFT_SetAddrWindow>
    1446:	8c e2       	ldi	r24, 0x2C	; 44
    1448:	84 dc       	rcall	.-1784   	; 0xd52 <TFT_WriteCmd>
    144a:	8c 2f       	mov	r24, r28
    144c:	90 e0       	ldi	r25, 0x00	; 0
    144e:	80 97       	sbiw	r24, 0x20	; 32
    1450:	7c 01       	movw	r14, r24
    1452:	ee 0c       	add	r14, r14
    1454:	ff 1c       	adc	r15, r15
    1456:	ee 0c       	add	r14, r14
    1458:	ff 1c       	adc	r15, r15
    145a:	8e 0d       	add	r24, r14
    145c:	9f 1d       	adc	r25, r15
    145e:	9c 01       	movw	r18, r24
    1460:	28 52       	subi	r18, 0x28	; 40
    1462:	3f 4f       	sbci	r19, 0xFF	; 255
    1464:	79 01       	movw	r14, r18
    1466:	0f 2e       	mov	r0, r31
    1468:	f7 e0       	ldi	r31, 0x07	; 7
    146a:	df 2e       	mov	r13, r31
    146c:	f0 2d       	mov	r31, r0
    146e:	d1 e0       	ldi	r29, 0x01	; 1
    1470:	91 2c       	mov	r9, r1
    1472:	a1 2c       	mov	r10, r1
    1474:	13 c0       	rjmp	.+38     	; 0x149c <TFT_PutCh+0x76>
    1476:	f8 01       	movw	r30, r16
    1478:	84 91       	lpm	r24, Z
    147a:	8d 23       	and	r24, r29
    147c:	19 f0       	breq	.+6      	; 0x1484 <TFT_PutCh+0x5e>
    147e:	8b 2d       	mov	r24, r11
    1480:	9c 2d       	mov	r25, r12
    1482:	02 c0       	rjmp	.+4      	; 0x1488 <TFT_PutCh+0x62>
    1484:	89 2d       	mov	r24, r9
    1486:	9a 2d       	mov	r25, r10
    1488:	68 dc       	rcall	.-1840   	; 0xd5a <TFT_WriteWord>
    148a:	c1 50       	subi	r28, 0x01	; 1
    148c:	0f 5f       	subi	r16, 0xFF	; 255
    148e:	1f 4f       	sbci	r17, 0xFF	; 255
    1490:	c1 11       	cpse	r28, r1
    1492:	f1 cf       	rjmp	.-30     	; 0x1476 <TFT_PutCh+0x50>
    1494:	dd 0f       	add	r29, r29
    1496:	da 94       	dec	r13
    1498:	dd 20       	and	r13, r13
    149a:	19 f0       	breq	.+6      	; 0x14a2 <TFT_PutCh+0x7c>
    149c:	87 01       	movw	r16, r14
    149e:	c5 e0       	ldi	r28, 0x05	; 5
    14a0:	ea cf       	rjmp	.-44     	; 0x1476 <TFT_PutCh+0x50>
    14a2:	cd b7       	in	r28, 0x3d	; 61
    14a4:	de b7       	in	r29, 0x3e	; 62
    14a6:	eb e0       	ldi	r30, 0x0B	; 11
    14a8:	0c 94 53 14 	jmp	0x28a6	; 0x28a6 <__epilogue_restores__+0xe>

000014ac <TFT_WriteChar>:
    14ac:	9b 01       	movw	r18, r22
    14ae:	40 91 ea 01 	lds	r20, 0x01EA	; 0x8001ea <curY>
    14b2:	44 0f       	add	r20, r20
    14b4:	44 0f       	add	r20, r20
    14b6:	44 0f       	add	r20, r20
    14b8:	90 91 e9 01 	lds	r25, 0x01E9	; 0x8001e9 <curX>
    14bc:	69 2f       	mov	r22, r25
    14be:	66 0f       	add	r22, r22
    14c0:	96 0f       	add	r25, r22
    14c2:	69 2f       	mov	r22, r25
    14c4:	66 0f       	add	r22, r22
    14c6:	af df       	rcall	.-162    	; 0x1426 <TFT_PutCh>
    14c8:	99 cf       	rjmp	.-206    	; 0x13fc <TFT_AdvanceCursor>
    14ca:	08 95       	ret

000014cc <TFT_WriteString>:
    14cc:	0f 93       	push	r16
    14ce:	1f 93       	push	r17
    14d0:	cf 93       	push	r28
    14d2:	df 93       	push	r29
    14d4:	ec 01       	movw	r28, r24
    14d6:	88 81       	ld	r24, Y
    14d8:	88 23       	and	r24, r24
    14da:	39 f0       	breq	.+14     	; 0x14ea <TFT_WriteString+0x1e>
    14dc:	8b 01       	movw	r16, r22
    14de:	21 96       	adiw	r28, 0x01	; 1
    14e0:	b8 01       	movw	r22, r16
    14e2:	e4 df       	rcall	.-56     	; 0x14ac <TFT_WriteChar>
    14e4:	89 91       	ld	r24, Y+
    14e6:	81 11       	cpse	r24, r1
    14e8:	fb cf       	rjmp	.-10     	; 0x14e0 <TFT_WriteString+0x14>
    14ea:	df 91       	pop	r29
    14ec:	cf 91       	pop	r28
    14ee:	1f 91       	pop	r17
    14f0:	0f 91       	pop	r16
    14f2:	08 95       	ret

000014f4 <GetKeypadKey>:
    14f4:	8f ee       	ldi	r24, 0xEF	; 239
    14f6:	82 b9       	out	0x02, r24	; 2
    14f8:	00 00       	nop
    14fa:	00 9b       	sbis	0x00, 0	; 0
    14fc:	29 c0       	rjmp	.+82     	; 0x1550 <GetKeypadKey+0x5c>
    14fe:	01 9b       	sbis	0x00, 1	; 0
    1500:	29 c0       	rjmp	.+82     	; 0x1554 <GetKeypadKey+0x60>
    1502:	02 9b       	sbis	0x00, 2	; 0
    1504:	29 c0       	rjmp	.+82     	; 0x1558 <GetKeypadKey+0x64>
    1506:	03 9b       	sbis	0x00, 3	; 0
    1508:	29 c0       	rjmp	.+82     	; 0x155c <GetKeypadKey+0x68>
    150a:	8f ed       	ldi	r24, 0xDF	; 223
    150c:	82 b9       	out	0x02, r24	; 2
    150e:	00 00       	nop
    1510:	00 9b       	sbis	0x00, 0	; 0
    1512:	26 c0       	rjmp	.+76     	; 0x1560 <GetKeypadKey+0x6c>
    1514:	01 9b       	sbis	0x00, 1	; 0
    1516:	26 c0       	rjmp	.+76     	; 0x1564 <GetKeypadKey+0x70>
    1518:	02 9b       	sbis	0x00, 2	; 0
    151a:	26 c0       	rjmp	.+76     	; 0x1568 <GetKeypadKey+0x74>
    151c:	03 9b       	sbis	0x00, 3	; 0
    151e:	26 c0       	rjmp	.+76     	; 0x156c <GetKeypadKey+0x78>
    1520:	8f eb       	ldi	r24, 0xBF	; 191
    1522:	82 b9       	out	0x02, r24	; 2
    1524:	00 00       	nop
    1526:	00 9b       	sbis	0x00, 0	; 0
    1528:	23 c0       	rjmp	.+70     	; 0x1570 <GetKeypadKey+0x7c>
    152a:	01 9b       	sbis	0x00, 1	; 0
    152c:	23 c0       	rjmp	.+70     	; 0x1574 <GetKeypadKey+0x80>
    152e:	02 9b       	sbis	0x00, 2	; 0
    1530:	23 c0       	rjmp	.+70     	; 0x1578 <GetKeypadKey+0x84>
    1532:	03 9b       	sbis	0x00, 3	; 0
    1534:	23 c0       	rjmp	.+70     	; 0x157c <GetKeypadKey+0x88>
    1536:	8f e7       	ldi	r24, 0x7F	; 127
    1538:	82 b9       	out	0x02, r24	; 2
    153a:	00 00       	nop
    153c:	00 9b       	sbis	0x00, 0	; 0
    153e:	20 c0       	rjmp	.+64     	; 0x1580 <GetKeypadKey+0x8c>
    1540:	01 9b       	sbis	0x00, 1	; 0
    1542:	20 c0       	rjmp	.+64     	; 0x1584 <GetKeypadKey+0x90>
    1544:	02 9b       	sbis	0x00, 2	; 0
    1546:	20 c0       	rjmp	.+64     	; 0x1588 <GetKeypadKey+0x94>
    1548:	03 9b       	sbis	0x00, 3	; 0
    154a:	20 c0       	rjmp	.+64     	; 0x158c <GetKeypadKey+0x98>
    154c:	80 e0       	ldi	r24, 0x00	; 0
    154e:	08 95       	ret
    1550:	81 e3       	ldi	r24, 0x31	; 49
    1552:	08 95       	ret
    1554:	84 e3       	ldi	r24, 0x34	; 52
    1556:	08 95       	ret
    1558:	87 e3       	ldi	r24, 0x37	; 55
    155a:	08 95       	ret
    155c:	8a e2       	ldi	r24, 0x2A	; 42
    155e:	08 95       	ret
    1560:	82 e3       	ldi	r24, 0x32	; 50
    1562:	08 95       	ret
    1564:	85 e3       	ldi	r24, 0x35	; 53
    1566:	08 95       	ret
    1568:	88 e3       	ldi	r24, 0x38	; 56
    156a:	08 95       	ret
    156c:	80 e3       	ldi	r24, 0x30	; 48
    156e:	08 95       	ret
    1570:	83 e3       	ldi	r24, 0x33	; 51
    1572:	08 95       	ret
    1574:	86 e3       	ldi	r24, 0x36	; 54
    1576:	08 95       	ret
    1578:	89 e3       	ldi	r24, 0x39	; 57
    157a:	08 95       	ret
    157c:	83 e2       	ldi	r24, 0x23	; 35
    157e:	08 95       	ret
    1580:	81 e4       	ldi	r24, 0x41	; 65
    1582:	08 95       	ret
    1584:	82 e4       	ldi	r24, 0x42	; 66
    1586:	08 95       	ret
    1588:	83 e4       	ldi	r24, 0x43	; 67
    158a:	08 95       	ret
    158c:	84 e4       	ldi	r24, 0x44	; 68
    158e:	08 95       	ret

00001590 <SMTICK4>:
    1590:	cf 93       	push	r28
    1592:	df 93       	push	r29
    1594:	ec 01       	movw	r28, r24
    1596:	82 30       	cpi	r24, 0x02	; 2
    1598:	91 05       	cpc	r25, r1
    159a:	d1 f0       	breq	.+52     	; 0x15d0 <SMTICK4+0x40>
    159c:	34 f4       	brge	.+12     	; 0x15aa <SMTICK4+0x1a>
    159e:	00 97       	sbiw	r24, 0x00	; 0
    15a0:	09 f4       	brne	.+2      	; 0x15a4 <SMTICK4+0x14>
    15a2:	3c c1       	rjmp	.+632    	; 0x181c <SMTICK4+0x28c>
    15a4:	01 97       	sbiw	r24, 0x01	; 1
    15a6:	51 f0       	breq	.+20     	; 0x15bc <SMTICK4+0x2c>
    15a8:	45 c1       	rjmp	.+650    	; 0x1834 <SMTICK4+0x2a4>
    15aa:	84 30       	cpi	r24, 0x04	; 4
    15ac:	91 05       	cpc	r25, r1
    15ae:	09 f4       	brne	.+2      	; 0x15b2 <SMTICK4+0x22>
    15b0:	43 c0       	rjmp	.+134    	; 0x1638 <SMTICK4+0xa8>
    15b2:	ac f0       	brlt	.+42     	; 0x15de <SMTICK4+0x4e>
    15b4:	05 97       	sbiw	r24, 0x05	; 5
    15b6:	09 f4       	brne	.+2      	; 0x15ba <SMTICK4+0x2a>
    15b8:	61 c0       	rjmp	.+194    	; 0x167c <SMTICK4+0xec>
    15ba:	3c c1       	rjmp	.+632    	; 0x1834 <SMTICK4+0x2a4>
    15bc:	9b df       	rcall	.-202    	; 0x14f4 <GetKeypadKey>
    15be:	88 23       	and	r24, r24
    15c0:	09 f4       	brne	.+2      	; 0x15c4 <SMTICK4+0x34>
    15c2:	3d c1       	rjmp	.+634    	; 0x183e <SMTICK4+0x2ae>
    15c4:	97 df       	rcall	.-210    	; 0x14f4 <GetKeypadKey>
    15c6:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <lastInput>
    15ca:	c2 e0       	ldi	r28, 0x02	; 2
    15cc:	d0 e0       	ldi	r29, 0x00	; 0
    15ce:	37 c1       	rjmp	.+622    	; 0x183e <SMTICK4+0x2ae>
    15d0:	91 df       	rcall	.-222    	; 0x14f4 <GetKeypadKey>
    15d2:	8a 32       	cpi	r24, 0x2A	; 42
    15d4:	09 f4       	brne	.+2      	; 0x15d8 <SMTICK4+0x48>
    15d6:	31 c1       	rjmp	.+610    	; 0x183a <SMTICK4+0x2aa>
    15d8:	c1 e0       	ldi	r28, 0x01	; 1
    15da:	d0 e0       	ldi	r29, 0x00	; 0
    15dc:	30 c1       	rjmp	.+608    	; 0x183e <SMTICK4+0x2ae>
    15de:	8a df       	rcall	.-236    	; 0x14f4 <GetKeypadKey>
    15e0:	8a 32       	cpi	r24, 0x2A	; 42
    15e2:	d1 f4       	brne	.+52     	; 0x1618 <SMTICK4+0x88>
    15e4:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <holdTime>
    15e8:	84 30       	cpi	r24, 0x04	; 4
    15ea:	b0 f0       	brcs	.+44     	; 0x1618 <SMTICK4+0x88>
    15ec:	8e e0       	ldi	r24, 0x0E	; 14
    15ee:	0e 94 93 01 	call	0x326	; 0x326 <LCD_WriteCommand>
    15f2:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <holdTime>
    15f6:	82 e1       	ldi	r24, 0x12	; 18
    15f8:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    15fc:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <value>
    1600:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <value+0x1>
    1604:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <value+0x2>
    1608:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <value+0x3>
    160c:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <inputs>
    1610:	81 e0       	ldi	r24, 0x01	; 1
    1612:	80 93 e3 01 	sts	0x01E3, r24	; 0x8001e3 <newInput>
    1616:	08 c1       	rjmp	.+528    	; 0x1828 <SMTICK4+0x298>
    1618:	6d df       	rcall	.-294    	; 0x14f4 <GetKeypadKey>
    161a:	8a 32       	cpi	r24, 0x2A	; 42
    161c:	41 f4       	brne	.+16     	; 0x162e <SMTICK4+0x9e>
    161e:	80 91 db 01 	lds	r24, 0x01DB	; 0x8001db <holdTime>
    1622:	84 30       	cpi	r24, 0x04	; 4
    1624:	20 f4       	brcc	.+8      	; 0x162e <SMTICK4+0x9e>
    1626:	8f 5f       	subi	r24, 0xFF	; 255
    1628:	80 93 db 01 	sts	0x01DB, r24	; 0x8001db <holdTime>
    162c:	08 c1       	rjmp	.+528    	; 0x183e <SMTICK4+0x2ae>
    162e:	10 92 db 01 	sts	0x01DB, r1	; 0x8001db <holdTime>
    1632:	c1 e0       	ldi	r28, 0x01	; 1
    1634:	d0 e0       	ldi	r29, 0x00	; 0
    1636:	03 c1       	rjmp	.+518    	; 0x183e <SMTICK4+0x2ae>
    1638:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <inputState>
    163c:	83 30       	cpi	r24, 0x03	; 3
    163e:	29 f0       	breq	.+10     	; 0x164a <SMTICK4+0xba>
    1640:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    1644:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_Cursor>
    1648:	ef c0       	rjmp	.+478    	; 0x1828 <SMTICK4+0x298>
    164a:	82 e1       	ldi	r24, 0x12	; 18
    164c:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    1650:	10 92 dc 01 	sts	0x01DC, r1	; 0x8001dc <inputState>
    1654:	10 92 e3 01 	sts	0x01E3, r1	; 0x8001e3 <newInput>
    1658:	80 91 eb 01 	lds	r24, 0x01EB	; 0x8001eb <tempColor>
    165c:	90 91 ec 01 	lds	r25, 0x01EC	; 0x8001ec <tempColor+0x1>
    1660:	a0 91 ed 01 	lds	r26, 0x01ED	; 0x8001ed <tempColor+0x2>
    1664:	80 93 03 01 	sts	0x0103, r24	; 0x800103 <mainColor>
    1668:	90 93 04 01 	sts	0x0104, r25	; 0x800104 <mainColor+0x1>
    166c:	a0 93 05 01 	sts	0x0105, r26	; 0x800105 <mainColor+0x2>
    1670:	81 e0       	ldi	r24, 0x01	; 1
    1672:	80 93 e2 01 	sts	0x01E2, r24	; 0x8001e2 <valueChanged>
    1676:	c5 e0       	ldi	r28, 0x05	; 5
    1678:	d0 e0       	ldi	r29, 0x00	; 0
    167a:	e1 c0       	rjmp	.+450    	; 0x183e <SMTICK4+0x2ae>
    167c:	80 91 e2 01 	lds	r24, 0x01E2	; 0x8001e2 <valueChanged>
    1680:	81 11       	cpse	r24, r1
    1682:	dd c0       	rjmp	.+442    	; 0x183e <SMTICK4+0x2ae>
    1684:	c1 e0       	ldi	r28, 0x01	; 1
    1686:	d0 e0       	ldi	r29, 0x00	; 0
    1688:	da c0       	rjmp	.+436    	; 0x183e <SMTICK4+0x2ae>
    168a:	34 df       	rcall	.-408    	; 0x14f4 <GetKeypadKey>
    168c:	88 23       	and	r24, r24
    168e:	09 f4       	brne	.+2      	; 0x1692 <SMTICK4+0x102>
    1690:	bd c0       	rjmp	.+378    	; 0x180c <SMTICK4+0x27c>
    1692:	30 df       	rcall	.-416    	; 0x14f4 <GetKeypadKey>
    1694:	80 33       	cpi	r24, 0x30	; 48
    1696:	08 f4       	brcc	.+2      	; 0x169a <SMTICK4+0x10a>
    1698:	b3 c0       	rjmp	.+358    	; 0x1800 <SMTICK4+0x270>
    169a:	2c df       	rcall	.-424    	; 0x14f4 <GetKeypadKey>
    169c:	8a 33       	cpi	r24, 0x3A	; 58
    169e:	08 f0       	brcs	.+2      	; 0x16a2 <SMTICK4+0x112>
    16a0:	af c0       	rjmp	.+350    	; 0x1800 <SMTICK4+0x270>
    16a2:	28 df       	rcall	.-432    	; 0x14f4 <GetKeypadKey>
    16a4:	0e 94 cd 01 	call	0x39a	; 0x39a <LCD_WriteData>
    16a8:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
    16ac:	8f 5f       	subi	r24, 0xFF	; 255
    16ae:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
    16b2:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <inputs>
    16b6:	81 30       	cpi	r24, 0x01	; 1
    16b8:	01 f1       	breq	.+64     	; 0x16fa <SMTICK4+0x16a>
    16ba:	20 f0       	brcs	.+8      	; 0x16c4 <SMTICK4+0x134>
    16bc:	82 30       	cpi	r24, 0x02	; 2
    16be:	09 f4       	brne	.+2      	; 0x16c2 <SMTICK4+0x132>
    16c0:	4a c0       	rjmp	.+148    	; 0x1756 <SMTICK4+0x1c6>
    16c2:	9e c0       	rjmp	.+316    	; 0x1800 <SMTICK4+0x270>
    16c4:	17 df       	rcall	.-466    	; 0x14f4 <GetKeypadKey>
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	c0 97       	sbiw	r24, 0x30	; 48
    16ca:	44 e6       	ldi	r20, 0x64	; 100
    16cc:	48 9f       	mul	r20, r24
    16ce:	90 01       	movw	r18, r0
    16d0:	49 9f       	mul	r20, r25
    16d2:	30 0d       	add	r19, r0
    16d4:	11 24       	eor	r1, r1
    16d6:	c9 01       	movw	r24, r18
    16d8:	33 0f       	add	r19, r19
    16da:	aa 0b       	sbc	r26, r26
    16dc:	bb 0b       	sbc	r27, r27
    16de:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <value>
    16e2:	90 93 df 01 	sts	0x01DF, r25	; 0x8001df <value+0x1>
    16e6:	a0 93 e0 01 	sts	0x01E0, r26	; 0x8001e0 <value+0x2>
    16ea:	b0 93 e1 01 	sts	0x01E1, r27	; 0x8001e1 <value+0x3>
    16ee:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <inputs>
    16f2:	8f 5f       	subi	r24, 0xFF	; 255
    16f4:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <inputs>
    16f8:	83 c0       	rjmp	.+262    	; 0x1800 <SMTICK4+0x270>
    16fa:	fc de       	rcall	.-520    	; 0x14f4 <GetKeypadKey>
    16fc:	28 2f       	mov	r18, r24
    16fe:	30 e0       	ldi	r19, 0x00	; 0
    1700:	20 53       	subi	r18, 0x30	; 48
    1702:	31 09       	sbc	r19, r1
    1704:	c9 01       	movw	r24, r18
    1706:	88 0f       	add	r24, r24
    1708:	99 1f       	adc	r25, r25
    170a:	22 0f       	add	r18, r18
    170c:	33 1f       	adc	r19, r19
    170e:	22 0f       	add	r18, r18
    1710:	33 1f       	adc	r19, r19
    1712:	22 0f       	add	r18, r18
    1714:	33 1f       	adc	r19, r19
    1716:	82 0f       	add	r24, r18
    1718:	93 1f       	adc	r25, r19
    171a:	09 2e       	mov	r0, r25
    171c:	00 0c       	add	r0, r0
    171e:	aa 0b       	sbc	r26, r26
    1720:	bb 0b       	sbc	r27, r27
    1722:	40 91 de 01 	lds	r20, 0x01DE	; 0x8001de <value>
    1726:	50 91 df 01 	lds	r21, 0x01DF	; 0x8001df <value+0x1>
    172a:	60 91 e0 01 	lds	r22, 0x01E0	; 0x8001e0 <value+0x2>
    172e:	70 91 e1 01 	lds	r23, 0x01E1	; 0x8001e1 <value+0x3>
    1732:	84 0f       	add	r24, r20
    1734:	95 1f       	adc	r25, r21
    1736:	a6 1f       	adc	r26, r22
    1738:	b7 1f       	adc	r27, r23
    173a:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <value>
    173e:	90 93 df 01 	sts	0x01DF, r25	; 0x8001df <value+0x1>
    1742:	a0 93 e0 01 	sts	0x01E0, r26	; 0x8001e0 <value+0x2>
    1746:	b0 93 e1 01 	sts	0x01E1, r27	; 0x8001e1 <value+0x3>
    174a:	80 91 dd 01 	lds	r24, 0x01DD	; 0x8001dd <inputs>
    174e:	8f 5f       	subi	r24, 0xFF	; 255
    1750:	80 93 dd 01 	sts	0x01DD, r24	; 0x8001dd <inputs>
    1754:	55 c0       	rjmp	.+170    	; 0x1800 <SMTICK4+0x270>
    1756:	ce de       	rcall	.-612    	; 0x14f4 <GetKeypadKey>
    1758:	90 e0       	ldi	r25, 0x00	; 0
    175a:	c0 97       	sbiw	r24, 0x30	; 48
    175c:	09 2e       	mov	r0, r25
    175e:	00 0c       	add	r0, r0
    1760:	aa 0b       	sbc	r26, r26
    1762:	bb 0b       	sbc	r27, r27
    1764:	40 91 de 01 	lds	r20, 0x01DE	; 0x8001de <value>
    1768:	50 91 df 01 	lds	r21, 0x01DF	; 0x8001df <value+0x1>
    176c:	60 91 e0 01 	lds	r22, 0x01E0	; 0x8001e0 <value+0x2>
    1770:	70 91 e1 01 	lds	r23, 0x01E1	; 0x8001e1 <value+0x3>
    1774:	84 0f       	add	r24, r20
    1776:	95 1f       	adc	r25, r21
    1778:	a6 1f       	adc	r26, r22
    177a:	b7 1f       	adc	r27, r23
    177c:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <value>
    1780:	90 93 df 01 	sts	0x01DF, r25	; 0x8001df <value+0x1>
    1784:	a0 93 e0 01 	sts	0x01E0, r26	; 0x8001e0 <value+0x2>
    1788:	b0 93 e1 01 	sts	0x01E1, r27	; 0x8001e1 <value+0x3>
    178c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
    1790:	2e 5f       	subi	r18, 0xFE	; 254
    1792:	20 93 00 01 	sts	0x0100, r18	; 0x800100 <__data_start>
    1796:	8f 3f       	cpi	r24, 0xFF	; 255
    1798:	91 05       	cpc	r25, r1
    179a:	a1 05       	cpc	r26, r1
    179c:	b1 05       	cpc	r27, r1
    179e:	69 f0       	breq	.+26     	; 0x17ba <SMTICK4+0x22a>
    17a0:	60 f0       	brcs	.+24     	; 0x17ba <SMTICK4+0x22a>
    17a2:	8f ef       	ldi	r24, 0xFF	; 255
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	a0 e0       	ldi	r26, 0x00	; 0
    17a8:	b0 e0       	ldi	r27, 0x00	; 0
    17aa:	80 93 de 01 	sts	0x01DE, r24	; 0x8001de <value>
    17ae:	90 93 df 01 	sts	0x01DF, r25	; 0x8001df <value+0x1>
    17b2:	a0 93 e0 01 	sts	0x01E0, r26	; 0x8001e0 <value+0x2>
    17b6:	b0 93 e1 01 	sts	0x01E1, r27	; 0x8001e1 <value+0x3>
    17ba:	80 91 dc 01 	lds	r24, 0x01DC	; 0x8001dc <inputState>
    17be:	81 30       	cpi	r24, 0x01	; 1
    17c0:	49 f0       	breq	.+18     	; 0x17d4 <SMTICK4+0x244>
    17c2:	18 f0       	brcs	.+6      	; 0x17ca <SMTICK4+0x23a>
    17c4:	82 30       	cpi	r24, 0x02	; 2
    17c6:	59 f0       	breq	.+22     	; 0x17de <SMTICK4+0x24e>
    17c8:	0e c0       	rjmp	.+28     	; 0x17e6 <SMTICK4+0x256>
    17ca:	90 91 de 01 	lds	r25, 0x01DE	; 0x8001de <value>
    17ce:	90 93 eb 01 	sts	0x01EB, r25	; 0x8001eb <tempColor>
    17d2:	09 c0       	rjmp	.+18     	; 0x17e6 <SMTICK4+0x256>
    17d4:	90 91 de 01 	lds	r25, 0x01DE	; 0x8001de <value>
    17d8:	90 93 ec 01 	sts	0x01EC, r25	; 0x8001ec <tempColor+0x1>
    17dc:	04 c0       	rjmp	.+8      	; 0x17e6 <SMTICK4+0x256>
    17de:	90 91 de 01 	lds	r25, 0x01DE	; 0x8001de <value>
    17e2:	90 93 ed 01 	sts	0x01ED, r25	; 0x8001ed <tempColor+0x2>
    17e6:	8f 5f       	subi	r24, 0xFF	; 255
    17e8:	80 93 dc 01 	sts	0x01DC, r24	; 0x8001dc <inputState>
    17ec:	10 92 dd 01 	sts	0x01DD, r1	; 0x8001dd <inputs>
    17f0:	10 92 de 01 	sts	0x01DE, r1	; 0x8001de <value>
    17f4:	10 92 df 01 	sts	0x01DF, r1	; 0x8001df <value+0x1>
    17f8:	10 92 e0 01 	sts	0x01E0, r1	; 0x8001e0 <value+0x2>
    17fc:	10 92 e1 01 	sts	0x01E1, r1	; 0x8001e1 <value+0x3>
    1800:	79 de       	rcall	.-782    	; 0x14f4 <GetKeypadKey>
    1802:	80 93 da 01 	sts	0x01DA, r24	; 0x8001da <lastInput>
    1806:	c4 e0       	ldi	r28, 0x04	; 4
    1808:	d0 e0       	ldi	r29, 0x00	; 0
    180a:	19 c0       	rjmp	.+50     	; 0x183e <SMTICK4+0x2ae>
    180c:	73 de       	rcall	.-794    	; 0x14f4 <GetKeypadKey>
    180e:	81 11       	cpse	r24, r1
    1810:	08 c0       	rjmp	.+16     	; 0x1822 <SMTICK4+0x292>
    1812:	10 92 da 01 	sts	0x01DA, r1	; 0x8001da <lastInput>
    1816:	c4 e0       	ldi	r28, 0x04	; 4
    1818:	d0 e0       	ldi	r29, 0x00	; 0
    181a:	11 c0       	rjmp	.+34     	; 0x183e <SMTICK4+0x2ae>
    181c:	c1 e0       	ldi	r28, 0x01	; 1
    181e:	d0 e0       	ldi	r29, 0x00	; 0
    1820:	0e c0       	rjmp	.+28     	; 0x183e <SMTICK4+0x2ae>
    1822:	c4 e0       	ldi	r28, 0x04	; 4
    1824:	d0 e0       	ldi	r29, 0x00	; 0
    1826:	0b c0       	rjmp	.+22     	; 0x183e <SMTICK4+0x2ae>
    1828:	65 de       	rcall	.-822    	; 0x14f4 <GetKeypadKey>
    182a:	90 91 da 01 	lds	r25, 0x01DA	; 0x8001da <lastInput>
    182e:	89 13       	cpse	r24, r25
    1830:	2c cf       	rjmp	.-424    	; 0x168a <SMTICK4+0xfa>
    1832:	ec cf       	rjmp	.-40     	; 0x180c <SMTICK4+0x27c>
    1834:	c0 e0       	ldi	r28, 0x00	; 0
    1836:	d0 e0       	ldi	r29, 0x00	; 0
    1838:	02 c0       	rjmp	.+4      	; 0x183e <SMTICK4+0x2ae>
    183a:	c3 e0       	ldi	r28, 0x03	; 3
    183c:	d0 e0       	ldi	r29, 0x00	; 0
    183e:	ce 01       	movw	r24, r28
    1840:	df 91       	pop	r29
    1842:	cf 91       	pop	r28
    1844:	08 95       	ret

00001846 <Init_PWM>:
    1846:	e0 eb       	ldi	r30, 0xB0	; 176
    1848:	f0 e0       	ldi	r31, 0x00	; 0
    184a:	80 81       	ld	r24, Z
    184c:	83 60       	ori	r24, 0x03	; 3
    184e:	80 83       	st	Z, r24
    1850:	e1 eb       	ldi	r30, 0xB1	; 177
    1852:	f0 e0       	ldi	r31, 0x00	; 0
    1854:	80 81       	ld	r24, Z
    1856:	82 60       	ori	r24, 0x02	; 2
    1858:	80 83       	st	Z, r24
    185a:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    185e:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1862:	08 95       	ret

00001864 <pwm_enable>:
    1864:	81 30       	cpi	r24, 0x01	; 1
    1866:	31 f4       	brne	.+12     	; 0x1874 <pwm_enable+0x10>
    1868:	e0 eb       	ldi	r30, 0xB0	; 176
    186a:	f0 e0       	ldi	r31, 0x00	; 0
    186c:	80 81       	ld	r24, Z
    186e:	80 68       	ori	r24, 0x80	; 128
    1870:	80 83       	st	Z, r24
    1872:	08 95       	ret
    1874:	82 30       	cpi	r24, 0x02	; 2
    1876:	29 f4       	brne	.+10     	; 0x1882 <pwm_enable+0x1e>
    1878:	e0 eb       	ldi	r30, 0xB0	; 176
    187a:	f0 e0       	ldi	r31, 0x00	; 0
    187c:	80 81       	ld	r24, Z
    187e:	80 62       	ori	r24, 0x20	; 32
    1880:	80 83       	st	Z, r24
    1882:	08 95       	ret

00001884 <pwm_disable>:
    1884:	81 30       	cpi	r24, 0x01	; 1
    1886:	31 f4       	brne	.+12     	; 0x1894 <pwm_disable+0x10>
    1888:	e0 eb       	ldi	r30, 0xB0	; 176
    188a:	f0 e0       	ldi	r31, 0x00	; 0
    188c:	80 81       	ld	r24, Z
    188e:	8f 77       	andi	r24, 0x7F	; 127
    1890:	80 83       	st	Z, r24
    1892:	08 95       	ret
    1894:	82 30       	cpi	r24, 0x02	; 2
    1896:	29 f4       	brne	.+10     	; 0x18a2 <pwm_disable+0x1e>
    1898:	e0 eb       	ldi	r30, 0xB0	; 176
    189a:	f0 e0       	ldi	r31, 0x00	; 0
    189c:	80 81       	ld	r24, Z
    189e:	8f 7d       	andi	r24, 0xDF	; 223
    18a0:	80 83       	st	Z, r24
    18a2:	08 95       	ret

000018a4 <SMTICK2>:
    18a4:	00 97       	sbiw	r24, 0x00	; 0
    18a6:	19 f0       	breq	.+6      	; 0x18ae <SMTICK2+0xa>
    18a8:	01 97       	sbiw	r24, 0x01	; 1
    18aa:	31 f0       	breq	.+12     	; 0x18b8 <SMTICK2+0x14>
    18ac:	34 c0       	rjmp	.+104    	; 0x1916 <SMTICK2+0x72>
    18ae:	6b e4       	ldi	r22, 0x4B	; 75
    18b0:	71 e0       	ldi	r23, 0x01	; 1
    18b2:	81 e0       	ldi	r24, 0x01	; 1
    18b4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
    18b8:	8b b1       	in	r24, 0x0b	; 11
    18ba:	e3 e0       	ldi	r30, 0x03	; 3
    18bc:	f1 e0       	ldi	r31, 0x01	; 1
    18be:	90 81       	ld	r25, Z
    18c0:	9f 73       	andi	r25, 0x3F	; 63
    18c2:	80 7c       	andi	r24, 0xC0	; 192
    18c4:	89 2b       	or	r24, r25
    18c6:	8b b9       	out	0x0b, r24	; 11
    18c8:	8b b1       	in	r24, 0x0b	; 11
    18ca:	90 81       	ld	r25, Z
    18cc:	92 95       	swap	r25
    18ce:	96 95       	lsr	r25
    18d0:	96 95       	lsr	r25
    18d2:	93 70       	andi	r25, 0x03	; 3
    18d4:	8c 7f       	andi	r24, 0xFC	; 252
    18d6:	89 2b       	or	r24, r25
    18d8:	88 b9       	out	0x08, r24	; 8
    18da:	81 81       	ldd	r24, Z+1	; 0x01
    18dc:	88 23       	and	r24, r24
    18de:	39 f0       	breq	.+14     	; 0x18ee <SMTICK2+0x4a>
    18e0:	81 e0       	ldi	r24, 0x01	; 1
    18e2:	c0 df       	rcall	.-128    	; 0x1864 <pwm_enable>
    18e4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <mainColor+0x1>
    18e8:	80 93 b3 00 	sts	0x00B3, r24	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    18ec:	02 c0       	rjmp	.+4      	; 0x18f2 <SMTICK2+0x4e>
    18ee:	81 e0       	ldi	r24, 0x01	; 1
    18f0:	c9 df       	rcall	.-110    	; 0x1884 <pwm_disable>
    18f2:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <mainColor+0x2>
    18f6:	88 23       	and	r24, r24
    18f8:	49 f0       	breq	.+18     	; 0x190c <SMTICK2+0x68>
    18fa:	82 e0       	ldi	r24, 0x02	; 2
    18fc:	b3 df       	rcall	.-154    	; 0x1864 <pwm_enable>
    18fe:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <mainColor+0x2>
    1902:	80 93 b4 00 	sts	0x00B4, r24	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1906:	81 e0       	ldi	r24, 0x01	; 1
    1908:	90 e0       	ldi	r25, 0x00	; 0
    190a:	08 95       	ret
    190c:	82 e0       	ldi	r24, 0x02	; 2
    190e:	ba df       	rcall	.-140    	; 0x1884 <pwm_disable>
    1910:	81 e0       	ldi	r24, 0x01	; 1
    1912:	90 e0       	ldi	r25, 0x00	; 0
    1914:	08 95       	ret
    1916:	80 e0       	ldi	r24, 0x00	; 0
    1918:	90 e0       	ldi	r25, 0x00	; 0
    191a:	08 95       	ret

0000191c <getColor>:

/************************************************************************/
/* Helper Functions                                                     */
/************************************************************************/

color getColor(int x, int y, int radius, double r){
    191c:	4f 92       	push	r4
    191e:	5f 92       	push	r5
    1920:	6f 92       	push	r6
    1922:	7f 92       	push	r7
    1924:	8f 92       	push	r8
    1926:	9f 92       	push	r9
    1928:	af 92       	push	r10
    192a:	bf 92       	push	r11
    192c:	ef 92       	push	r14
    192e:	ff 92       	push	r15
    1930:	0f 93       	push	r16
    1932:	1f 93       	push	r17
    1934:	cf 93       	push	r28
    1936:	df 93       	push	r29
    1938:	7b 01       	movw	r14, r22
    193a:	ea 01       	movw	r28, r20
    193c:	48 01       	movw	r8, r16
    193e:	59 01       	movw	r10, r18
	
	double phi = atan2(y,x);
    1940:	bc 01       	movw	r22, r24
    1942:	99 0f       	add	r25, r25
    1944:	88 0b       	sbc	r24, r24
    1946:	99 0b       	sbc	r25, r25
    1948:	4a d5       	rcall	.+2708   	; 0x23de <__floatsisf>
    194a:	2b 01       	movw	r4, r22
    194c:	3c 01       	movw	r6, r24
    194e:	b7 01       	movw	r22, r14
    1950:	ff 0c       	add	r15, r15
    1952:	88 0b       	sbc	r24, r24
    1954:	99 0b       	sbc	r25, r25
    1956:	43 d5       	rcall	.+2694   	; 0x23de <__floatsisf>
    1958:	a3 01       	movw	r20, r6
    195a:	92 01       	movw	r18, r4
    195c:	50 d4       	rcall	.+2208   	; 0x21fe <atan2>
    195e:	2b 01       	movw	r4, r22
    1960:	3c 01       	movw	r6, r24
	unsigned long hue = (unsigned long)((phi + M_PI) / (2.0 * M_PI) * 360.0);
	unsigned char saturation = (unsigned char)(r / (double)radius * 255.0);
	unsigned char value = 255;
	
	return hsvtorgb(hue, saturation, value);
    1962:	be 01       	movw	r22, r28
    1964:	dd 0f       	add	r29, r29
    1966:	88 0b       	sbc	r24, r24
    1968:	99 0b       	sbc	r25, r25
    196a:	39 d5       	rcall	.+2674   	; 0x23de <__floatsisf>
    196c:	9b 01       	movw	r18, r22
    196e:	ac 01       	movw	r20, r24
    1970:	c5 01       	movw	r24, r10
    1972:	b4 01       	movw	r22, r8
    1974:	9e d4       	rcall	.+2364   	; 0x22b2 <__divsf3>
    1976:	20 e0       	ldi	r18, 0x00	; 0
    1978:	30 e0       	ldi	r19, 0x00	; 0
    197a:	4f e7       	ldi	r20, 0x7F	; 127
    197c:	53 e4       	ldi	r21, 0x43	; 67
    197e:	48 d6       	rcall	.+3216   	; 0x2610 <__mulsf3>
    1980:	00 d5       	rcall	.+2560   	; 0x2382 <__fixunssfsi>
    1982:	c6 2f       	mov	r28, r22
    1984:	2b ed       	ldi	r18, 0xDB	; 219
    1986:	3f e0       	ldi	r19, 0x0F	; 15
    1988:	49 e4       	ldi	r20, 0x49	; 73
    198a:	50 e4       	ldi	r21, 0x40	; 64
    198c:	c3 01       	movw	r24, r6
    198e:	b2 01       	movw	r22, r4
    1990:	c3 d3       	rcall	.+1926   	; 0x2118 <__addsf3>
    1992:	2b ed       	ldi	r18, 0xDB	; 219
    1994:	3f e0       	ldi	r19, 0x0F	; 15
    1996:	49 ec       	ldi	r20, 0xC9	; 201
    1998:	50 e4       	ldi	r21, 0x40	; 64
    199a:	8b d4       	rcall	.+2326   	; 0x22b2 <__divsf3>
    199c:	20 e0       	ldi	r18, 0x00	; 0
    199e:	30 e0       	ldi	r19, 0x00	; 0
    19a0:	44 eb       	ldi	r20, 0xB4	; 180
    19a2:	53 e4       	ldi	r21, 0x43	; 67
    19a4:	35 d6       	rcall	.+3178   	; 0x2610 <__mulsf3>
    19a6:	ed d4       	rcall	.+2522   	; 0x2382 <__fixunssfsi>
    19a8:	2f ef       	ldi	r18, 0xFF	; 255
    19aa:	4c 2f       	mov	r20, r28
    19ac:	0e 94 f5 02 	call	0x5ea	; 0x5ea <hsvtorgb>
}
    19b0:	df 91       	pop	r29
    19b2:	cf 91       	pop	r28
    19b4:	1f 91       	pop	r17
    19b6:	0f 91       	pop	r16
    19b8:	ff 90       	pop	r15
    19ba:	ef 90       	pop	r14
    19bc:	bf 90       	pop	r11
    19be:	af 90       	pop	r10
    19c0:	9f 90       	pop	r9
    19c2:	8f 90       	pop	r8
    19c4:	7f 90       	pop	r7
    19c6:	6f 90       	pop	r6
    19c8:	5f 90       	pop	r5
    19ca:	4f 90       	pop	r4
    19cc:	08 95       	ret

000019ce <getPosition>:

Point getPosition(hsv Color, int radius){
    19ce:	4f 92       	push	r4
    19d0:	5f 92       	push	r5
    19d2:	6f 92       	push	r6
    19d4:	7f 92       	push	r7
    19d6:	8f 92       	push	r8
    19d8:	9f 92       	push	r9
    19da:	af 92       	push	r10
    19dc:	bf 92       	push	r11
    19de:	cf 92       	push	r12
    19e0:	df 92       	push	r13
    19e2:	ef 92       	push	r14
    19e4:	ff 92       	push	r15
    19e6:	1f 93       	push	r17
    19e8:	cf 93       	push	r28
    19ea:	df 93       	push	r29
    19ec:	cd b7       	in	r28, 0x3d	; 61
    19ee:	de b7       	in	r29, 0x3e	; 62
    19f0:	2a 97       	sbiw	r28, 0x0a	; 10
    19f2:	0f b6       	in	r0, 0x3f	; 63
    19f4:	f8 94       	cli
    19f6:	de bf       	out	0x3e, r29	; 62
    19f8:	0f be       	out	0x3f, r0	; 63
    19fa:	cd bf       	out	0x3d, r28	; 61
    19fc:	49 83       	std	Y+1, r20	; 0x01
    19fe:	5a 83       	std	Y+2, r21	; 0x02
    1a00:	6b 83       	std	Y+3, r22	; 0x03
    1a02:	7c 83       	std	Y+4, r23	; 0x04
    1a04:	59 01       	movw	r10, r18
    1a06:	49 80       	ldd	r4, Y+1	; 0x01
    1a08:	5a 80       	ldd	r5, Y+2	; 0x02
    1a0a:	6b 80       	ldd	r6, Y+3	; 0x03
    1a0c:	7c 80       	ldd	r7, Y+4	; 0x04
	double saturation = (double)Color.saturation/255.0;
    1a0e:	68 2f       	mov	r22, r24
    1a10:	70 e0       	ldi	r23, 0x00	; 0
    1a12:	80 e0       	ldi	r24, 0x00	; 0
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	e1 d4       	rcall	.+2498   	; 0x23da <__floatunsisf>
    1a18:	20 e0       	ldi	r18, 0x00	; 0
    1a1a:	30 e0       	ldi	r19, 0x00	; 0
    1a1c:	4f e7       	ldi	r20, 0x7F	; 127
    1a1e:	53 e4       	ldi	r21, 0x43	; 67
    1a20:	48 d4       	rcall	.+2192   	; 0x22b2 <__divsf3>
    1a22:	6b 01       	movw	r12, r22
    1a24:	7c 01       	movw	r14, r24
	Point point = {0,0};
		
	if(Color.hue >= 0 && Color.hue <= 90){
    1a26:	8b e5       	ldi	r24, 0x5B	; 91
    1a28:	48 16       	cp	r4, r24
    1a2a:	51 04       	cpc	r5, r1
    1a2c:	61 04       	cpc	r6, r1
    1a2e:	71 04       	cpc	r7, r1
    1a30:	08 f0       	brcs	.+2      	; 0x1a34 <getPosition+0x66>
    1a32:	3f c0       	rjmp	.+126    	; 0x1ab2 <getPosition+0xe4>
		point.x = radius - cos(DEGTORAD(Color.hue))*(saturation*radius);
    1a34:	c3 01       	movw	r24, r6
    1a36:	b2 01       	movw	r22, r4
    1a38:	d0 d4       	rcall	.+2464   	; 0x23da <__floatunsisf>
    1a3a:	2b ed       	ldi	r18, 0xDB	; 219
    1a3c:	3f e0       	ldi	r19, 0x0F	; 15
    1a3e:	49 e4       	ldi	r20, 0x49	; 73
    1a40:	50 e4       	ldi	r21, 0x40	; 64
    1a42:	e6 d5       	rcall	.+3020   	; 0x2610 <__mulsf3>
    1a44:	20 e0       	ldi	r18, 0x00	; 0
    1a46:	30 e0       	ldi	r19, 0x00	; 0
    1a48:	44 e3       	ldi	r20, 0x34	; 52
    1a4a:	53 e4       	ldi	r21, 0x43	; 67
    1a4c:	32 d4       	rcall	.+2148   	; 0x22b2 <__divsf3>
    1a4e:	2b 01       	movw	r4, r22
    1a50:	3c 01       	movw	r6, r24
    1a52:	2c d4       	rcall	.+2136   	; 0x22ac <cos>
    1a54:	6f 83       	std	Y+7, r22	; 0x07
    1a56:	78 87       	std	Y+8, r23	; 0x08
    1a58:	89 87       	std	Y+9, r24	; 0x09
    1a5a:	9a 87       	std	Y+10, r25	; 0x0a
    1a5c:	b5 01       	movw	r22, r10
    1a5e:	bb 0c       	add	r11, r11
    1a60:	88 0b       	sbc	r24, r24
    1a62:	99 0b       	sbc	r25, r25
    1a64:	bc d4       	rcall	.+2424   	; 0x23de <__floatsisf>
    1a66:	4b 01       	movw	r8, r22
    1a68:	5c 01       	movw	r10, r24
    1a6a:	9b 01       	movw	r18, r22
    1a6c:	ac 01       	movw	r20, r24
    1a6e:	c7 01       	movw	r24, r14
    1a70:	b6 01       	movw	r22, r12
    1a72:	ce d5       	rcall	.+2972   	; 0x2610 <__mulsf3>
    1a74:	6b 01       	movw	r12, r22
    1a76:	7c 01       	movw	r14, r24
    1a78:	9b 01       	movw	r18, r22
    1a7a:	ac 01       	movw	r20, r24
    1a7c:	6f 81       	ldd	r22, Y+7	; 0x07
    1a7e:	78 85       	ldd	r23, Y+8	; 0x08
    1a80:	89 85       	ldd	r24, Y+9	; 0x09
    1a82:	9a 85       	ldd	r25, Y+10	; 0x0a
    1a84:	c5 d5       	rcall	.+2954   	; 0x2610 <__mulsf3>
    1a86:	9b 01       	movw	r18, r22
    1a88:	ac 01       	movw	r20, r24
    1a8a:	c5 01       	movw	r24, r10
    1a8c:	b4 01       	movw	r22, r8
    1a8e:	43 d3       	rcall	.+1670   	; 0x2116 <__subsf3>
    1a90:	78 d4       	rcall	.+2288   	; 0x2382 <__fixunssfsi>
    1a92:	16 2f       	mov	r17, r22
		point.y = radius - sin(DEGTORAD(Color.hue))*(saturation*radius);
    1a94:	c3 01       	movw	r24, r6
    1a96:	b2 01       	movw	r22, r4
    1a98:	1e d6       	rcall	.+3132   	; 0x26d6 <sin>
    1a9a:	9b 01       	movw	r18, r22
    1a9c:	ac 01       	movw	r20, r24
    1a9e:	c7 01       	movw	r24, r14
    1aa0:	b6 01       	movw	r22, r12
    1aa2:	b6 d5       	rcall	.+2924   	; 0x2610 <__mulsf3>
    1aa4:	9b 01       	movw	r18, r22
    1aa6:	ac 01       	movw	r20, r24
    1aa8:	c5 01       	movw	r24, r10
    1aaa:	b4 01       	movw	r22, r8
    1aac:	34 d3       	rcall	.+1640   	; 0x2116 <__subsf3>
    1aae:	69 d4       	rcall	.+2258   	; 0x2382 <__fixunssfsi>
    1ab0:	e1 c0       	rjmp	.+450    	; 0x1c74 <getPosition+0x2a6>
    1ab2:	d3 01       	movw	r26, r6
    1ab4:	c2 01       	movw	r24, r4
	} else if(Color.hue > 90 && Color.hue <= 180){
    1ab6:	8b 55       	subi	r24, 0x5B	; 91
    1ab8:	91 09       	sbc	r25, r1
    1aba:	a1 09       	sbc	r26, r1
    1abc:	b1 09       	sbc	r27, r1
    1abe:	8a 35       	cpi	r24, 0x5A	; 90
    1ac0:	91 05       	cpc	r25, r1
    1ac2:	a1 05       	cpc	r26, r1
    1ac4:	b1 05       	cpc	r27, r1
    1ac6:	08 f0       	brcs	.+2      	; 0x1aca <getPosition+0xfc>
    1ac8:	44 c0       	rjmp	.+136    	; 0x1b52 <getPosition+0x184>
    1aca:	84 eb       	ldi	r24, 0xB4	; 180
		point.x = radius + cos(DEGTORAD(180-Color.hue))*saturation*radius;
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	a0 e0       	ldi	r26, 0x00	; 0
    1ad0:	b0 e0       	ldi	r27, 0x00	; 0
    1ad2:	bc 01       	movw	r22, r24
    1ad4:	cd 01       	movw	r24, r26
    1ad6:	64 19       	sub	r22, r4
    1ad8:	75 09       	sbc	r23, r5
    1ada:	86 09       	sbc	r24, r6
    1adc:	97 09       	sbc	r25, r7
    1ade:	7d d4       	rcall	.+2298   	; 0x23da <__floatunsisf>
    1ae0:	2b ed       	ldi	r18, 0xDB	; 219
    1ae2:	3f e0       	ldi	r19, 0x0F	; 15
    1ae4:	49 e4       	ldi	r20, 0x49	; 73
    1ae6:	50 e4       	ldi	r21, 0x40	; 64
    1ae8:	93 d5       	rcall	.+2854   	; 0x2610 <__mulsf3>
    1aea:	20 e0       	ldi	r18, 0x00	; 0
    1aec:	30 e0       	ldi	r19, 0x00	; 0
    1aee:	44 e3       	ldi	r20, 0x34	; 52
    1af0:	53 e4       	ldi	r21, 0x43	; 67
    1af2:	df d3       	rcall	.+1982   	; 0x22b2 <__divsf3>
    1af4:	2b 01       	movw	r4, r22
    1af6:	3c 01       	movw	r6, r24
    1af8:	d9 d3       	rcall	.+1970   	; 0x22ac <cos>
    1afa:	6f 83       	std	Y+7, r22	; 0x07
    1afc:	78 87       	std	Y+8, r23	; 0x08
    1afe:	89 87       	std	Y+9, r24	; 0x09
    1b00:	9a 87       	std	Y+10, r25	; 0x0a
    1b02:	b5 01       	movw	r22, r10
    1b04:	bb 0c       	add	r11, r11
    1b06:	88 0b       	sbc	r24, r24
    1b08:	99 0b       	sbc	r25, r25
    1b0a:	69 d4       	rcall	.+2258   	; 0x23de <__floatsisf>
    1b0c:	4b 01       	movw	r8, r22
    1b0e:	5c 01       	movw	r10, r24
    1b10:	2f 81       	ldd	r18, Y+7	; 0x07
    1b12:	38 85       	ldd	r19, Y+8	; 0x08
    1b14:	49 85       	ldd	r20, Y+9	; 0x09
    1b16:	5a 85       	ldd	r21, Y+10	; 0x0a
    1b18:	c7 01       	movw	r24, r14
    1b1a:	b6 01       	movw	r22, r12
    1b1c:	79 d5       	rcall	.+2802   	; 0x2610 <__mulsf3>
    1b1e:	a5 01       	movw	r20, r10
    1b20:	94 01       	movw	r18, r8
    1b22:	76 d5       	rcall	.+2796   	; 0x2610 <__mulsf3>
    1b24:	a5 01       	movw	r20, r10
    1b26:	94 01       	movw	r18, r8
    1b28:	f7 d2       	rcall	.+1518   	; 0x2118 <__addsf3>
    1b2a:	2b d4       	rcall	.+2134   	; 0x2382 <__fixunssfsi>
		point.y = radius - sin(DEGTORAD(180-Color.hue))*saturation*radius;
    1b2c:	16 2f       	mov	r17, r22
    1b2e:	c3 01       	movw	r24, r6
    1b30:	b2 01       	movw	r22, r4
    1b32:	d1 d5       	rcall	.+2978   	; 0x26d6 <sin>
    1b34:	9b 01       	movw	r18, r22
    1b36:	ac 01       	movw	r20, r24
    1b38:	c7 01       	movw	r24, r14
    1b3a:	b6 01       	movw	r22, r12
    1b3c:	69 d5       	rcall	.+2770   	; 0x2610 <__mulsf3>
    1b3e:	a5 01       	movw	r20, r10
    1b40:	94 01       	movw	r18, r8
    1b42:	66 d5       	rcall	.+2764   	; 0x2610 <__mulsf3>
    1b44:	9b 01       	movw	r18, r22
    1b46:	ac 01       	movw	r20, r24
    1b48:	c5 01       	movw	r24, r10
    1b4a:	b4 01       	movw	r22, r8
    1b4c:	e4 d2       	rcall	.+1480   	; 0x2116 <__subsf3>
    1b4e:	19 d4       	rcall	.+2098   	; 0x2382 <__fixunssfsi>
    1b50:	91 c0       	rjmp	.+290    	; 0x1c74 <getPosition+0x2a6>
    1b52:	d3 01       	movw	r26, r6
    1b54:	c2 01       	movw	r24, r4
	} else if(Color.hue > 180 && Color.hue <= 270) {
    1b56:	85 5b       	subi	r24, 0xB5	; 181
    1b58:	91 09       	sbc	r25, r1
    1b5a:	a1 09       	sbc	r26, r1
    1b5c:	b1 09       	sbc	r27, r1
    1b5e:	8a 35       	cpi	r24, 0x5A	; 90
    1b60:	91 05       	cpc	r25, r1
    1b62:	a1 05       	cpc	r26, r1
    1b64:	b1 05       	cpc	r27, r1
    1b66:	08 f0       	brcs	.+2      	; 0x1b6a <getPosition+0x19c>
    1b68:	42 c0       	rjmp	.+132    	; 0x1bee <getPosition+0x220>
		point.x = radius + sin(DEGTORAD(270-Color.hue))*saturation*radius;
    1b6a:	8e e0       	ldi	r24, 0x0E	; 14
    1b6c:	91 e0       	ldi	r25, 0x01	; 1
    1b6e:	a0 e0       	ldi	r26, 0x00	; 0
    1b70:	b0 e0       	ldi	r27, 0x00	; 0
    1b72:	bc 01       	movw	r22, r24
    1b74:	cd 01       	movw	r24, r26
    1b76:	64 19       	sub	r22, r4
    1b78:	75 09       	sbc	r23, r5
    1b7a:	86 09       	sbc	r24, r6
    1b7c:	97 09       	sbc	r25, r7
    1b7e:	2d d4       	rcall	.+2138   	; 0x23da <__floatunsisf>
    1b80:	2b ed       	ldi	r18, 0xDB	; 219
    1b82:	3f e0       	ldi	r19, 0x0F	; 15
    1b84:	49 e4       	ldi	r20, 0x49	; 73
    1b86:	50 e4       	ldi	r21, 0x40	; 64
    1b88:	43 d5       	rcall	.+2694   	; 0x2610 <__mulsf3>
    1b8a:	20 e0       	ldi	r18, 0x00	; 0
    1b8c:	30 e0       	ldi	r19, 0x00	; 0
    1b8e:	44 e3       	ldi	r20, 0x34	; 52
    1b90:	53 e4       	ldi	r21, 0x43	; 67
    1b92:	8f d3       	rcall	.+1822   	; 0x22b2 <__divsf3>
    1b94:	2b 01       	movw	r4, r22
    1b96:	3c 01       	movw	r6, r24
    1b98:	9e d5       	rcall	.+2876   	; 0x26d6 <sin>
    1b9a:	6f 83       	std	Y+7, r22	; 0x07
    1b9c:	78 87       	std	Y+8, r23	; 0x08
    1b9e:	89 87       	std	Y+9, r24	; 0x09
    1ba0:	9a 87       	std	Y+10, r25	; 0x0a
    1ba2:	b5 01       	movw	r22, r10
    1ba4:	bb 0c       	add	r11, r11
    1ba6:	88 0b       	sbc	r24, r24
    1ba8:	99 0b       	sbc	r25, r25
    1baa:	19 d4       	rcall	.+2098   	; 0x23de <__floatsisf>
    1bac:	4b 01       	movw	r8, r22
    1bae:	5c 01       	movw	r10, r24
    1bb0:	2f 81       	ldd	r18, Y+7	; 0x07
    1bb2:	38 85       	ldd	r19, Y+8	; 0x08
    1bb4:	49 85       	ldd	r20, Y+9	; 0x09
    1bb6:	5a 85       	ldd	r21, Y+10	; 0x0a
    1bb8:	c7 01       	movw	r24, r14
    1bba:	b6 01       	movw	r22, r12
    1bbc:	29 d5       	rcall	.+2642   	; 0x2610 <__mulsf3>
    1bbe:	a5 01       	movw	r20, r10
    1bc0:	94 01       	movw	r18, r8
    1bc2:	26 d5       	rcall	.+2636   	; 0x2610 <__mulsf3>
    1bc4:	a5 01       	movw	r20, r10
    1bc6:	94 01       	movw	r18, r8
    1bc8:	a7 d2       	rcall	.+1358   	; 0x2118 <__addsf3>
		point.y = radius + cos(DEGTORAD(270-Color.hue))*saturation*radius;
    1bca:	db d3       	rcall	.+1974   	; 0x2382 <__fixunssfsi>
    1bcc:	16 2f       	mov	r17, r22
    1bce:	c3 01       	movw	r24, r6
    1bd0:	b2 01       	movw	r22, r4
    1bd2:	6c d3       	rcall	.+1752   	; 0x22ac <cos>
    1bd4:	9b 01       	movw	r18, r22
    1bd6:	ac 01       	movw	r20, r24
    1bd8:	c7 01       	movw	r24, r14
    1bda:	b6 01       	movw	r22, r12
    1bdc:	19 d5       	rcall	.+2610   	; 0x2610 <__mulsf3>
    1bde:	a5 01       	movw	r20, r10
    1be0:	94 01       	movw	r18, r8
    1be2:	16 d5       	rcall	.+2604   	; 0x2610 <__mulsf3>
    1be4:	a5 01       	movw	r20, r10
    1be6:	94 01       	movw	r18, r8
    1be8:	97 d2       	rcall	.+1326   	; 0x2118 <__addsf3>
    1bea:	cb d3       	rcall	.+1942   	; 0x2382 <__fixunssfsi>
    1bec:	43 c0       	rjmp	.+134    	; 0x1c74 <getPosition+0x2a6>
    1bee:	88 e6       	ldi	r24, 0x68	; 104
	} else {
		point.x = radius - cos(DEGTORAD(360-Color.hue))*saturation*radius;
    1bf0:	91 e0       	ldi	r25, 0x01	; 1
    1bf2:	a0 e0       	ldi	r26, 0x00	; 0
    1bf4:	b0 e0       	ldi	r27, 0x00	; 0
    1bf6:	bc 01       	movw	r22, r24
    1bf8:	cd 01       	movw	r24, r26
    1bfa:	64 19       	sub	r22, r4
    1bfc:	75 09       	sbc	r23, r5
    1bfe:	86 09       	sbc	r24, r6
    1c00:	97 09       	sbc	r25, r7
    1c02:	eb d3       	rcall	.+2006   	; 0x23da <__floatunsisf>
    1c04:	2b ed       	ldi	r18, 0xDB	; 219
    1c06:	3f e0       	ldi	r19, 0x0F	; 15
    1c08:	49 e4       	ldi	r20, 0x49	; 73
    1c0a:	50 e4       	ldi	r21, 0x40	; 64
    1c0c:	01 d5       	rcall	.+2562   	; 0x2610 <__mulsf3>
    1c0e:	20 e0       	ldi	r18, 0x00	; 0
    1c10:	30 e0       	ldi	r19, 0x00	; 0
    1c12:	44 e3       	ldi	r20, 0x34	; 52
    1c14:	53 e4       	ldi	r21, 0x43	; 67
    1c16:	4d d3       	rcall	.+1690   	; 0x22b2 <__divsf3>
    1c18:	2b 01       	movw	r4, r22
    1c1a:	3c 01       	movw	r6, r24
    1c1c:	47 d3       	rcall	.+1678   	; 0x22ac <cos>
    1c1e:	6f 83       	std	Y+7, r22	; 0x07
    1c20:	78 87       	std	Y+8, r23	; 0x08
    1c22:	89 87       	std	Y+9, r24	; 0x09
    1c24:	9a 87       	std	Y+10, r25	; 0x0a
    1c26:	b5 01       	movw	r22, r10
    1c28:	bb 0c       	add	r11, r11
    1c2a:	88 0b       	sbc	r24, r24
    1c2c:	99 0b       	sbc	r25, r25
    1c2e:	d7 d3       	rcall	.+1966   	; 0x23de <__floatsisf>
    1c30:	4b 01       	movw	r8, r22
    1c32:	5c 01       	movw	r10, r24
    1c34:	2f 81       	ldd	r18, Y+7	; 0x07
    1c36:	38 85       	ldd	r19, Y+8	; 0x08
    1c38:	49 85       	ldd	r20, Y+9	; 0x09
    1c3a:	5a 85       	ldd	r21, Y+10	; 0x0a
    1c3c:	c7 01       	movw	r24, r14
    1c3e:	b6 01       	movw	r22, r12
    1c40:	e7 d4       	rcall	.+2510   	; 0x2610 <__mulsf3>
    1c42:	a5 01       	movw	r20, r10
    1c44:	94 01       	movw	r18, r8
    1c46:	e4 d4       	rcall	.+2504   	; 0x2610 <__mulsf3>
    1c48:	9b 01       	movw	r18, r22
    1c4a:	ac 01       	movw	r20, r24
    1c4c:	c5 01       	movw	r24, r10
    1c4e:	b4 01       	movw	r22, r8
    1c50:	62 d2       	rcall	.+1220   	; 0x2116 <__subsf3>
    1c52:	97 d3       	rcall	.+1838   	; 0x2382 <__fixunssfsi>
    1c54:	16 2f       	mov	r17, r22
    1c56:	c3 01       	movw	r24, r6
    1c58:	b2 01       	movw	r22, r4
		point.y = radius + sin(DEGTORAD(360-Color.hue))*saturation*radius;
    1c5a:	3d d5       	rcall	.+2682   	; 0x26d6 <sin>
    1c5c:	9b 01       	movw	r18, r22
    1c5e:	ac 01       	movw	r20, r24
    1c60:	c7 01       	movw	r24, r14
    1c62:	b6 01       	movw	r22, r12
    1c64:	d5 d4       	rcall	.+2474   	; 0x2610 <__mulsf3>
    1c66:	a5 01       	movw	r20, r10
    1c68:	94 01       	movw	r18, r8
    1c6a:	d2 d4       	rcall	.+2468   	; 0x2610 <__mulsf3>
    1c6c:	a5 01       	movw	r20, r10
    1c6e:	94 01       	movw	r18, r8
    1c70:	53 d2       	rcall	.+1190   	; 0x2118 <__addsf3>
    1c72:	87 d3       	rcall	.+1806   	; 0x2382 <__fixunssfsi>
    1c74:	84 e0       	ldi	r24, 0x04	; 4
    1c76:	81 0f       	add	r24, r17
    1c78:	94 e1       	ldi	r25, 0x14	; 20
    1c7a:	96 0f       	add	r25, r22
    1c7c:	2a 96       	adiw	r28, 0x0a	; 10
    1c7e:	0f b6       	in	r0, 0x3f	; 63
    1c80:	f8 94       	cli
	}
	point.x += DISTX;
	point.y += DISTY;
	return point;
}
    1c82:	de bf       	out	0x3e, r29	; 62
    1c84:	0f be       	out	0x3f, r0	; 63
    1c86:	cd bf       	out	0x3d, r28	; 61
    1c88:	df 91       	pop	r29
    1c8a:	cf 91       	pop	r28
    1c8c:	1f 91       	pop	r17
    1c8e:	ff 90       	pop	r15
    1c90:	ef 90       	pop	r14
    1c92:	df 90       	pop	r13
    1c94:	cf 90       	pop	r12
    1c96:	bf 90       	pop	r11
    1c98:	af 90       	pop	r10
    1c9a:	9f 90       	pop	r9
    1c9c:	8f 90       	pop	r8
    1c9e:	7f 90       	pop	r7
    1ca0:	6f 90       	pop	r6
    1ca2:	5f 90       	pop	r5
    1ca4:	4f 90       	pop	r4
    1ca6:	08 95       	ret

00001ca8 <drawCircle>:
    1ca8:	a0 e0       	ldi	r26, 0x00	; 0
    1caa:	b0 e0       	ldi	r27, 0x00	; 0
    1cac:	e9 e5       	ldi	r30, 0x59	; 89
    1cae:	fe e0       	ldi	r31, 0x0E	; 14
    1cb0:	db c5       	rjmp	.+2998   	; 0x2868 <__prologue_saves__+0x8>
    1cb2:	68 94       	set
    1cb4:	66 24       	eor	r6, r6

void drawCircle(void) {
	int radius = 60;
	for(int x = -radius; x < radius; x++){
		for(int y = -radius; y < radius; y++){
			double r = sqrt(x*x + y*y);
    1cb6:	62 f8       	bld	r6, 2
	return point;
}

void drawCircle(void) {
	int radius = 60;
	for(int x = -radius; x < radius; x++){
    1cb8:	0f 2e       	mov	r0, r31
    1cba:	f4 ec       	ldi	r31, 0xC4	; 196
    1cbc:	af 2e       	mov	r10, r31
    1cbe:	bb 24       	eor	r11, r11
    1cc0:	ba 94       	dec	r11
    1cc2:	f0 2d       	mov	r31, r0
    1cc4:	33 c0       	rjmp	.+102    	; 0x1d2c <drawCircle+0x84>
		for(int y = -radius; y < radius; y++){
			double r = sqrt(x*x + y*y);
    1cc6:	88 9c       	mul	r8, r8
    1cc8:	60 01       	movw	r12, r0
    1cca:	89 9c       	mul	r8, r9
    1ccc:	d0 0c       	add	r13, r0
    1cce:	d0 0c       	add	r13, r0
    1cd0:	11 24       	eor	r1, r1
    1cd2:	cc 0e       	add	r12, r28
    1cd4:	dd 1e       	adc	r13, r29
    1cd6:	0d 2c       	mov	r0, r13
    1cd8:	00 0c       	add	r0, r0
    1cda:	ee 08       	sbc	r14, r14
    1cdc:	ff 08       	sbc	r15, r15
    1cde:	c7 01       	movw	r24, r14
    1ce0:	b6 01       	movw	r22, r12
    1ce2:	7d d3       	rcall	.+1786   	; 0x23de <__floatsisf>
    1ce4:	02 d5       	rcall	.+2564   	; 0x26ea <sqrt>
    1ce6:	6b 01       	movw	r12, r22
    1ce8:	7c 01       	movw	r14, r24
			if(r < radius){
    1cea:	20 e0       	ldi	r18, 0x00	; 0
    1cec:	30 e0       	ldi	r19, 0x00	; 0
    1cee:	40 e7       	ldi	r20, 0x70	; 112
    1cf0:	52 e4       	ldi	r21, 0x42	; 66
    1cf2:	d8 d2       	rcall	.+1456   	; 0x22a4 <__cmpsf2>
    1cf4:	88 23       	and	r24, r24
    1cf6:	64 f4       	brge	.+24     	; 0x1d10 <drawCircle+0x68>
				byte adjustedX = x + radius; // convert x from [-50, 50] to [0, 100] (the coordinates of the image data array)
				byte adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)
				TFT_DrawPixel(adjustedX+DISTX,adjustedY+DISTY,TFT_ColorToInt(getColor(x,y,radius, r)));
    1cf8:	97 01       	movw	r18, r14
    1cfa:	86 01       	movw	r16, r12
    1cfc:	4c e3       	ldi	r20, 0x3C	; 60
    1cfe:	50 e0       	ldi	r21, 0x00	; 0
    1d00:	b4 01       	movw	r22, r8
    1d02:	c5 01       	movw	r24, r10
    1d04:	0b de       	rcall	.-1002   	; 0x191c <getColor>
    1d06:	8f d8       	rcall	.-3810   	; 0xe26 <TFT_ColorToInt>
    1d08:	ac 01       	movw	r20, r24
    1d0a:	67 2d       	mov	r22, r7
    1d0c:	86 2d       	mov	r24, r6
    1d0e:	bf d8       	rcall	.-3714   	; 0xe8e <TFT_DrawPixel>
}

void drawCircle(void) {
	int radius = 60;
	for(int x = -radius; x < radius; x++){
		for(int y = -radius; y < radius; y++){
    1d10:	8f ef       	ldi	r24, 0xFF	; 255
    1d12:	88 1a       	sub	r8, r24
    1d14:	98 0a       	sbc	r9, r24
    1d16:	73 94       	inc	r7
    1d18:	8c e8       	ldi	r24, 0x8C	; 140
    1d1a:	78 12       	cpse	r7, r24
    1d1c:	d4 cf       	rjmp	.-88     	; 0x1cc6 <drawCircle+0x1e>
	return point;
}

void drawCircle(void) {
	int radius = 60;
	for(int x = -radius; x < radius; x++){
    1d1e:	8f ef       	ldi	r24, 0xFF	; 255
    1d20:	a8 1a       	sub	r10, r24
    1d22:	b8 0a       	sbc	r11, r24
    1d24:	63 94       	inc	r6
    1d26:	8c e7       	ldi	r24, 0x7C	; 124
    1d28:	68 16       	cp	r6, r24
    1d2a:	89 f0       	breq	.+34     	; 0x1d4e <drawCircle+0xa6>
		for(int y = -radius; y < radius; y++){
			double r = sqrt(x*x + y*y);
    1d2c:	aa 9c       	mul	r10, r10
    1d2e:	e0 01       	movw	r28, r0
    1d30:	ab 9c       	mul	r10, r11
    1d32:	d0 0d       	add	r29, r0
    1d34:	d0 0d       	add	r29, r0
    1d36:	11 24       	eor	r1, r1
    1d38:	0f 2e       	mov	r0, r31
    1d3a:	f4 e1       	ldi	r31, 0x14	; 20
    1d3c:	7f 2e       	mov	r7, r31
    1d3e:	f0 2d       	mov	r31, r0
    1d40:	0f 2e       	mov	r0, r31
    1d42:	f4 ec       	ldi	r31, 0xC4	; 196
    1d44:	8f 2e       	mov	r8, r31
    1d46:	99 24       	eor	r9, r9
    1d48:	9a 94       	dec	r9
    1d4a:	f0 2d       	mov	r31, r0
				byte adjustedY = y + radius; // convert y from [-50, 50] to [0, 100] (the coordinates of the image data array)
				TFT_DrawPixel(adjustedX+DISTX,adjustedY+DISTY,TFT_ColorToInt(getColor(x,y,radius, r)));
			}
		}
	}
}
    1d4c:	bc cf       	rjmp	.-136    	; 0x1cc6 <drawCircle+0x1e>
    1d4e:	cd b7       	in	r28, 0x3d	; 61
    1d50:	de b7       	in	r29, 0x3e	; 62
    1d52:	ee e0       	ldi	r30, 0x0E	; 14
    1d54:	a5 c5       	rjmp	.+2890   	; 0x28a0 <__epilogue_restores__+0x8>

00001d56 <SMTICK3>:
	
	return state;
};

enum SM3_STATES {SM3_INIT, SM3_WAIT, SM3_UPDATE};
int SMTICK3(int state){
    1d56:	a6 e0       	ldi	r26, 0x06	; 6
    1d58:	b0 e0       	ldi	r27, 0x00	; 0
    1d5a:	e0 eb       	ldi	r30, 0xB0	; 176
    1d5c:	fe e0       	ldi	r31, 0x0E	; 14
    1d5e:	90 c5       	rjmp	.+2848   	; 0x2880 <__prologue_saves__+0x20>
	switch(state){
    1d60:	81 30       	cpi	r24, 0x01	; 1
    1d62:	91 05       	cpc	r25, r1
    1d64:	b9 f0       	breq	.+46     	; 0x1d94 <SMTICK3+0x3e>
    1d66:	82 30       	cpi	r24, 0x02	; 2
    1d68:	91 05       	cpc	r25, r1
    1d6a:	c9 f0       	breq	.+50     	; 0x1d9e <SMTICK3+0x48>
    1d6c:	89 2b       	or	r24, r25
    1d6e:	09 f0       	breq	.+2      	; 0x1d72 <SMTICK3+0x1c>
    1d70:	4e c0       	rjmp	.+156    	; 0x1e0e <SMTICK3+0xb8>
		case SM3_INIT:
			state = SM3_WAIT;
			LCD_DisplayString(1, "SM3 Started");
    1d72:	67 e5       	ldi	r22, 0x57	; 87
    1d74:	71 e0       	ldi	r23, 0x01	; 1
    1d76:	81 e0       	ldi	r24, 0x01	; 1
    1d78:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
			drawCircle();
    1d7c:	95 df       	rcall	.-214    	; 0x1ca8 <drawCircle>
			TFT_FillCircle(posOnScreen.x,posOnScreen.y,5,BLACK);
    1d7e:	e1 e0       	ldi	r30, 0x01	; 1
    1d80:	f1 e0       	ldi	r31, 0x01	; 1
    1d82:	20 e0       	ldi	r18, 0x00	; 0
    1d84:	30 e0       	ldi	r19, 0x00	; 0
    1d86:	45 e0       	ldi	r20, 0x05	; 5
    1d88:	61 81       	ldd	r22, Z+1	; 0x01
    1d8a:	80 81       	ld	r24, Z
    1d8c:	b8 d8       	rcall	.-3728   	; 0xefe <TFT_FillCircle>

enum SM3_STATES {SM3_INIT, SM3_WAIT, SM3_UPDATE};
int SMTICK3(int state){
	switch(state){
		case SM3_INIT:
			state = SM3_WAIT;
    1d8e:	81 e0       	ldi	r24, 0x01	; 1
    1d90:	90 e0       	ldi	r25, 0x00	; 0
			LCD_DisplayString(1, "SM3 Started");
			drawCircle();
			TFT_FillCircle(posOnScreen.x,posOnScreen.y,5,BLACK);
			break;
    1d92:	42 c0       	rjmp	.+132    	; 0x1e18 <SMTICK3+0xc2>
		case SM3_WAIT:
			if(valueChanged){
    1d94:	20 91 e2 01 	lds	r18, 0x01E2	; 0x8001e2 <valueChanged>
    1d98:	21 11       	cpse	r18, r1
    1d9a:	3c c0       	rjmp	.+120    	; 0x1e14 <SMTICK3+0xbe>
    1d9c:	3d c0       	rjmp	.+122    	; 0x1e18 <SMTICK3+0xc2>
			} else {
				state = SM3_WAIT;
			}
			break;
		case SM3_UPDATE:
			LCD_DisplayString(1, "SAVING");
    1d9e:	63 e6       	ldi	r22, 0x63	; 99
    1da0:	71 e0       	ldi	r23, 0x01	; 1
    1da2:	81 e0       	ldi	r24, 0x01	; 1
    1da4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
			drawCircle();
    1da8:	7f df       	rcall	.-258    	; 0x1ca8 <drawCircle>
			posOnScreen = getPosition(rgbtohsv(mainColor),60);
    1daa:	60 91 03 01 	lds	r22, 0x0103	; 0x800103 <mainColor>
    1dae:	70 91 04 01 	lds	r23, 0x0104	; 0x800104 <mainColor+0x1>
    1db2:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <mainColor+0x2>
    1db6:	0e 94 76 04 	call	0x8ec	; 0x8ec <rgbtohsv>
    1dba:	b2 2f       	mov	r27, r18
    1dbc:	a3 2f       	mov	r26, r19
    1dbe:	f4 2f       	mov	r31, r20
    1dc0:	e5 2f       	mov	r30, r21
    1dc2:	86 2f       	mov	r24, r22
    1dc4:	97 2f       	mov	r25, r23
    1dc6:	2c e3       	ldi	r18, 0x3C	; 60
    1dc8:	30 e0       	ldi	r19, 0x00	; 0
    1dca:	4b 2f       	mov	r20, r27
    1dcc:	5a 2f       	mov	r21, r26
    1dce:	6f 2f       	mov	r22, r31
    1dd0:	7e 2f       	mov	r23, r30
    1dd2:	fd dd       	rcall	.-1030   	; 0x19ce <getPosition>
    1dd4:	90 93 02 01 	sts	0x0102, r25	; 0x800102 <posOnScreen+0x1>
    1dd8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <posOnScreen>
			if(mainColor.R != 0 || mainColor.G != 0 || mainColor.B != 0){
    1ddc:	80 91 03 01 	lds	r24, 0x0103	; 0x800103 <mainColor>
    1de0:	81 11       	cpse	r24, r1
    1de2:	08 c0       	rjmp	.+16     	; 0x1df4 <SMTICK3+0x9e>
    1de4:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <mainColor+0x1>
    1de8:	81 11       	cpse	r24, r1
    1dea:	04 c0       	rjmp	.+8      	; 0x1df4 <SMTICK3+0x9e>
    1dec:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <mainColor+0x2>
    1df0:	88 23       	and	r24, r24
    1df2:	41 f0       	breq	.+16     	; 0x1e04 <SMTICK3+0xae>
				TFT_FillCircle(posOnScreen.x,posOnScreen.y,5,BLACK);
    1df4:	e1 e0       	ldi	r30, 0x01	; 1
    1df6:	f1 e0       	ldi	r31, 0x01	; 1
    1df8:	20 e0       	ldi	r18, 0x00	; 0
    1dfa:	30 e0       	ldi	r19, 0x00	; 0
    1dfc:	45 e0       	ldi	r20, 0x05	; 5
    1dfe:	61 81       	ldd	r22, Z+1	; 0x01
    1e00:	80 81       	ld	r24, Z
    1e02:	7d d8       	rcall	.-3846   	; 0xefe <TFT_FillCircle>
			}
			valueChanged = 0;
    1e04:	10 92 e2 01 	sts	0x01E2, r1	; 0x8001e2 <valueChanged>
			state = SM3_WAIT;
    1e08:	81 e0       	ldi	r24, 0x01	; 1
    1e0a:	90 e0       	ldi	r25, 0x00	; 0
			break;
    1e0c:	05 c0       	rjmp	.+10     	; 0x1e18 <SMTICK3+0xc2>
		default:
			state = SM3_INIT;
    1e0e:	80 e0       	ldi	r24, 0x00	; 0
    1e10:	90 e0       	ldi	r25, 0x00	; 0
			drawCircle();
			TFT_FillCircle(posOnScreen.x,posOnScreen.y,5,BLACK);
			break;
		case SM3_WAIT:
			if(valueChanged){
				state = SM3_UPDATE;
    1e12:	02 c0       	rjmp	.+4      	; 0x1e18 <SMTICK3+0xc2>
    1e14:	82 e0       	ldi	r24, 0x02	; 2
	switch(state) {
		case SM3_WAIT:
			break;
	}
	return state;
};
    1e16:	90 e0       	ldi	r25, 0x00	; 0
    1e18:	26 96       	adiw	r28, 0x06	; 6
    1e1a:	e2 e0       	ldi	r30, 0x02	; 2
    1e1c:	4d c5       	rjmp	.+2714   	; 0x28b8 <__epilogue_restores__+0x20>

00001e1e <main>:

/************************************************************************/
/* MAIN FUNCTION                                                        */
/************************************************************************/
int main(void)
{
    1e1e:	a8 e1       	ldi	r26, 0x18	; 24
    1e20:	b0 e0       	ldi	r27, 0x00	; 0
    1e22:	e4 e1       	ldi	r30, 0x14	; 20
    1e24:	ff e0       	ldi	r31, 0x0F	; 15
    1e26:	1e c5       	rjmp	.+2620   	; 0x2864 <__prologue_saves__+0x4>

	/************************************************************************/
	/* INIT PORTS                                                           */
	/************************************************************************/
	DDRA = 0xF0; PORTA = 0x0F;// PC7..4 outputs init 0s, PC3..0 inputs init 1s
    1e28:	80 ef       	ldi	r24, 0xF0	; 240
    1e2a:	81 b9       	out	0x01, r24	; 1
    1e2c:	8f e0       	ldi	r24, 0x0F	; 15
    1e2e:	82 b9       	out	0x02, r24	; 2
	DDRD = 0xFF; PORTD = 0x00;
    1e30:	8f ef       	ldi	r24, 0xFF	; 255
    1e32:	8a b9       	out	0x0a, r24	; 10
    1e34:	1b b8       	out	0x0b, r1	; 11
	
	LCD_SetUpPorts();
    1e36:	0e 94 7c 01 	call	0x2f8	; 0x2f8 <LCD_SetUpPorts>
	TFT_SetupPorts();
    1e3a:	0e 94 40 06 	call	0xc80	; 0xc80 <TFT_SetupPorts>
	/************************************************************************/
	/* INIT DEVICES                                                         */
	/************************************************************************/
	LCD_init();
    1e3e:	0e 94 ba 01 	call	0x374	; 0x374 <LCD_init>
	Init_PWM();
    1e42:	01 dd       	rcall	.-1534   	; 0x1846 <Init_PWM>
	LCD_DisplayString(2, "LCD INIT");
    1e44:	6a e6       	ldi	r22, 0x6A	; 106
    1e46:	71 e0       	ldi	r23, 0x01	; 1
    1e48:	82 e0       	ldi	r24, 0x02	; 2
    1e4a:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
/************************************************************************/
void TFT_OpenSPI(void)
{
	
	/* Enable SPI, Master, set clock rate fck/16 */
	SPCR = (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    1e4e:	81 e5       	ldi	r24, 0x51	; 81
    1e50:	8c bd       	out	0x2c, r24	; 44
	TFT_OpenSPI();
	TFT_InitDisplay();
    1e52:	0e 94 d9 06 	call	0xdb2	; 0xdb2 <TFT_InitDisplay>
	unsigned char cust[16] = {
    1e56:	80 e1       	ldi	r24, 0x10	; 16
    1e58:	ea e0       	ldi	r30, 0x0A	; 10
    1e5a:	f1 e0       	ldi	r31, 0x01	; 1
    1e5c:	de 01       	movw	r26, r28
    1e5e:	11 96       	adiw	r26, 0x01	; 1
    1e60:	01 90       	ld	r0, Z+
    1e62:	0d 92       	st	X+, r0
    1e64:	8a 95       	dec	r24
    1e66:	e1 f7       	brne	.-8      	; 0x1e60 <main+0x42>
		0b10001,
		0b11101,
		0b10001,
		0b11111
	};
	LCD_WriteCommand(0x40);
    1e68:	80 e4       	ldi	r24, 0x40	; 64
    1e6a:	0e 94 93 01 	call	0x326	; 0x326 <LCD_WriteCommand>
    1e6e:	8e 01       	movw	r16, r28
    1e70:	0f 5f       	subi	r16, 0xFF	; 255
    1e72:	1f 4f       	sbci	r17, 0xFF	; 255
    1e74:	7e 01       	movw	r14, r28
    1e76:	22 e1       	ldi	r18, 0x12	; 18
    1e78:	e2 0e       	add	r14, r18
    1e7a:	f1 1c       	adc	r15, r1
	for(unsigned i = 0; i <= 16; i++){
		LCD_WriteData(cust[i]);
    1e7c:	d8 01       	movw	r26, r16
    1e7e:	8d 91       	ld	r24, X+
    1e80:	8d 01       	movw	r16, r26
    1e82:	0e 94 cd 01 	call	0x39a	; 0x39a <LCD_WriteData>
		0b11101,
		0b10001,
		0b11111
	};
	LCD_WriteCommand(0x40);
	for(unsigned i = 0; i <= 16; i++){
    1e86:	0e 15       	cp	r16, r14
    1e88:	1f 05       	cpc	r17, r15
    1e8a:	c1 f7       	brne	.-16     	; 0x1e7c <main+0x5e>
		LCD_WriteData(cust[i]);
	}
	LCD_WriteCommand(0);
    1e8c:	80 e0       	ldi	r24, 0x00	; 0
    1e8e:	0e 94 93 01 	call	0x326	; 0x326 <LCD_WriteCommand>
	LCD_WriteCommand(1);
    1e92:	81 e0       	ldi	r24, 0x01	; 1
    1e94:	0e 94 93 01 	call	0x326	; 0x326 <LCD_WriteCommand>
	
	TFT_ClearScreen();
    1e98:	0e 94 03 07 	call	0xe06	; 0xe06 <TFT_ClearScreen>
	TFT_FillEllipse(60,75,100,50,BLACK);
    1e9c:	00 e0       	ldi	r16, 0x00	; 0
    1e9e:	10 e0       	ldi	r17, 0x00	; 0
    1ea0:	22 e3       	ldi	r18, 0x32	; 50
    1ea2:	30 e0       	ldi	r19, 0x00	; 0
    1ea4:	44 e6       	ldi	r20, 0x64	; 100
    1ea6:	50 e0       	ldi	r21, 0x00	; 0
    1ea8:	6b e4       	ldi	r22, 0x4B	; 75
    1eaa:	70 e0       	ldi	r23, 0x00	; 0
    1eac:	8c e3       	ldi	r24, 0x3C	; 60
    1eae:	90 e0       	ldi	r25, 0x00	; 0
    1eb0:	b6 d9       	rcall	.-3220   	; 0x121e <TFT_FillEllipse>
	TFT_Ellipse(60,75,100,50,LIME);
    1eb2:	00 ee       	ldi	r16, 0xE0	; 224
    1eb4:	17 e0       	ldi	r17, 0x07	; 7
    1eb6:	22 e3       	ldi	r18, 0x32	; 50
    1eb8:	30 e0       	ldi	r19, 0x00	; 0
    1eba:	44 e6       	ldi	r20, 0x64	; 100
    1ebc:	50 e0       	ldi	r21, 0x00	; 0
    1ebe:	6b e4       	ldi	r22, 0x4B	; 75
    1ec0:	70 e0       	ldi	r23, 0x00	; 0
    1ec2:	8c e3       	ldi	r24, 0x3C	; 60
    1ec4:	90 e0       	ldi	r25, 0x00	; 0
    1ec6:	74 d8       	rcall	.-3864   	; 0xfb0 <TFT_Ellipse>
/* Text Routines                                                        */
/************************************************************************/
byte curX, curY;			//current x & y cursor Position
void TFT_GotoXY(byte x, byte y)
{
	curX = x;
    1ec8:	85 e0       	ldi	r24, 0x05	; 5
    1eca:	80 93 e9 01 	sts	0x01E9, r24	; 0x8001e9 <curX>
	curY = y;
    1ece:	89 e0       	ldi	r24, 0x09	; 9
    1ed0:	80 93 ea 01 	sts	0x01EA, r24	; 0x8001ea <curY>
	char *str = "UCR CS120B";
	TFT_GotoXY(5,9);
	TFT_WriteString(str, YELLOW);
    1ed4:	60 ee       	ldi	r22, 0xE0	; 224
    1ed6:	7f ef       	ldi	r23, 0xFF	; 255
    1ed8:	83 e7       	ldi	r24, 0x73	; 115
    1eda:	91 e0       	ldi	r25, 0x01	; 1
    1edc:	f7 da       	rcall	.-2578   	; 0x14cc <TFT_WriteString>
	LCD_DisplayString(1, "120B            Final Project");
    1ede:	6e e7       	ldi	r22, 0x7E	; 126
    1ee0:	71 e0       	ldi	r23, 0x01	; 1
    1ee2:	81 e0       	ldi	r24, 0x01	; 1
    1ee4:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
    1ee8:	bf ef       	ldi	r27, 0xFF	; 255
    1eea:	e3 ed       	ldi	r30, 0xD3	; 211
    1eec:	f0 e3       	ldi	r31, 0x30	; 48
    1eee:	b1 50       	subi	r27, 0x01	; 1
    1ef0:	e0 40       	sbci	r30, 0x00	; 0
    1ef2:	f0 40       	sbci	r31, 0x00	; 0
    1ef4:	e1 f7       	brne	.-8      	; 0x1eee <main+0xd0>
    1ef6:	00 c0       	rjmp	.+0      	; 0x1ef8 <main+0xda>
    1ef8:	00 00       	nop
	_delay_ms(1000);
	LCD_DisplayString(1, "Jonas Sorgenfrei");
    1efa:	6c e9       	ldi	r22, 0x9C	; 156
    1efc:	71 e0       	ldi	r23, 0x01	; 1
    1efe:	81 e0       	ldi	r24, 0x01	; 1
    1f00:	0e 94 ee 01 	call	0x3dc	; 0x3dc <LCD_DisplayString>
	LCD_Cursor(18);
    1f04:	82 e1       	ldi	r24, 0x12	; 18
    1f06:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_Cursor>
	LCD_WriteData(0);
    1f0a:	80 e0       	ldi	r24, 0x00	; 0
    1f0c:	0e 94 cd 01 	call	0x39a	; 0x39a <LCD_WriteData>
	LCD_Cursor(19);
    1f10:	83 e1       	ldi	r24, 0x13	; 19
    1f12:	0e 94 c5 01 	call	0x38a	; 0x38a <LCD_Cursor>
	LCD_WriteData(1);
    1f16:	81 e0       	ldi	r24, 0x01	; 1
    1f18:	0e 94 cd 01 	call	0x39a	; 0x39a <LCD_WriteData>
    1f1c:	2f ef       	ldi	r18, 0xFF	; 255
    1f1e:	83 ed       	ldi	r24, 0xD3	; 211
    1f20:	90 e3       	ldi	r25, 0x30	; 48
    1f22:	21 50       	subi	r18, 0x01	; 1
    1f24:	80 40       	sbci	r24, 0x00	; 0
    1f26:	90 40       	sbci	r25, 0x00	; 0
    1f28:	e1 f7       	brne	.-8      	; 0x1f22 <main+0x104>
    1f2a:	00 c0       	rjmp	.+0      	; 0x1f2c <main+0x10e>
    1f2c:	00 00       	nop
    1f2e:	0f 2e       	mov	r0, r31
    1f30:	f8 ee       	ldi	r31, 0xE8	; 232
    1f32:	df 2e       	mov	r13, r31
    1f34:	f0 2d       	mov	r31, r0
    1f36:	0f 2e       	mov	r0, r31
    1f38:	f3 e0       	ldi	r31, 0x03	; 3
    1f3a:	cf 2e       	mov	r12, r31
    1f3c:	f0 2d       	mov	r31, r0
    1f3e:	b1 2c       	mov	r11, r1
    1f40:	a1 2c       	mov	r10, r1
    1f42:	51 e0       	ldi	r21, 0x01	; 1
    1f44:	40 e0       	ldi	r20, 0x00	; 0
    1f46:	30 e0       	ldi	r19, 0x00	; 0
    1f48:	20 e0       	ldi	r18, 0x00	; 0
    1f4a:	04 c0       	rjmp	.+8      	; 0x1f54 <main+0x136>
	unsigned long int c;
	while(1){
		c = a%b;
		if(c==0){return b;}
		a = b;
		b = c;
    1f4c:	d6 2e       	mov	r13, r22
    1f4e:	c7 2e       	mov	r12, r23
    1f50:	b8 2e       	mov	r11, r24
    1f52:	a9 2e       	mov	r10, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
    1f54:	65 2f       	mov	r22, r21
    1f56:	74 2f       	mov	r23, r20
    1f58:	83 2f       	mov	r24, r19
    1f5a:	92 2f       	mov	r25, r18
    1f5c:	2d 2d       	mov	r18, r13
    1f5e:	3c 2d       	mov	r19, r12
    1f60:	4b 2d       	mov	r20, r11
    1f62:	5a 2d       	mov	r21, r10
    1f64:	4b d4       	rcall	.+2198   	; 0x27fc <__udivmodsi4>
    1f66:	5d 2d       	mov	r21, r13
    1f68:	4c 2d       	mov	r20, r12
    1f6a:	3b 2d       	mov	r19, r11
    1f6c:	2a 2d       	mov	r18, r10
		if(c==0){return b;}
    1f6e:	61 15       	cp	r22, r1
    1f70:	71 05       	cpc	r23, r1
    1f72:	81 05       	cpc	r24, r1
    1f74:	91 05       	cpc	r25, r1
    1f76:	51 f7       	brne	.-44     	; 0x1f4c <main+0x12e>
    1f78:	0f 2e       	mov	r0, r31
    1f7a:	f8 ec       	ldi	r31, 0xC8	; 200
    1f7c:	ef 2e       	mov	r14, r31
    1f7e:	f0 2d       	mov	r31, r0
    1f80:	f1 2c       	mov	r15, r1
    1f82:	00 e0       	ldi	r16, 0x00	; 0
    1f84:	10 e0       	ldi	r17, 0x00	; 0
    1f86:	04 c0       	rjmp	.+8      	; 0x1f90 <main+0x172>
		a = b;
		b = c;
    1f88:	e6 2e       	mov	r14, r22
    1f8a:	f7 2e       	mov	r15, r23
    1f8c:	08 2f       	mov	r16, r24
    1f8e:	19 2f       	mov	r17, r25
//--------Find GCD function --------------------------------------------------
unsigned long int findGCD(unsigned long int a, unsigned long int b)
{
	unsigned long int c;
	while(1){
		c = a%b;
    1f90:	6d 2d       	mov	r22, r13
    1f92:	7c 2d       	mov	r23, r12
    1f94:	8b 2d       	mov	r24, r11
    1f96:	9a 2d       	mov	r25, r10
    1f98:	2e 2d       	mov	r18, r14
    1f9a:	3f 2d       	mov	r19, r15
    1f9c:	40 2f       	mov	r20, r16
    1f9e:	51 2f       	mov	r21, r17
    1fa0:	2d d4       	rcall	.+2138   	; 0x27fc <__udivmodsi4>
    1fa2:	de 2c       	mov	r13, r14
    1fa4:	cf 2c       	mov	r12, r15
    1fa6:	b0 2e       	mov	r11, r16
    1fa8:	a1 2e       	mov	r10, r17
		if(c==0){return b;}
    1faa:	61 15       	cp	r22, r1
    1fac:	71 05       	cpc	r23, r1
    1fae:	81 05       	cpc	r24, r1
    1fb0:	91 05       	cpc	r25, r1
    1fb2:	51 f7       	brne	.-44     	; 0x1f88 <main+0x16a>
	
	//greates common divisor for all tasks or smallest time unit for tasks
	unsigned long int GCD = tmpGCD;
	
	//Recalculate GCD periods for scheduler
	unsigned long int SMTick1_period = SMTick1_calc/GCD;
    1fb4:	68 ee       	ldi	r22, 0xE8	; 232
    1fb6:	73 e0       	ldi	r23, 0x03	; 3
    1fb8:	80 e0       	ldi	r24, 0x00	; 0
    1fba:	90 e0       	ldi	r25, 0x00	; 0
    1fbc:	2e 2d       	mov	r18, r14
    1fbe:	3f 2d       	mov	r19, r15
    1fc0:	40 2f       	mov	r20, r16
    1fc2:	51 2f       	mov	r21, r17
    1fc4:	1b d4       	rcall	.+2102   	; 0x27fc <__udivmodsi4>
    1fc6:	49 01       	movw	r8, r18
    1fc8:	5a 01       	movw	r10, r20
	unsigned long int SMTick2_period = SMTick2_calc/GCD;
    1fca:	61 e0       	ldi	r22, 0x01	; 1
    1fcc:	70 e0       	ldi	r23, 0x00	; 0
    1fce:	80 e0       	ldi	r24, 0x00	; 0
    1fd0:	90 e0       	ldi	r25, 0x00	; 0
    1fd2:	2e 2d       	mov	r18, r14
    1fd4:	3f 2d       	mov	r19, r15
    1fd6:	40 2f       	mov	r20, r16
    1fd8:	51 2f       	mov	r21, r17
    1fda:	10 d4       	rcall	.+2080   	; 0x27fc <__udivmodsi4>
    1fdc:	29 01       	movw	r4, r18
    1fde:	3a 01       	movw	r6, r20
	unsigned long int SMTick3_period = SMTick3_calc/GCD;
	unsigned long int SMTick4_period = SMTick4_calc/GCD;
    1fe0:	68 ec       	ldi	r22, 0xC8	; 200
    1fe2:	70 e0       	ldi	r23, 0x00	; 0
    1fe4:	80 e0       	ldi	r24, 0x00	; 0
    1fe6:	90 e0       	ldi	r25, 0x00	; 0
    1fe8:	2e 2d       	mov	r18, r14
    1fea:	3f 2d       	mov	r19, r15
    1fec:	40 2f       	mov	r20, r16
    1fee:	51 2f       	mov	r21, r17
    1ff0:	05 d4       	rcall	.+2058   	; 0x27fc <__udivmodsi4>

	//Declare an array of tasks
	static task task1, task2, task3, task4;
	task * tasks[] = {&task1, &task2, &task3, &task4};
    1ff2:	88 e0       	ldi	r24, 0x08	; 8
    1ff4:	ea e1       	ldi	r30, 0x1A	; 26
    1ff6:	f1 e0       	ldi	r31, 0x01	; 1
    1ff8:	de 01       	movw	r26, r28
    1ffa:	51 96       	adiw	r26, 0x11	; 17
    1ffc:	01 90       	ld	r0, Z+
    1ffe:	0d 92       	st	X+, r0
    2000:	8a 95       	dec	r24
    2002:	e1 f7       	brne	.-8      	; 0x1ffc <main+0x1de>
	const unsigned short numTasks = sizeof(tasks)/sizeof(task*);
	
	//Task 1
	task1.state = -1; // Task initial state
    2004:	ef ec       	ldi	r30, 0xCF	; 207
    2006:	f1 e0       	ldi	r31, 0x01	; 1
    2008:	6f ef       	ldi	r22, 0xFF	; 255
    200a:	60 83       	st	Z, r22
	task1.period = SMTick1_period;	//Task Period.
    200c:	81 82       	std	Z+1, r8	; 0x01
    200e:	92 82       	std	Z+2, r9	; 0x02
    2010:	a3 82       	std	Z+3, r10	; 0x03
    2012:	b4 82       	std	Z+4, r11	; 0x04
	task1.elapsedTime = SMTick1_period; //Task current elapsed time
    2014:	85 82       	std	Z+5, r8	; 0x05
    2016:	96 82       	std	Z+6, r9	; 0x06
    2018:	a7 82       	std	Z+7, r10	; 0x07
    201a:	b0 86       	std	Z+8, r11	; 0x08
	task1.TickFct = &SMTICK1; //Function pointer for the tick.
    201c:	88 e6       	ldi	r24, 0x68	; 104
    201e:	92 e0       	ldi	r25, 0x02	; 2
    2020:	92 87       	std	Z+10, r25	; 0x0a
    2022:	81 87       	std	Z+9, r24	; 0x09
	
	//Task 2
	task2.state = -1; // Task initial state
    2024:	e4 ec       	ldi	r30, 0xC4	; 196
    2026:	f1 e0       	ldi	r31, 0x01	; 1
    2028:	60 83       	st	Z, r22
	task2.period = SMTick2_period;	//Task Period.
    202a:	41 82       	std	Z+1, r4	; 0x01
    202c:	52 82       	std	Z+2, r5	; 0x02
    202e:	63 82       	std	Z+3, r6	; 0x03
    2030:	74 82       	std	Z+4, r7	; 0x04
	task2.elapsedTime = SMTick2_period; //Task current elapsed time
    2032:	45 82       	std	Z+5, r4	; 0x05
    2034:	56 82       	std	Z+6, r5	; 0x06
    2036:	67 82       	std	Z+7, r6	; 0x07
    2038:	70 86       	std	Z+8, r7	; 0x08
	task2.TickFct = &SMTICK2; //Function pointer for the tick.
    203a:	82 e5       	ldi	r24, 0x52	; 82
    203c:	9c e0       	ldi	r25, 0x0C	; 12
    203e:	92 87       	std	Z+10, r25	; 0x0a
    2040:	81 87       	std	Z+9, r24	; 0x09

	//Task 3
	task3.state = -1; // Task initial state
    2042:	e9 eb       	ldi	r30, 0xB9	; 185
    2044:	f1 e0       	ldi	r31, 0x01	; 1
    2046:	60 83       	st	Z, r22
	task3.period = SMTick3_period;	//Task Period.
    2048:	81 82       	std	Z+1, r8	; 0x01
    204a:	92 82       	std	Z+2, r9	; 0x02
    204c:	a3 82       	std	Z+3, r10	; 0x03
    204e:	b4 82       	std	Z+4, r11	; 0x04
	task3.elapsedTime = SMTick3_period; //Task current elapsed time
    2050:	85 82       	std	Z+5, r8	; 0x05
    2052:	96 82       	std	Z+6, r9	; 0x06
    2054:	a7 82       	std	Z+7, r10	; 0x07
    2056:	b0 86       	std	Z+8, r11	; 0x08
	task3.TickFct = &SMTICK3; //Function pointer for the tick.
    2058:	8b ea       	ldi	r24, 0xAB	; 171
    205a:	9e e0       	ldi	r25, 0x0E	; 14
    205c:	92 87       	std	Z+10, r25	; 0x0a
    205e:	81 87       	std	Z+9, r24	; 0x09

	//Task 4
	task4.state = -1; // Task initial state
    2060:	ee ea       	ldi	r30, 0xAE	; 174
    2062:	f1 e0       	ldi	r31, 0x01	; 1
    2064:	60 83       	st	Z, r22
	task4.period = SMTick4_period;	//Task Period.
    2066:	21 83       	std	Z+1, r18	; 0x01
    2068:	32 83       	std	Z+2, r19	; 0x02
    206a:	43 83       	std	Z+3, r20	; 0x03
    206c:	54 83       	std	Z+4, r21	; 0x04
	task4.elapsedTime = SMTick4_period; //Task current elapsed time
    206e:	25 83       	std	Z+5, r18	; 0x05
    2070:	36 83       	std	Z+6, r19	; 0x06
    2072:	47 83       	std	Z+7, r20	; 0x07
    2074:	50 87       	std	Z+8, r21	; 0x08
	task4.TickFct = &SMTICK4; //Function pointer for the tick.
    2076:	88 ec       	ldi	r24, 0xC8	; 200
    2078:	9a e0       	ldi	r25, 0x0A	; 10
    207a:	92 87       	std	Z+10, r25	; 0x0a
    207c:	81 87       	std	Z+9, r24	; 0x09
	
	// Set the timer and turn it on
	TimerSet(GCD);
    207e:	6e 2d       	mov	r22, r14
    2080:	7f 2d       	mov	r23, r15
    2082:	80 2f       	mov	r24, r16
    2084:	91 2f       	mov	r25, r17
    2086:	0e 94 84 02 	call	0x508	; 0x508 <TimerSet>
	TimerOn();
    208a:	0e 94 95 02 	call	0x52a	; 0x52a <TimerOn>
    208e:	7e 01       	movw	r14, r28
    2090:	a9 e1       	ldi	r26, 0x19	; 25
    2092:	ea 0e       	add	r14, r26
    2094:	f1 1c       	adc	r15, r1
    2096:	6e 01       	movw	r12, r28
    2098:	b1 e1       	ldi	r27, 0x11	; 17
    209a:	cb 0e       	add	r12, r27
    209c:	d1 1c       	adc	r13, r1
	unsigned short i;
	while(1){
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
			// Task is ready to tick
			if ( tasks[i]->elapsedTime == tasks[i]->period ) {
    209e:	f6 01       	movw	r30, r12
    20a0:	01 91       	ld	r16, Z+
    20a2:	11 91       	ld	r17, Z+
    20a4:	6f 01       	movw	r12, r30
    20a6:	d8 01       	movw	r26, r16
    20a8:	15 96       	adiw	r26, 0x05	; 5
    20aa:	4d 91       	ld	r20, X+
    20ac:	5d 91       	ld	r21, X+
    20ae:	6d 91       	ld	r22, X+
    20b0:	7c 91       	ld	r23, X
    20b2:	18 97       	sbiw	r26, 0x08	; 8
    20b4:	11 96       	adiw	r26, 0x01	; 1
    20b6:	8d 91       	ld	r24, X+
    20b8:	9d 91       	ld	r25, X+
    20ba:	0d 90       	ld	r0, X+
    20bc:	bc 91       	ld	r27, X
    20be:	a0 2d       	mov	r26, r0
    20c0:	48 17       	cp	r20, r24
    20c2:	59 07       	cpc	r21, r25
    20c4:	6a 07       	cpc	r22, r26
    20c6:	7b 07       	cpc	r23, r27
    20c8:	81 f4       	brne	.+32     	; 0x20ea <main+0x2cc>
				// Setting next state for task
				tasks[i]->state = tasks[i]->TickFct(tasks[i]->state);
    20ca:	f8 01       	movw	r30, r16
    20cc:	80 81       	ld	r24, Z
    20ce:	01 84       	ldd	r0, Z+9	; 0x09
    20d0:	f2 85       	ldd	r31, Z+10	; 0x0a
    20d2:	e0 2d       	mov	r30, r0
    20d4:	08 2e       	mov	r0, r24
    20d6:	00 0c       	add	r0, r0
    20d8:	99 0b       	sbc	r25, r25
    20da:	09 95       	icall
    20dc:	d8 01       	movw	r26, r16
    20de:	8c 93       	st	X, r24
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
    20e0:	f8 01       	movw	r30, r16
    20e2:	15 82       	std	Z+5, r1	; 0x05
    20e4:	16 82       	std	Z+6, r1	; 0x06
    20e6:	17 82       	std	Z+7, r1	; 0x07
    20e8:	10 86       	std	Z+8, r1	; 0x08
			}
			tasks[i]->elapsedTime += 1;
    20ea:	f8 01       	movw	r30, r16
    20ec:	85 81       	ldd	r24, Z+5	; 0x05
    20ee:	96 81       	ldd	r25, Z+6	; 0x06
    20f0:	a7 81       	ldd	r26, Z+7	; 0x07
    20f2:	b0 85       	ldd	r27, Z+8	; 0x08
    20f4:	01 96       	adiw	r24, 0x01	; 1
    20f6:	a1 1d       	adc	r26, r1
    20f8:	b1 1d       	adc	r27, r1
    20fa:	85 83       	std	Z+5, r24	; 0x05
    20fc:	96 83       	std	Z+6, r25	; 0x06
    20fe:	a7 83       	std	Z+7, r26	; 0x07
    2100:	b0 87       	std	Z+8, r27	; 0x08
	/* MAIN LOOP                                                            */
	/************************************************************************/
	unsigned short i;
	while(1){
		// Scheduler code
		for ( i = 0; i < numTasks; i++ ) {
    2102:	ec 14       	cp	r14, r12
    2104:	fd 04       	cpc	r15, r13
    2106:	59 f6       	brne	.-106    	; 0x209e <main+0x280>
				// Reset the elapsed time for next tick.
				tasks[i]->elapsedTime = 0;
			}
			tasks[i]->elapsedTime += 1;
		}
		while(!TimerFlag);
    2108:	80 91 e8 01 	lds	r24, 0x01E8	; 0x8001e8 <TimerFlag>
    210c:	88 23       	and	r24, r24
    210e:	e1 f3       	breq	.-8      	; 0x2108 <main+0x2ea>
		TimerFlag = 0;
    2110:	10 92 e8 01 	sts	0x01E8, r1	; 0x8001e8 <TimerFlag>
	}
    2114:	c0 cf       	rjmp	.-128    	; 0x2096 <main+0x278>

00002116 <__subsf3>:
    2116:	50 58       	subi	r21, 0x80	; 128

00002118 <__addsf3>:
    2118:	bb 27       	eor	r27, r27
    211a:	aa 27       	eor	r26, r26
    211c:	0e d0       	rcall	.+28     	; 0x213a <__addsf3x>
    211e:	22 c2       	rjmp	.+1092   	; 0x2564 <__fp_round>
    2120:	eb d1       	rcall	.+982    	; 0x24f8 <__fp_pscA>
    2122:	30 f0       	brcs	.+12     	; 0x2130 <__addsf3+0x18>
    2124:	f0 d1       	rcall	.+992    	; 0x2506 <__fp_pscB>
    2126:	20 f0       	brcs	.+8      	; 0x2130 <__addsf3+0x18>
    2128:	31 f4       	brne	.+12     	; 0x2136 <__addsf3+0x1e>
    212a:	9f 3f       	cpi	r25, 0xFF	; 255
    212c:	11 f4       	brne	.+4      	; 0x2132 <__addsf3+0x1a>
    212e:	1e f4       	brtc	.+6      	; 0x2136 <__addsf3+0x1e>
    2130:	bb c1       	rjmp	.+886    	; 0x24a8 <__fp_nan>
    2132:	0e f4       	brtc	.+2      	; 0x2136 <__addsf3+0x1e>
    2134:	e0 95       	com	r30
    2136:	e7 fb       	bst	r30, 7
    2138:	b1 c1       	rjmp	.+866    	; 0x249c <__fp_inf>

0000213a <__addsf3x>:
    213a:	e9 2f       	mov	r30, r25
    213c:	35 d2       	rcall	.+1130   	; 0x25a8 <__fp_split3>
    213e:	80 f3       	brcs	.-32     	; 0x2120 <__addsf3+0x8>
    2140:	ba 17       	cp	r27, r26
    2142:	62 07       	cpc	r22, r18
    2144:	73 07       	cpc	r23, r19
    2146:	84 07       	cpc	r24, r20
    2148:	95 07       	cpc	r25, r21
    214a:	18 f0       	brcs	.+6      	; 0x2152 <__addsf3x+0x18>
    214c:	71 f4       	brne	.+28     	; 0x216a <__addsf3x+0x30>
    214e:	9e f5       	brtc	.+102    	; 0x21b6 <__addsf3x+0x7c>
    2150:	4d c2       	rjmp	.+1178   	; 0x25ec <__fp_zero>
    2152:	0e f4       	brtc	.+2      	; 0x2156 <__addsf3x+0x1c>
    2154:	e0 95       	com	r30
    2156:	0b 2e       	mov	r0, r27
    2158:	ba 2f       	mov	r27, r26
    215a:	a0 2d       	mov	r26, r0
    215c:	0b 01       	movw	r0, r22
    215e:	b9 01       	movw	r22, r18
    2160:	90 01       	movw	r18, r0
    2162:	0c 01       	movw	r0, r24
    2164:	ca 01       	movw	r24, r20
    2166:	a0 01       	movw	r20, r0
    2168:	11 24       	eor	r1, r1
    216a:	ff 27       	eor	r31, r31
    216c:	59 1b       	sub	r21, r25
    216e:	99 f0       	breq	.+38     	; 0x2196 <__addsf3x+0x5c>
    2170:	59 3f       	cpi	r21, 0xF9	; 249
    2172:	50 f4       	brcc	.+20     	; 0x2188 <__addsf3x+0x4e>
    2174:	50 3e       	cpi	r21, 0xE0	; 224
    2176:	68 f1       	brcs	.+90     	; 0x21d2 <__addsf3x+0x98>
    2178:	1a 16       	cp	r1, r26
    217a:	f0 40       	sbci	r31, 0x00	; 0
    217c:	a2 2f       	mov	r26, r18
    217e:	23 2f       	mov	r18, r19
    2180:	34 2f       	mov	r19, r20
    2182:	44 27       	eor	r20, r20
    2184:	58 5f       	subi	r21, 0xF8	; 248
    2186:	f3 cf       	rjmp	.-26     	; 0x216e <__addsf3x+0x34>
    2188:	46 95       	lsr	r20
    218a:	37 95       	ror	r19
    218c:	27 95       	ror	r18
    218e:	a7 95       	ror	r26
    2190:	f0 40       	sbci	r31, 0x00	; 0
    2192:	53 95       	inc	r21
    2194:	c9 f7       	brne	.-14     	; 0x2188 <__addsf3x+0x4e>
    2196:	7e f4       	brtc	.+30     	; 0x21b6 <__addsf3x+0x7c>
    2198:	1f 16       	cp	r1, r31
    219a:	ba 0b       	sbc	r27, r26
    219c:	62 0b       	sbc	r22, r18
    219e:	73 0b       	sbc	r23, r19
    21a0:	84 0b       	sbc	r24, r20
    21a2:	ba f0       	brmi	.+46     	; 0x21d2 <__addsf3x+0x98>
    21a4:	91 50       	subi	r25, 0x01	; 1
    21a6:	a1 f0       	breq	.+40     	; 0x21d0 <__addsf3x+0x96>
    21a8:	ff 0f       	add	r31, r31
    21aa:	bb 1f       	adc	r27, r27
    21ac:	66 1f       	adc	r22, r22
    21ae:	77 1f       	adc	r23, r23
    21b0:	88 1f       	adc	r24, r24
    21b2:	c2 f7       	brpl	.-16     	; 0x21a4 <__addsf3x+0x6a>
    21b4:	0e c0       	rjmp	.+28     	; 0x21d2 <__addsf3x+0x98>
    21b6:	ba 0f       	add	r27, r26
    21b8:	62 1f       	adc	r22, r18
    21ba:	73 1f       	adc	r23, r19
    21bc:	84 1f       	adc	r24, r20
    21be:	48 f4       	brcc	.+18     	; 0x21d2 <__addsf3x+0x98>
    21c0:	87 95       	ror	r24
    21c2:	77 95       	ror	r23
    21c4:	67 95       	ror	r22
    21c6:	b7 95       	ror	r27
    21c8:	f7 95       	ror	r31
    21ca:	9e 3f       	cpi	r25, 0xFE	; 254
    21cc:	08 f0       	brcs	.+2      	; 0x21d0 <__addsf3x+0x96>
    21ce:	b3 cf       	rjmp	.-154    	; 0x2136 <__addsf3+0x1e>
    21d0:	93 95       	inc	r25
    21d2:	88 0f       	add	r24, r24
    21d4:	08 f0       	brcs	.+2      	; 0x21d8 <__addsf3x+0x9e>
    21d6:	99 27       	eor	r25, r25
    21d8:	ee 0f       	add	r30, r30
    21da:	97 95       	ror	r25
    21dc:	87 95       	ror	r24
    21de:	08 95       	ret
    21e0:	8b d1       	rcall	.+790    	; 0x24f8 <__fp_pscA>
    21e2:	58 f0       	brcs	.+22     	; 0x21fa <__addsf3x+0xc0>
    21e4:	80 e8       	ldi	r24, 0x80	; 128
    21e6:	91 e0       	ldi	r25, 0x01	; 1
    21e8:	09 f4       	brne	.+2      	; 0x21ec <__addsf3x+0xb2>
    21ea:	9e ef       	ldi	r25, 0xFE	; 254
    21ec:	8c d1       	rcall	.+792    	; 0x2506 <__fp_pscB>
    21ee:	28 f0       	brcs	.+10     	; 0x21fa <__addsf3x+0xc0>
    21f0:	40 e8       	ldi	r20, 0x80	; 128
    21f2:	51 e0       	ldi	r21, 0x01	; 1
    21f4:	59 f4       	brne	.+22     	; 0x220c <atan2+0xe>
    21f6:	5e ef       	ldi	r21, 0xFE	; 254
    21f8:	09 c0       	rjmp	.+18     	; 0x220c <atan2+0xe>
    21fa:	56 c1       	rjmp	.+684    	; 0x24a8 <__fp_nan>
    21fc:	f7 c1       	rjmp	.+1006   	; 0x25ec <__fp_zero>

000021fe <atan2>:
    21fe:	e9 2f       	mov	r30, r25
    2200:	e0 78       	andi	r30, 0x80	; 128
    2202:	d2 d1       	rcall	.+932    	; 0x25a8 <__fp_split3>
    2204:	68 f3       	brcs	.-38     	; 0x21e0 <__addsf3x+0xa6>
    2206:	09 2e       	mov	r0, r25
    2208:	05 2a       	or	r0, r21
    220a:	c1 f3       	breq	.-16     	; 0x21fc <__addsf3x+0xc2>
    220c:	26 17       	cp	r18, r22
    220e:	37 07       	cpc	r19, r23
    2210:	48 07       	cpc	r20, r24
    2212:	59 07       	cpc	r21, r25
    2214:	38 f0       	brcs	.+14     	; 0x2224 <atan2+0x26>
    2216:	0e 2e       	mov	r0, r30
    2218:	07 f8       	bld	r0, 7
    221a:	e0 25       	eor	r30, r0
    221c:	69 f0       	breq	.+26     	; 0x2238 <atan2+0x3a>
    221e:	e0 25       	eor	r30, r0
    2220:	e0 64       	ori	r30, 0x40	; 64
    2222:	0a c0       	rjmp	.+20     	; 0x2238 <atan2+0x3a>
    2224:	ef 63       	ori	r30, 0x3F	; 63
    2226:	07 f8       	bld	r0, 7
    2228:	00 94       	com	r0
    222a:	07 fa       	bst	r0, 7
    222c:	db 01       	movw	r26, r22
    222e:	b9 01       	movw	r22, r18
    2230:	9d 01       	movw	r18, r26
    2232:	dc 01       	movw	r26, r24
    2234:	ca 01       	movw	r24, r20
    2236:	ad 01       	movw	r20, r26
    2238:	ef 93       	push	r30
    223a:	4a d0       	rcall	.+148    	; 0x22d0 <__divsf3_pse>
    223c:	93 d1       	rcall	.+806    	; 0x2564 <__fp_round>
    223e:	0a d0       	rcall	.+20     	; 0x2254 <atan>
    2240:	5f 91       	pop	r21
    2242:	55 23       	and	r21, r21
    2244:	31 f0       	breq	.+12     	; 0x2252 <atan2+0x54>
    2246:	2b ed       	ldi	r18, 0xDB	; 219
    2248:	3f e0       	ldi	r19, 0x0F	; 15
    224a:	49 e4       	ldi	r20, 0x49	; 73
    224c:	50 fd       	sbrc	r21, 0
    224e:	49 ec       	ldi	r20, 0xC9	; 201
    2250:	63 cf       	rjmp	.-314    	; 0x2118 <__addsf3>
    2252:	08 95       	ret

00002254 <atan>:
    2254:	df 93       	push	r29
    2256:	dd 27       	eor	r29, r29
    2258:	b9 2f       	mov	r27, r25
    225a:	bf 77       	andi	r27, 0x7F	; 127
    225c:	40 e8       	ldi	r20, 0x80	; 128
    225e:	5f e3       	ldi	r21, 0x3F	; 63
    2260:	16 16       	cp	r1, r22
    2262:	17 06       	cpc	r1, r23
    2264:	48 07       	cpc	r20, r24
    2266:	5b 07       	cpc	r21, r27
    2268:	10 f4       	brcc	.+4      	; 0x226e <atan+0x1a>
    226a:	d9 2f       	mov	r29, r25
    226c:	ca d1       	rcall	.+916    	; 0x2602 <inverse>
    226e:	9f 93       	push	r25
    2270:	8f 93       	push	r24
    2272:	7f 93       	push	r23
    2274:	6f 93       	push	r22
    2276:	77 d2       	rcall	.+1262   	; 0x2766 <square>
    2278:	ec e8       	ldi	r30, 0x8C	; 140
    227a:	f0 e0       	ldi	r31, 0x00	; 0
    227c:	18 d1       	rcall	.+560    	; 0x24ae <__fp_powser>
    227e:	72 d1       	rcall	.+740    	; 0x2564 <__fp_round>
    2280:	2f 91       	pop	r18
    2282:	3f 91       	pop	r19
    2284:	4f 91       	pop	r20
    2286:	5f 91       	pop	r21
    2288:	cf d1       	rcall	.+926    	; 0x2628 <__mulsf3x>
    228a:	dd 23       	and	r29, r29
    228c:	49 f0       	breq	.+18     	; 0x22a0 <atan+0x4c>
    228e:	90 58       	subi	r25, 0x80	; 128
    2290:	a2 ea       	ldi	r26, 0xA2	; 162
    2292:	2a ed       	ldi	r18, 0xDA	; 218
    2294:	3f e0       	ldi	r19, 0x0F	; 15
    2296:	49 ec       	ldi	r20, 0xC9	; 201
    2298:	5f e3       	ldi	r21, 0x3F	; 63
    229a:	d0 78       	andi	r29, 0x80	; 128
    229c:	5d 27       	eor	r21, r29
    229e:	4d df       	rcall	.-358    	; 0x213a <__addsf3x>
    22a0:	df 91       	pop	r29
    22a2:	60 c1       	rjmp	.+704    	; 0x2564 <__fp_round>

000022a4 <__cmpsf2>:
    22a4:	d7 d0       	rcall	.+430    	; 0x2454 <__fp_cmp>
    22a6:	08 f4       	brcc	.+2      	; 0x22aa <__cmpsf2+0x6>
    22a8:	81 e0       	ldi	r24, 0x01	; 1
    22aa:	08 95       	ret

000022ac <cos>:
    22ac:	34 d1       	rcall	.+616    	; 0x2516 <__fp_rempio2>
    22ae:	e3 95       	inc	r30
    22b0:	6a c1       	rjmp	.+724    	; 0x2586 <__fp_sinus>

000022b2 <__divsf3>:
    22b2:	0c d0       	rcall	.+24     	; 0x22cc <__divsf3x>
    22b4:	57 c1       	rjmp	.+686    	; 0x2564 <__fp_round>
    22b6:	27 d1       	rcall	.+590    	; 0x2506 <__fp_pscB>
    22b8:	40 f0       	brcs	.+16     	; 0x22ca <__divsf3+0x18>
    22ba:	1e d1       	rcall	.+572    	; 0x24f8 <__fp_pscA>
    22bc:	30 f0       	brcs	.+12     	; 0x22ca <__divsf3+0x18>
    22be:	21 f4       	brne	.+8      	; 0x22c8 <__divsf3+0x16>
    22c0:	5f 3f       	cpi	r21, 0xFF	; 255
    22c2:	19 f0       	breq	.+6      	; 0x22ca <__divsf3+0x18>
    22c4:	eb c0       	rjmp	.+470    	; 0x249c <__fp_inf>
    22c6:	51 11       	cpse	r21, r1
    22c8:	92 c1       	rjmp	.+804    	; 0x25ee <__fp_szero>
    22ca:	ee c0       	rjmp	.+476    	; 0x24a8 <__fp_nan>

000022cc <__divsf3x>:
    22cc:	6d d1       	rcall	.+730    	; 0x25a8 <__fp_split3>
    22ce:	98 f3       	brcs	.-26     	; 0x22b6 <__divsf3+0x4>

000022d0 <__divsf3_pse>:
    22d0:	99 23       	and	r25, r25
    22d2:	c9 f3       	breq	.-14     	; 0x22c6 <__divsf3+0x14>
    22d4:	55 23       	and	r21, r21
    22d6:	b1 f3       	breq	.-20     	; 0x22c4 <__divsf3+0x12>
    22d8:	95 1b       	sub	r25, r21
    22da:	55 0b       	sbc	r21, r21
    22dc:	bb 27       	eor	r27, r27
    22de:	aa 27       	eor	r26, r26
    22e0:	62 17       	cp	r22, r18
    22e2:	73 07       	cpc	r23, r19
    22e4:	84 07       	cpc	r24, r20
    22e6:	38 f0       	brcs	.+14     	; 0x22f6 <__divsf3_pse+0x26>
    22e8:	9f 5f       	subi	r25, 0xFF	; 255
    22ea:	5f 4f       	sbci	r21, 0xFF	; 255
    22ec:	22 0f       	add	r18, r18
    22ee:	33 1f       	adc	r19, r19
    22f0:	44 1f       	adc	r20, r20
    22f2:	aa 1f       	adc	r26, r26
    22f4:	a9 f3       	breq	.-22     	; 0x22e0 <__divsf3_pse+0x10>
    22f6:	33 d0       	rcall	.+102    	; 0x235e <__divsf3_pse+0x8e>
    22f8:	0e 2e       	mov	r0, r30
    22fa:	3a f0       	brmi	.+14     	; 0x230a <__divsf3_pse+0x3a>
    22fc:	e0 e8       	ldi	r30, 0x80	; 128
    22fe:	30 d0       	rcall	.+96     	; 0x2360 <__divsf3_pse+0x90>
    2300:	91 50       	subi	r25, 0x01	; 1
    2302:	50 40       	sbci	r21, 0x00	; 0
    2304:	e6 95       	lsr	r30
    2306:	00 1c       	adc	r0, r0
    2308:	ca f7       	brpl	.-14     	; 0x22fc <__divsf3_pse+0x2c>
    230a:	29 d0       	rcall	.+82     	; 0x235e <__divsf3_pse+0x8e>
    230c:	fe 2f       	mov	r31, r30
    230e:	27 d0       	rcall	.+78     	; 0x235e <__divsf3_pse+0x8e>
    2310:	66 0f       	add	r22, r22
    2312:	77 1f       	adc	r23, r23
    2314:	88 1f       	adc	r24, r24
    2316:	bb 1f       	adc	r27, r27
    2318:	26 17       	cp	r18, r22
    231a:	37 07       	cpc	r19, r23
    231c:	48 07       	cpc	r20, r24
    231e:	ab 07       	cpc	r26, r27
    2320:	b0 e8       	ldi	r27, 0x80	; 128
    2322:	09 f0       	breq	.+2      	; 0x2326 <__divsf3_pse+0x56>
    2324:	bb 0b       	sbc	r27, r27
    2326:	80 2d       	mov	r24, r0
    2328:	bf 01       	movw	r22, r30
    232a:	ff 27       	eor	r31, r31
    232c:	93 58       	subi	r25, 0x83	; 131
    232e:	5f 4f       	sbci	r21, 0xFF	; 255
    2330:	2a f0       	brmi	.+10     	; 0x233c <__divsf3_pse+0x6c>
    2332:	9e 3f       	cpi	r25, 0xFE	; 254
    2334:	51 05       	cpc	r21, r1
    2336:	68 f0       	brcs	.+26     	; 0x2352 <__divsf3_pse+0x82>
    2338:	b1 c0       	rjmp	.+354    	; 0x249c <__fp_inf>
    233a:	59 c1       	rjmp	.+690    	; 0x25ee <__fp_szero>
    233c:	5f 3f       	cpi	r21, 0xFF	; 255
    233e:	ec f3       	brlt	.-6      	; 0x233a <__divsf3_pse+0x6a>
    2340:	98 3e       	cpi	r25, 0xE8	; 232
    2342:	dc f3       	brlt	.-10     	; 0x233a <__divsf3_pse+0x6a>
    2344:	86 95       	lsr	r24
    2346:	77 95       	ror	r23
    2348:	67 95       	ror	r22
    234a:	b7 95       	ror	r27
    234c:	f7 95       	ror	r31
    234e:	9f 5f       	subi	r25, 0xFF	; 255
    2350:	c9 f7       	brne	.-14     	; 0x2344 <__divsf3_pse+0x74>
    2352:	88 0f       	add	r24, r24
    2354:	91 1d       	adc	r25, r1
    2356:	96 95       	lsr	r25
    2358:	87 95       	ror	r24
    235a:	97 f9       	bld	r25, 7
    235c:	08 95       	ret
    235e:	e1 e0       	ldi	r30, 0x01	; 1
    2360:	66 0f       	add	r22, r22
    2362:	77 1f       	adc	r23, r23
    2364:	88 1f       	adc	r24, r24
    2366:	bb 1f       	adc	r27, r27
    2368:	62 17       	cp	r22, r18
    236a:	73 07       	cpc	r23, r19
    236c:	84 07       	cpc	r24, r20
    236e:	ba 07       	cpc	r27, r26
    2370:	20 f0       	brcs	.+8      	; 0x237a <__divsf3_pse+0xaa>
    2372:	62 1b       	sub	r22, r18
    2374:	73 0b       	sbc	r23, r19
    2376:	84 0b       	sbc	r24, r20
    2378:	ba 0b       	sbc	r27, r26
    237a:	ee 1f       	adc	r30, r30
    237c:	88 f7       	brcc	.-30     	; 0x2360 <__divsf3_pse+0x90>
    237e:	e0 95       	com	r30
    2380:	08 95       	ret

00002382 <__fixunssfsi>:
    2382:	1a d1       	rcall	.+564    	; 0x25b8 <__fp_splitA>
    2384:	88 f0       	brcs	.+34     	; 0x23a8 <__fixunssfsi+0x26>
    2386:	9f 57       	subi	r25, 0x7F	; 127
    2388:	90 f0       	brcs	.+36     	; 0x23ae <__fixunssfsi+0x2c>
    238a:	b9 2f       	mov	r27, r25
    238c:	99 27       	eor	r25, r25
    238e:	b7 51       	subi	r27, 0x17	; 23
    2390:	a0 f0       	brcs	.+40     	; 0x23ba <__fixunssfsi+0x38>
    2392:	d1 f0       	breq	.+52     	; 0x23c8 <__fixunssfsi+0x46>
    2394:	66 0f       	add	r22, r22
    2396:	77 1f       	adc	r23, r23
    2398:	88 1f       	adc	r24, r24
    239a:	99 1f       	adc	r25, r25
    239c:	1a f0       	brmi	.+6      	; 0x23a4 <__fixunssfsi+0x22>
    239e:	ba 95       	dec	r27
    23a0:	c9 f7       	brne	.-14     	; 0x2394 <__fixunssfsi+0x12>
    23a2:	12 c0       	rjmp	.+36     	; 0x23c8 <__fixunssfsi+0x46>
    23a4:	b1 30       	cpi	r27, 0x01	; 1
    23a6:	81 f0       	breq	.+32     	; 0x23c8 <__fixunssfsi+0x46>
    23a8:	21 d1       	rcall	.+578    	; 0x25ec <__fp_zero>
    23aa:	b1 e0       	ldi	r27, 0x01	; 1
    23ac:	08 95       	ret
    23ae:	1e c1       	rjmp	.+572    	; 0x25ec <__fp_zero>
    23b0:	67 2f       	mov	r22, r23
    23b2:	78 2f       	mov	r23, r24
    23b4:	88 27       	eor	r24, r24
    23b6:	b8 5f       	subi	r27, 0xF8	; 248
    23b8:	39 f0       	breq	.+14     	; 0x23c8 <__fixunssfsi+0x46>
    23ba:	b9 3f       	cpi	r27, 0xF9	; 249
    23bc:	cc f3       	brlt	.-14     	; 0x23b0 <__fixunssfsi+0x2e>
    23be:	86 95       	lsr	r24
    23c0:	77 95       	ror	r23
    23c2:	67 95       	ror	r22
    23c4:	b3 95       	inc	r27
    23c6:	d9 f7       	brne	.-10     	; 0x23be <__fixunssfsi+0x3c>
    23c8:	3e f4       	brtc	.+14     	; 0x23d8 <__fixunssfsi+0x56>
    23ca:	90 95       	com	r25
    23cc:	80 95       	com	r24
    23ce:	70 95       	com	r23
    23d0:	61 95       	neg	r22
    23d2:	7f 4f       	sbci	r23, 0xFF	; 255
    23d4:	8f 4f       	sbci	r24, 0xFF	; 255
    23d6:	9f 4f       	sbci	r25, 0xFF	; 255
    23d8:	08 95       	ret

000023da <__floatunsisf>:
    23da:	e8 94       	clt
    23dc:	09 c0       	rjmp	.+18     	; 0x23f0 <__floatsisf+0x12>

000023de <__floatsisf>:
    23de:	97 fb       	bst	r25, 7
    23e0:	3e f4       	brtc	.+14     	; 0x23f0 <__floatsisf+0x12>
    23e2:	90 95       	com	r25
    23e4:	80 95       	com	r24
    23e6:	70 95       	com	r23
    23e8:	61 95       	neg	r22
    23ea:	7f 4f       	sbci	r23, 0xFF	; 255
    23ec:	8f 4f       	sbci	r24, 0xFF	; 255
    23ee:	9f 4f       	sbci	r25, 0xFF	; 255
    23f0:	99 23       	and	r25, r25
    23f2:	a9 f0       	breq	.+42     	; 0x241e <__floatsisf+0x40>
    23f4:	f9 2f       	mov	r31, r25
    23f6:	96 e9       	ldi	r25, 0x96	; 150
    23f8:	bb 27       	eor	r27, r27
    23fa:	93 95       	inc	r25
    23fc:	f6 95       	lsr	r31
    23fe:	87 95       	ror	r24
    2400:	77 95       	ror	r23
    2402:	67 95       	ror	r22
    2404:	b7 95       	ror	r27
    2406:	f1 11       	cpse	r31, r1
    2408:	f8 cf       	rjmp	.-16     	; 0x23fa <__floatsisf+0x1c>
    240a:	fa f4       	brpl	.+62     	; 0x244a <__floatsisf+0x6c>
    240c:	bb 0f       	add	r27, r27
    240e:	11 f4       	brne	.+4      	; 0x2414 <__floatsisf+0x36>
    2410:	60 ff       	sbrs	r22, 0
    2412:	1b c0       	rjmp	.+54     	; 0x244a <__floatsisf+0x6c>
    2414:	6f 5f       	subi	r22, 0xFF	; 255
    2416:	7f 4f       	sbci	r23, 0xFF	; 255
    2418:	8f 4f       	sbci	r24, 0xFF	; 255
    241a:	9f 4f       	sbci	r25, 0xFF	; 255
    241c:	16 c0       	rjmp	.+44     	; 0x244a <__floatsisf+0x6c>
    241e:	88 23       	and	r24, r24
    2420:	11 f0       	breq	.+4      	; 0x2426 <__floatsisf+0x48>
    2422:	96 e9       	ldi	r25, 0x96	; 150
    2424:	11 c0       	rjmp	.+34     	; 0x2448 <__floatsisf+0x6a>
    2426:	77 23       	and	r23, r23
    2428:	21 f0       	breq	.+8      	; 0x2432 <__floatsisf+0x54>
    242a:	9e e8       	ldi	r25, 0x8E	; 142
    242c:	87 2f       	mov	r24, r23
    242e:	76 2f       	mov	r23, r22
    2430:	05 c0       	rjmp	.+10     	; 0x243c <__floatsisf+0x5e>
    2432:	66 23       	and	r22, r22
    2434:	71 f0       	breq	.+28     	; 0x2452 <__floatsisf+0x74>
    2436:	96 e8       	ldi	r25, 0x86	; 134
    2438:	86 2f       	mov	r24, r22
    243a:	70 e0       	ldi	r23, 0x00	; 0
    243c:	60 e0       	ldi	r22, 0x00	; 0
    243e:	2a f0       	brmi	.+10     	; 0x244a <__floatsisf+0x6c>
    2440:	9a 95       	dec	r25
    2442:	66 0f       	add	r22, r22
    2444:	77 1f       	adc	r23, r23
    2446:	88 1f       	adc	r24, r24
    2448:	da f7       	brpl	.-10     	; 0x2440 <__floatsisf+0x62>
    244a:	88 0f       	add	r24, r24
    244c:	96 95       	lsr	r25
    244e:	87 95       	ror	r24
    2450:	97 f9       	bld	r25, 7
    2452:	08 95       	ret

00002454 <__fp_cmp>:
    2454:	99 0f       	add	r25, r25
    2456:	00 08       	sbc	r0, r0
    2458:	55 0f       	add	r21, r21
    245a:	aa 0b       	sbc	r26, r26
    245c:	e0 e8       	ldi	r30, 0x80	; 128
    245e:	fe ef       	ldi	r31, 0xFE	; 254
    2460:	16 16       	cp	r1, r22
    2462:	17 06       	cpc	r1, r23
    2464:	e8 07       	cpc	r30, r24
    2466:	f9 07       	cpc	r31, r25
    2468:	c0 f0       	brcs	.+48     	; 0x249a <__fp_cmp+0x46>
    246a:	12 16       	cp	r1, r18
    246c:	13 06       	cpc	r1, r19
    246e:	e4 07       	cpc	r30, r20
    2470:	f5 07       	cpc	r31, r21
    2472:	98 f0       	brcs	.+38     	; 0x249a <__fp_cmp+0x46>
    2474:	62 1b       	sub	r22, r18
    2476:	73 0b       	sbc	r23, r19
    2478:	84 0b       	sbc	r24, r20
    247a:	95 0b       	sbc	r25, r21
    247c:	39 f4       	brne	.+14     	; 0x248c <__fp_cmp+0x38>
    247e:	0a 26       	eor	r0, r26
    2480:	61 f0       	breq	.+24     	; 0x249a <__fp_cmp+0x46>
    2482:	23 2b       	or	r18, r19
    2484:	24 2b       	or	r18, r20
    2486:	25 2b       	or	r18, r21
    2488:	21 f4       	brne	.+8      	; 0x2492 <__fp_cmp+0x3e>
    248a:	08 95       	ret
    248c:	0a 26       	eor	r0, r26
    248e:	09 f4       	brne	.+2      	; 0x2492 <__fp_cmp+0x3e>
    2490:	a1 40       	sbci	r26, 0x01	; 1
    2492:	a6 95       	lsr	r26
    2494:	8f ef       	ldi	r24, 0xFF	; 255
    2496:	81 1d       	adc	r24, r1
    2498:	81 1d       	adc	r24, r1
    249a:	08 95       	ret

0000249c <__fp_inf>:
    249c:	97 f9       	bld	r25, 7
    249e:	9f 67       	ori	r25, 0x7F	; 127
    24a0:	80 e8       	ldi	r24, 0x80	; 128
    24a2:	70 e0       	ldi	r23, 0x00	; 0
    24a4:	60 e0       	ldi	r22, 0x00	; 0
    24a6:	08 95       	ret

000024a8 <__fp_nan>:
    24a8:	9f ef       	ldi	r25, 0xFF	; 255
    24aa:	80 ec       	ldi	r24, 0xC0	; 192
    24ac:	08 95       	ret

000024ae <__fp_powser>:
    24ae:	df 93       	push	r29
    24b0:	cf 93       	push	r28
    24b2:	1f 93       	push	r17
    24b4:	0f 93       	push	r16
    24b6:	ff 92       	push	r15
    24b8:	ef 92       	push	r14
    24ba:	df 92       	push	r13
    24bc:	7b 01       	movw	r14, r22
    24be:	8c 01       	movw	r16, r24
    24c0:	68 94       	set
    24c2:	05 c0       	rjmp	.+10     	; 0x24ce <__fp_powser+0x20>
    24c4:	da 2e       	mov	r13, r26
    24c6:	ef 01       	movw	r28, r30
    24c8:	af d0       	rcall	.+350    	; 0x2628 <__mulsf3x>
    24ca:	fe 01       	movw	r30, r28
    24cc:	e8 94       	clt
    24ce:	a5 91       	lpm	r26, Z+
    24d0:	25 91       	lpm	r18, Z+
    24d2:	35 91       	lpm	r19, Z+
    24d4:	45 91       	lpm	r20, Z+
    24d6:	55 91       	lpm	r21, Z+
    24d8:	ae f3       	brts	.-22     	; 0x24c4 <__fp_powser+0x16>
    24da:	ef 01       	movw	r28, r30
    24dc:	2e de       	rcall	.-932    	; 0x213a <__addsf3x>
    24de:	fe 01       	movw	r30, r28
    24e0:	97 01       	movw	r18, r14
    24e2:	a8 01       	movw	r20, r16
    24e4:	da 94       	dec	r13
    24e6:	79 f7       	brne	.-34     	; 0x24c6 <__fp_powser+0x18>
    24e8:	df 90       	pop	r13
    24ea:	ef 90       	pop	r14
    24ec:	ff 90       	pop	r15
    24ee:	0f 91       	pop	r16
    24f0:	1f 91       	pop	r17
    24f2:	cf 91       	pop	r28
    24f4:	df 91       	pop	r29
    24f6:	08 95       	ret

000024f8 <__fp_pscA>:
    24f8:	00 24       	eor	r0, r0
    24fa:	0a 94       	dec	r0
    24fc:	16 16       	cp	r1, r22
    24fe:	17 06       	cpc	r1, r23
    2500:	18 06       	cpc	r1, r24
    2502:	09 06       	cpc	r0, r25
    2504:	08 95       	ret

00002506 <__fp_pscB>:
    2506:	00 24       	eor	r0, r0
    2508:	0a 94       	dec	r0
    250a:	12 16       	cp	r1, r18
    250c:	13 06       	cpc	r1, r19
    250e:	14 06       	cpc	r1, r20
    2510:	05 06       	cpc	r0, r21
    2512:	08 95       	ret
    2514:	c9 cf       	rjmp	.-110    	; 0x24a8 <__fp_nan>

00002516 <__fp_rempio2>:
    2516:	50 d0       	rcall	.+160    	; 0x25b8 <__fp_splitA>
    2518:	e8 f3       	brcs	.-6      	; 0x2514 <__fp_pscB+0xe>
    251a:	e8 94       	clt
    251c:	e0 e0       	ldi	r30, 0x00	; 0
    251e:	bb 27       	eor	r27, r27
    2520:	9f 57       	subi	r25, 0x7F	; 127
    2522:	f0 f0       	brcs	.+60     	; 0x2560 <__fp_rempio2+0x4a>
    2524:	2a ed       	ldi	r18, 0xDA	; 218
    2526:	3f e0       	ldi	r19, 0x0F	; 15
    2528:	49 ec       	ldi	r20, 0xC9	; 201
    252a:	06 c0       	rjmp	.+12     	; 0x2538 <__fp_rempio2+0x22>
    252c:	ee 0f       	add	r30, r30
    252e:	bb 0f       	add	r27, r27
    2530:	66 1f       	adc	r22, r22
    2532:	77 1f       	adc	r23, r23
    2534:	88 1f       	adc	r24, r24
    2536:	28 f0       	brcs	.+10     	; 0x2542 <__fp_rempio2+0x2c>
    2538:	b2 3a       	cpi	r27, 0xA2	; 162
    253a:	62 07       	cpc	r22, r18
    253c:	73 07       	cpc	r23, r19
    253e:	84 07       	cpc	r24, r20
    2540:	28 f0       	brcs	.+10     	; 0x254c <__fp_rempio2+0x36>
    2542:	b2 5a       	subi	r27, 0xA2	; 162
    2544:	62 0b       	sbc	r22, r18
    2546:	73 0b       	sbc	r23, r19
    2548:	84 0b       	sbc	r24, r20
    254a:	e3 95       	inc	r30
    254c:	9a 95       	dec	r25
    254e:	72 f7       	brpl	.-36     	; 0x252c <__fp_rempio2+0x16>
    2550:	80 38       	cpi	r24, 0x80	; 128
    2552:	30 f4       	brcc	.+12     	; 0x2560 <__fp_rempio2+0x4a>
    2554:	9a 95       	dec	r25
    2556:	bb 0f       	add	r27, r27
    2558:	66 1f       	adc	r22, r22
    255a:	77 1f       	adc	r23, r23
    255c:	88 1f       	adc	r24, r24
    255e:	d2 f7       	brpl	.-12     	; 0x2554 <__fp_rempio2+0x3e>
    2560:	90 48       	sbci	r25, 0x80	; 128
    2562:	06 c1       	rjmp	.+524    	; 0x2770 <__fp_mpack_finite>

00002564 <__fp_round>:
    2564:	09 2e       	mov	r0, r25
    2566:	03 94       	inc	r0
    2568:	00 0c       	add	r0, r0
    256a:	11 f4       	brne	.+4      	; 0x2570 <__fp_round+0xc>
    256c:	88 23       	and	r24, r24
    256e:	52 f0       	brmi	.+20     	; 0x2584 <__fp_round+0x20>
    2570:	bb 0f       	add	r27, r27
    2572:	40 f4       	brcc	.+16     	; 0x2584 <__fp_round+0x20>
    2574:	bf 2b       	or	r27, r31
    2576:	11 f4       	brne	.+4      	; 0x257c <__fp_round+0x18>
    2578:	60 ff       	sbrs	r22, 0
    257a:	04 c0       	rjmp	.+8      	; 0x2584 <__fp_round+0x20>
    257c:	6f 5f       	subi	r22, 0xFF	; 255
    257e:	7f 4f       	sbci	r23, 0xFF	; 255
    2580:	8f 4f       	sbci	r24, 0xFF	; 255
    2582:	9f 4f       	sbci	r25, 0xFF	; 255
    2584:	08 95       	ret

00002586 <__fp_sinus>:
    2586:	ef 93       	push	r30
    2588:	e0 ff       	sbrs	r30, 0
    258a:	06 c0       	rjmp	.+12     	; 0x2598 <__fp_sinus+0x12>
    258c:	a2 ea       	ldi	r26, 0xA2	; 162
    258e:	2a ed       	ldi	r18, 0xDA	; 218
    2590:	3f e0       	ldi	r19, 0x0F	; 15
    2592:	49 ec       	ldi	r20, 0xC9	; 201
    2594:	5f eb       	ldi	r21, 0xBF	; 191
    2596:	d1 dd       	rcall	.-1118   	; 0x213a <__addsf3x>
    2598:	e5 df       	rcall	.-54     	; 0x2564 <__fp_round>
    259a:	0f 90       	pop	r0
    259c:	03 94       	inc	r0
    259e:	01 fc       	sbrc	r0, 1
    25a0:	90 58       	subi	r25, 0x80	; 128
    25a2:	e9 eb       	ldi	r30, 0xB9	; 185
    25a4:	f0 e0       	ldi	r31, 0x00	; 0
    25a6:	f7 c0       	rjmp	.+494    	; 0x2796 <__fp_powsodd>

000025a8 <__fp_split3>:
    25a8:	57 fd       	sbrc	r21, 7
    25aa:	90 58       	subi	r25, 0x80	; 128
    25ac:	44 0f       	add	r20, r20
    25ae:	55 1f       	adc	r21, r21
    25b0:	59 f0       	breq	.+22     	; 0x25c8 <__fp_splitA+0x10>
    25b2:	5f 3f       	cpi	r21, 0xFF	; 255
    25b4:	71 f0       	breq	.+28     	; 0x25d2 <__fp_splitA+0x1a>
    25b6:	47 95       	ror	r20

000025b8 <__fp_splitA>:
    25b8:	88 0f       	add	r24, r24
    25ba:	97 fb       	bst	r25, 7
    25bc:	99 1f       	adc	r25, r25
    25be:	61 f0       	breq	.+24     	; 0x25d8 <__fp_splitA+0x20>
    25c0:	9f 3f       	cpi	r25, 0xFF	; 255
    25c2:	79 f0       	breq	.+30     	; 0x25e2 <__fp_splitA+0x2a>
    25c4:	87 95       	ror	r24
    25c6:	08 95       	ret
    25c8:	12 16       	cp	r1, r18
    25ca:	13 06       	cpc	r1, r19
    25cc:	14 06       	cpc	r1, r20
    25ce:	55 1f       	adc	r21, r21
    25d0:	f2 cf       	rjmp	.-28     	; 0x25b6 <__fp_split3+0xe>
    25d2:	46 95       	lsr	r20
    25d4:	f1 df       	rcall	.-30     	; 0x25b8 <__fp_splitA>
    25d6:	08 c0       	rjmp	.+16     	; 0x25e8 <__fp_splitA+0x30>
    25d8:	16 16       	cp	r1, r22
    25da:	17 06       	cpc	r1, r23
    25dc:	18 06       	cpc	r1, r24
    25de:	99 1f       	adc	r25, r25
    25e0:	f1 cf       	rjmp	.-30     	; 0x25c4 <__fp_splitA+0xc>
    25e2:	86 95       	lsr	r24
    25e4:	71 05       	cpc	r23, r1
    25e6:	61 05       	cpc	r22, r1
    25e8:	08 94       	sec
    25ea:	08 95       	ret

000025ec <__fp_zero>:
    25ec:	e8 94       	clt

000025ee <__fp_szero>:
    25ee:	bb 27       	eor	r27, r27
    25f0:	66 27       	eor	r22, r22
    25f2:	77 27       	eor	r23, r23
    25f4:	cb 01       	movw	r24, r22
    25f6:	97 f9       	bld	r25, 7
    25f8:	08 95       	ret

000025fa <__gesf2>:
    25fa:	2c df       	rcall	.-424    	; 0x2454 <__fp_cmp>
    25fc:	08 f4       	brcc	.+2      	; 0x2600 <__gesf2+0x6>
    25fe:	8f ef       	ldi	r24, 0xFF	; 255
    2600:	08 95       	ret

00002602 <inverse>:
    2602:	9b 01       	movw	r18, r22
    2604:	ac 01       	movw	r20, r24
    2606:	60 e0       	ldi	r22, 0x00	; 0
    2608:	70 e0       	ldi	r23, 0x00	; 0
    260a:	80 e8       	ldi	r24, 0x80	; 128
    260c:	9f e3       	ldi	r25, 0x3F	; 63
    260e:	51 ce       	rjmp	.-862    	; 0x22b2 <__divsf3>

00002610 <__mulsf3>:
    2610:	0b d0       	rcall	.+22     	; 0x2628 <__mulsf3x>
    2612:	a8 cf       	rjmp	.-176    	; 0x2564 <__fp_round>
    2614:	71 df       	rcall	.-286    	; 0x24f8 <__fp_pscA>
    2616:	28 f0       	brcs	.+10     	; 0x2622 <__mulsf3+0x12>
    2618:	76 df       	rcall	.-276    	; 0x2506 <__fp_pscB>
    261a:	18 f0       	brcs	.+6      	; 0x2622 <__mulsf3+0x12>
    261c:	95 23       	and	r25, r21
    261e:	09 f0       	breq	.+2      	; 0x2622 <__mulsf3+0x12>
    2620:	3d cf       	rjmp	.-390    	; 0x249c <__fp_inf>
    2622:	42 cf       	rjmp	.-380    	; 0x24a8 <__fp_nan>
    2624:	11 24       	eor	r1, r1
    2626:	e3 cf       	rjmp	.-58     	; 0x25ee <__fp_szero>

00002628 <__mulsf3x>:
    2628:	bf df       	rcall	.-130    	; 0x25a8 <__fp_split3>
    262a:	a0 f3       	brcs	.-24     	; 0x2614 <__mulsf3+0x4>

0000262c <__mulsf3_pse>:
    262c:	95 9f       	mul	r25, r21
    262e:	d1 f3       	breq	.-12     	; 0x2624 <__mulsf3+0x14>
    2630:	95 0f       	add	r25, r21
    2632:	50 e0       	ldi	r21, 0x00	; 0
    2634:	55 1f       	adc	r21, r21
    2636:	62 9f       	mul	r22, r18
    2638:	f0 01       	movw	r30, r0
    263a:	72 9f       	mul	r23, r18
    263c:	bb 27       	eor	r27, r27
    263e:	f0 0d       	add	r31, r0
    2640:	b1 1d       	adc	r27, r1
    2642:	63 9f       	mul	r22, r19
    2644:	aa 27       	eor	r26, r26
    2646:	f0 0d       	add	r31, r0
    2648:	b1 1d       	adc	r27, r1
    264a:	aa 1f       	adc	r26, r26
    264c:	64 9f       	mul	r22, r20
    264e:	66 27       	eor	r22, r22
    2650:	b0 0d       	add	r27, r0
    2652:	a1 1d       	adc	r26, r1
    2654:	66 1f       	adc	r22, r22
    2656:	82 9f       	mul	r24, r18
    2658:	22 27       	eor	r18, r18
    265a:	b0 0d       	add	r27, r0
    265c:	a1 1d       	adc	r26, r1
    265e:	62 1f       	adc	r22, r18
    2660:	73 9f       	mul	r23, r19
    2662:	b0 0d       	add	r27, r0
    2664:	a1 1d       	adc	r26, r1
    2666:	62 1f       	adc	r22, r18
    2668:	83 9f       	mul	r24, r19
    266a:	a0 0d       	add	r26, r0
    266c:	61 1d       	adc	r22, r1
    266e:	22 1f       	adc	r18, r18
    2670:	74 9f       	mul	r23, r20
    2672:	33 27       	eor	r19, r19
    2674:	a0 0d       	add	r26, r0
    2676:	61 1d       	adc	r22, r1
    2678:	23 1f       	adc	r18, r19
    267a:	84 9f       	mul	r24, r20
    267c:	60 0d       	add	r22, r0
    267e:	21 1d       	adc	r18, r1
    2680:	82 2f       	mov	r24, r18
    2682:	76 2f       	mov	r23, r22
    2684:	6a 2f       	mov	r22, r26
    2686:	11 24       	eor	r1, r1
    2688:	9f 57       	subi	r25, 0x7F	; 127
    268a:	50 40       	sbci	r21, 0x00	; 0
    268c:	8a f0       	brmi	.+34     	; 0x26b0 <__mulsf3_pse+0x84>
    268e:	e1 f0       	breq	.+56     	; 0x26c8 <__mulsf3_pse+0x9c>
    2690:	88 23       	and	r24, r24
    2692:	4a f0       	brmi	.+18     	; 0x26a6 <__mulsf3_pse+0x7a>
    2694:	ee 0f       	add	r30, r30
    2696:	ff 1f       	adc	r31, r31
    2698:	bb 1f       	adc	r27, r27
    269a:	66 1f       	adc	r22, r22
    269c:	77 1f       	adc	r23, r23
    269e:	88 1f       	adc	r24, r24
    26a0:	91 50       	subi	r25, 0x01	; 1
    26a2:	50 40       	sbci	r21, 0x00	; 0
    26a4:	a9 f7       	brne	.-22     	; 0x2690 <__mulsf3_pse+0x64>
    26a6:	9e 3f       	cpi	r25, 0xFE	; 254
    26a8:	51 05       	cpc	r21, r1
    26aa:	70 f0       	brcs	.+28     	; 0x26c8 <__mulsf3_pse+0x9c>
    26ac:	f7 ce       	rjmp	.-530    	; 0x249c <__fp_inf>
    26ae:	9f cf       	rjmp	.-194    	; 0x25ee <__fp_szero>
    26b0:	5f 3f       	cpi	r21, 0xFF	; 255
    26b2:	ec f3       	brlt	.-6      	; 0x26ae <__mulsf3_pse+0x82>
    26b4:	98 3e       	cpi	r25, 0xE8	; 232
    26b6:	dc f3       	brlt	.-10     	; 0x26ae <__mulsf3_pse+0x82>
    26b8:	86 95       	lsr	r24
    26ba:	77 95       	ror	r23
    26bc:	67 95       	ror	r22
    26be:	b7 95       	ror	r27
    26c0:	f7 95       	ror	r31
    26c2:	e7 95       	ror	r30
    26c4:	9f 5f       	subi	r25, 0xFF	; 255
    26c6:	c1 f7       	brne	.-16     	; 0x26b8 <__mulsf3_pse+0x8c>
    26c8:	fe 2b       	or	r31, r30
    26ca:	88 0f       	add	r24, r24
    26cc:	91 1d       	adc	r25, r1
    26ce:	96 95       	lsr	r25
    26d0:	87 95       	ror	r24
    26d2:	97 f9       	bld	r25, 7
    26d4:	08 95       	ret

000026d6 <sin>:
    26d6:	9f 93       	push	r25
    26d8:	1e df       	rcall	.-452    	; 0x2516 <__fp_rempio2>
    26da:	0f 90       	pop	r0
    26dc:	07 fc       	sbrc	r0, 7
    26de:	ee 5f       	subi	r30, 0xFE	; 254
    26e0:	52 cf       	rjmp	.-348    	; 0x2586 <__fp_sinus>
    26e2:	11 f4       	brne	.+4      	; 0x26e8 <sin+0x12>
    26e4:	0e f4       	brtc	.+2      	; 0x26e8 <sin+0x12>
    26e6:	e0 ce       	rjmp	.-576    	; 0x24a8 <__fp_nan>
    26e8:	41 c0       	rjmp	.+130    	; 0x276c <__fp_mpack>

000026ea <sqrt>:
    26ea:	66 df       	rcall	.-308    	; 0x25b8 <__fp_splitA>
    26ec:	d0 f3       	brcs	.-12     	; 0x26e2 <sin+0xc>
    26ee:	99 23       	and	r25, r25
    26f0:	d9 f3       	breq	.-10     	; 0x26e8 <sin+0x12>
    26f2:	ce f3       	brts	.-14     	; 0x26e6 <sin+0x10>
    26f4:	9f 57       	subi	r25, 0x7F	; 127
    26f6:	55 0b       	sbc	r21, r21
    26f8:	87 ff       	sbrs	r24, 7
    26fa:	46 d0       	rcall	.+140    	; 0x2788 <__fp_norm2>
    26fc:	00 24       	eor	r0, r0
    26fe:	a0 e6       	ldi	r26, 0x60	; 96
    2700:	40 ea       	ldi	r20, 0xA0	; 160
    2702:	90 01       	movw	r18, r0
    2704:	80 58       	subi	r24, 0x80	; 128
    2706:	56 95       	lsr	r21
    2708:	97 95       	ror	r25
    270a:	28 f4       	brcc	.+10     	; 0x2716 <sqrt+0x2c>
    270c:	80 5c       	subi	r24, 0xC0	; 192
    270e:	66 0f       	add	r22, r22
    2710:	77 1f       	adc	r23, r23
    2712:	88 1f       	adc	r24, r24
    2714:	20 f0       	brcs	.+8      	; 0x271e <sqrt+0x34>
    2716:	26 17       	cp	r18, r22
    2718:	37 07       	cpc	r19, r23
    271a:	48 07       	cpc	r20, r24
    271c:	30 f4       	brcc	.+12     	; 0x272a <sqrt+0x40>
    271e:	62 1b       	sub	r22, r18
    2720:	73 0b       	sbc	r23, r19
    2722:	84 0b       	sbc	r24, r20
    2724:	20 29       	or	r18, r0
    2726:	31 29       	or	r19, r1
    2728:	4a 2b       	or	r20, r26
    272a:	a6 95       	lsr	r26
    272c:	17 94       	ror	r1
    272e:	07 94       	ror	r0
    2730:	20 25       	eor	r18, r0
    2732:	31 25       	eor	r19, r1
    2734:	4a 27       	eor	r20, r26
    2736:	58 f7       	brcc	.-42     	; 0x270e <sqrt+0x24>
    2738:	66 0f       	add	r22, r22
    273a:	77 1f       	adc	r23, r23
    273c:	88 1f       	adc	r24, r24
    273e:	20 f0       	brcs	.+8      	; 0x2748 <sqrt+0x5e>
    2740:	26 17       	cp	r18, r22
    2742:	37 07       	cpc	r19, r23
    2744:	48 07       	cpc	r20, r24
    2746:	30 f4       	brcc	.+12     	; 0x2754 <sqrt+0x6a>
    2748:	62 0b       	sbc	r22, r18
    274a:	73 0b       	sbc	r23, r19
    274c:	84 0b       	sbc	r24, r20
    274e:	20 0d       	add	r18, r0
    2750:	31 1d       	adc	r19, r1
    2752:	41 1d       	adc	r20, r1
    2754:	a0 95       	com	r26
    2756:	81 f7       	brne	.-32     	; 0x2738 <sqrt+0x4e>
    2758:	b9 01       	movw	r22, r18
    275a:	84 2f       	mov	r24, r20
    275c:	91 58       	subi	r25, 0x81	; 129
    275e:	88 0f       	add	r24, r24
    2760:	96 95       	lsr	r25
    2762:	87 95       	ror	r24
    2764:	08 95       	ret

00002766 <square>:
    2766:	9b 01       	movw	r18, r22
    2768:	ac 01       	movw	r20, r24
    276a:	52 cf       	rjmp	.-348    	; 0x2610 <__mulsf3>

0000276c <__fp_mpack>:
    276c:	9f 3f       	cpi	r25, 0xFF	; 255
    276e:	31 f0       	breq	.+12     	; 0x277c <__fp_mpack_finite+0xc>

00002770 <__fp_mpack_finite>:
    2770:	91 50       	subi	r25, 0x01	; 1
    2772:	20 f4       	brcc	.+8      	; 0x277c <__fp_mpack_finite+0xc>
    2774:	87 95       	ror	r24
    2776:	77 95       	ror	r23
    2778:	67 95       	ror	r22
    277a:	b7 95       	ror	r27
    277c:	88 0f       	add	r24, r24
    277e:	91 1d       	adc	r25, r1
    2780:	96 95       	lsr	r25
    2782:	87 95       	ror	r24
    2784:	97 f9       	bld	r25, 7
    2786:	08 95       	ret

00002788 <__fp_norm2>:
    2788:	91 50       	subi	r25, 0x01	; 1
    278a:	50 40       	sbci	r21, 0x00	; 0
    278c:	66 0f       	add	r22, r22
    278e:	77 1f       	adc	r23, r23
    2790:	88 1f       	adc	r24, r24
    2792:	d2 f7       	brpl	.-12     	; 0x2788 <__fp_norm2>
    2794:	08 95       	ret

00002796 <__fp_powsodd>:
    2796:	9f 93       	push	r25
    2798:	8f 93       	push	r24
    279a:	7f 93       	push	r23
    279c:	6f 93       	push	r22
    279e:	ff 93       	push	r31
    27a0:	ef 93       	push	r30
    27a2:	9b 01       	movw	r18, r22
    27a4:	ac 01       	movw	r20, r24
    27a6:	34 df       	rcall	.-408    	; 0x2610 <__mulsf3>
    27a8:	ef 91       	pop	r30
    27aa:	ff 91       	pop	r31
    27ac:	80 de       	rcall	.-768    	; 0x24ae <__fp_powser>
    27ae:	2f 91       	pop	r18
    27b0:	3f 91       	pop	r19
    27b2:	4f 91       	pop	r20
    27b4:	5f 91       	pop	r21
    27b6:	2c cf       	rjmp	.-424    	; 0x2610 <__mulsf3>

000027b8 <__mulsi3>:
    27b8:	db 01       	movw	r26, r22
    27ba:	8f 93       	push	r24
    27bc:	9f 93       	push	r25
    27be:	40 d0       	rcall	.+128    	; 0x2840 <__muluhisi3>
    27c0:	bf 91       	pop	r27
    27c2:	af 91       	pop	r26
    27c4:	a2 9f       	mul	r26, r18
    27c6:	80 0d       	add	r24, r0
    27c8:	91 1d       	adc	r25, r1
    27ca:	a3 9f       	mul	r26, r19
    27cc:	90 0d       	add	r25, r0
    27ce:	b2 9f       	mul	r27, r18
    27d0:	90 0d       	add	r25, r0
    27d2:	11 24       	eor	r1, r1
    27d4:	08 95       	ret

000027d6 <__divmodhi4>:
    27d6:	97 fb       	bst	r25, 7
    27d8:	07 2e       	mov	r0, r23
    27da:	16 f4       	brtc	.+4      	; 0x27e0 <__divmodhi4+0xa>
    27dc:	00 94       	com	r0
    27de:	06 d0       	rcall	.+12     	; 0x27ec <__divmodhi4_neg1>
    27e0:	77 fd       	sbrc	r23, 7
    27e2:	08 d0       	rcall	.+16     	; 0x27f4 <__divmodhi4_neg2>
    27e4:	74 d0       	rcall	.+232    	; 0x28ce <__udivmodhi4>
    27e6:	07 fc       	sbrc	r0, 7
    27e8:	05 d0       	rcall	.+10     	; 0x27f4 <__divmodhi4_neg2>
    27ea:	3e f4       	brtc	.+14     	; 0x27fa <__divmodhi4_exit>

000027ec <__divmodhi4_neg1>:
    27ec:	90 95       	com	r25
    27ee:	81 95       	neg	r24
    27f0:	9f 4f       	sbci	r25, 0xFF	; 255
    27f2:	08 95       	ret

000027f4 <__divmodhi4_neg2>:
    27f4:	70 95       	com	r23
    27f6:	61 95       	neg	r22
    27f8:	7f 4f       	sbci	r23, 0xFF	; 255

000027fa <__divmodhi4_exit>:
    27fa:	08 95       	ret

000027fc <__udivmodsi4>:
    27fc:	a1 e2       	ldi	r26, 0x21	; 33
    27fe:	1a 2e       	mov	r1, r26
    2800:	aa 1b       	sub	r26, r26
    2802:	bb 1b       	sub	r27, r27
    2804:	fd 01       	movw	r30, r26
    2806:	0d c0       	rjmp	.+26     	; 0x2822 <__udivmodsi4_ep>

00002808 <__udivmodsi4_loop>:
    2808:	aa 1f       	adc	r26, r26
    280a:	bb 1f       	adc	r27, r27
    280c:	ee 1f       	adc	r30, r30
    280e:	ff 1f       	adc	r31, r31
    2810:	a2 17       	cp	r26, r18
    2812:	b3 07       	cpc	r27, r19
    2814:	e4 07       	cpc	r30, r20
    2816:	f5 07       	cpc	r31, r21
    2818:	20 f0       	brcs	.+8      	; 0x2822 <__udivmodsi4_ep>
    281a:	a2 1b       	sub	r26, r18
    281c:	b3 0b       	sbc	r27, r19
    281e:	e4 0b       	sbc	r30, r20
    2820:	f5 0b       	sbc	r31, r21

00002822 <__udivmodsi4_ep>:
    2822:	66 1f       	adc	r22, r22
    2824:	77 1f       	adc	r23, r23
    2826:	88 1f       	adc	r24, r24
    2828:	99 1f       	adc	r25, r25
    282a:	1a 94       	dec	r1
    282c:	69 f7       	brne	.-38     	; 0x2808 <__udivmodsi4_loop>
    282e:	60 95       	com	r22
    2830:	70 95       	com	r23
    2832:	80 95       	com	r24
    2834:	90 95       	com	r25
    2836:	9b 01       	movw	r18, r22
    2838:	ac 01       	movw	r20, r24
    283a:	bd 01       	movw	r22, r26
    283c:	cf 01       	movw	r24, r30
    283e:	08 95       	ret

00002840 <__muluhisi3>:
    2840:	5a d0       	rcall	.+180    	; 0x28f6 <__umulhisi3>
    2842:	a5 9f       	mul	r26, r21
    2844:	90 0d       	add	r25, r0
    2846:	b4 9f       	mul	r27, r20
    2848:	90 0d       	add	r25, r0
    284a:	a4 9f       	mul	r26, r20
    284c:	80 0d       	add	r24, r0
    284e:	91 1d       	adc	r25, r1
    2850:	11 24       	eor	r1, r1
    2852:	08 95       	ret

00002854 <__mulshisi3>:
    2854:	b7 ff       	sbrs	r27, 7
    2856:	f4 cf       	rjmp	.-24     	; 0x2840 <__muluhisi3>

00002858 <__mulohisi3>:
    2858:	f3 df       	rcall	.-26     	; 0x2840 <__muluhisi3>
    285a:	82 1b       	sub	r24, r18
    285c:	93 0b       	sbc	r25, r19
    285e:	08 95       	ret

00002860 <__prologue_saves__>:
    2860:	2f 92       	push	r2
    2862:	3f 92       	push	r3
    2864:	4f 92       	push	r4
    2866:	5f 92       	push	r5
    2868:	6f 92       	push	r6
    286a:	7f 92       	push	r7
    286c:	8f 92       	push	r8
    286e:	9f 92       	push	r9
    2870:	af 92       	push	r10
    2872:	bf 92       	push	r11
    2874:	cf 92       	push	r12
    2876:	df 92       	push	r13
    2878:	ef 92       	push	r14
    287a:	ff 92       	push	r15
    287c:	0f 93       	push	r16
    287e:	1f 93       	push	r17
    2880:	cf 93       	push	r28
    2882:	df 93       	push	r29
    2884:	cd b7       	in	r28, 0x3d	; 61
    2886:	de b7       	in	r29, 0x3e	; 62
    2888:	ca 1b       	sub	r28, r26
    288a:	db 0b       	sbc	r29, r27
    288c:	0f b6       	in	r0, 0x3f	; 63
    288e:	f8 94       	cli
    2890:	de bf       	out	0x3e, r29	; 62
    2892:	0f be       	out	0x3f, r0	; 63
    2894:	cd bf       	out	0x3d, r28	; 61
    2896:	09 94       	ijmp

00002898 <__epilogue_restores__>:
    2898:	2a 88       	ldd	r2, Y+18	; 0x12
    289a:	39 88       	ldd	r3, Y+17	; 0x11
    289c:	48 88       	ldd	r4, Y+16	; 0x10
    289e:	5f 84       	ldd	r5, Y+15	; 0x0f
    28a0:	6e 84       	ldd	r6, Y+14	; 0x0e
    28a2:	7d 84       	ldd	r7, Y+13	; 0x0d
    28a4:	8c 84       	ldd	r8, Y+12	; 0x0c
    28a6:	9b 84       	ldd	r9, Y+11	; 0x0b
    28a8:	aa 84       	ldd	r10, Y+10	; 0x0a
    28aa:	b9 84       	ldd	r11, Y+9	; 0x09
    28ac:	c8 84       	ldd	r12, Y+8	; 0x08
    28ae:	df 80       	ldd	r13, Y+7	; 0x07
    28b0:	ee 80       	ldd	r14, Y+6	; 0x06
    28b2:	fd 80       	ldd	r15, Y+5	; 0x05
    28b4:	0c 81       	ldd	r16, Y+4	; 0x04
    28b6:	1b 81       	ldd	r17, Y+3	; 0x03
    28b8:	aa 81       	ldd	r26, Y+2	; 0x02
    28ba:	b9 81       	ldd	r27, Y+1	; 0x01
    28bc:	ce 0f       	add	r28, r30
    28be:	d1 1d       	adc	r29, r1
    28c0:	0f b6       	in	r0, 0x3f	; 63
    28c2:	f8 94       	cli
    28c4:	de bf       	out	0x3e, r29	; 62
    28c6:	0f be       	out	0x3f, r0	; 63
    28c8:	cd bf       	out	0x3d, r28	; 61
    28ca:	ed 01       	movw	r28, r26
    28cc:	08 95       	ret

000028ce <__udivmodhi4>:
    28ce:	aa 1b       	sub	r26, r26
    28d0:	bb 1b       	sub	r27, r27
    28d2:	51 e1       	ldi	r21, 0x11	; 17
    28d4:	07 c0       	rjmp	.+14     	; 0x28e4 <__udivmodhi4_ep>

000028d6 <__udivmodhi4_loop>:
    28d6:	aa 1f       	adc	r26, r26
    28d8:	bb 1f       	adc	r27, r27
    28da:	a6 17       	cp	r26, r22
    28dc:	b7 07       	cpc	r27, r23
    28de:	10 f0       	brcs	.+4      	; 0x28e4 <__udivmodhi4_ep>
    28e0:	a6 1b       	sub	r26, r22
    28e2:	b7 0b       	sbc	r27, r23

000028e4 <__udivmodhi4_ep>:
    28e4:	88 1f       	adc	r24, r24
    28e6:	99 1f       	adc	r25, r25
    28e8:	5a 95       	dec	r21
    28ea:	a9 f7       	brne	.-22     	; 0x28d6 <__udivmodhi4_loop>
    28ec:	80 95       	com	r24
    28ee:	90 95       	com	r25
    28f0:	bc 01       	movw	r22, r24
    28f2:	cd 01       	movw	r24, r26
    28f4:	08 95       	ret

000028f6 <__umulhisi3>:
    28f6:	a2 9f       	mul	r26, r18
    28f8:	b0 01       	movw	r22, r0
    28fa:	b3 9f       	mul	r27, r19
    28fc:	c0 01       	movw	r24, r0
    28fe:	a3 9f       	mul	r26, r19
    2900:	70 0d       	add	r23, r0
    2902:	81 1d       	adc	r24, r1
    2904:	11 24       	eor	r1, r1
    2906:	91 1d       	adc	r25, r1
    2908:	b2 9f       	mul	r27, r18
    290a:	70 0d       	add	r23, r0
    290c:	81 1d       	adc	r24, r1
    290e:	11 24       	eor	r1, r1
    2910:	91 1d       	adc	r25, r1
    2912:	08 95       	ret

00002914 <sprintf>:
    2914:	0f 93       	push	r16
    2916:	1f 93       	push	r17
    2918:	cf 93       	push	r28
    291a:	df 93       	push	r29
    291c:	cd b7       	in	r28, 0x3d	; 61
    291e:	de b7       	in	r29, 0x3e	; 62
    2920:	2e 97       	sbiw	r28, 0x0e	; 14
    2922:	0f b6       	in	r0, 0x3f	; 63
    2924:	f8 94       	cli
    2926:	de bf       	out	0x3e, r29	; 62
    2928:	0f be       	out	0x3f, r0	; 63
    292a:	cd bf       	out	0x3d, r28	; 61
    292c:	0d 89       	ldd	r16, Y+21	; 0x15
    292e:	1e 89       	ldd	r17, Y+22	; 0x16
    2930:	86 e0       	ldi	r24, 0x06	; 6
    2932:	8c 83       	std	Y+4, r24	; 0x04
    2934:	1a 83       	std	Y+2, r17	; 0x02
    2936:	09 83       	std	Y+1, r16	; 0x01
    2938:	8f ef       	ldi	r24, 0xFF	; 255
    293a:	9f e7       	ldi	r25, 0x7F	; 127
    293c:	9e 83       	std	Y+6, r25	; 0x06
    293e:	8d 83       	std	Y+5, r24	; 0x05
    2940:	ae 01       	movw	r20, r28
    2942:	47 5e       	subi	r20, 0xE7	; 231
    2944:	5f 4f       	sbci	r21, 0xFF	; 255
    2946:	6f 89       	ldd	r22, Y+23	; 0x17
    2948:	78 8d       	ldd	r23, Y+24	; 0x18
    294a:	ce 01       	movw	r24, r28
    294c:	01 96       	adiw	r24, 0x01	; 1
    294e:	10 d0       	rcall	.+32     	; 0x2970 <vfprintf>
    2950:	ef 81       	ldd	r30, Y+7	; 0x07
    2952:	f8 85       	ldd	r31, Y+8	; 0x08
    2954:	e0 0f       	add	r30, r16
    2956:	f1 1f       	adc	r31, r17
    2958:	10 82       	st	Z, r1
    295a:	2e 96       	adiw	r28, 0x0e	; 14
    295c:	0f b6       	in	r0, 0x3f	; 63
    295e:	f8 94       	cli
    2960:	de bf       	out	0x3e, r29	; 62
    2962:	0f be       	out	0x3f, r0	; 63
    2964:	cd bf       	out	0x3d, r28	; 61
    2966:	df 91       	pop	r29
    2968:	cf 91       	pop	r28
    296a:	1f 91       	pop	r17
    296c:	0f 91       	pop	r16
    296e:	08 95       	ret

00002970 <vfprintf>:
    2970:	2f 92       	push	r2
    2972:	3f 92       	push	r3
    2974:	4f 92       	push	r4
    2976:	5f 92       	push	r5
    2978:	6f 92       	push	r6
    297a:	7f 92       	push	r7
    297c:	8f 92       	push	r8
    297e:	9f 92       	push	r9
    2980:	af 92       	push	r10
    2982:	bf 92       	push	r11
    2984:	cf 92       	push	r12
    2986:	df 92       	push	r13
    2988:	ef 92       	push	r14
    298a:	ff 92       	push	r15
    298c:	0f 93       	push	r16
    298e:	1f 93       	push	r17
    2990:	cf 93       	push	r28
    2992:	df 93       	push	r29
    2994:	cd b7       	in	r28, 0x3d	; 61
    2996:	de b7       	in	r29, 0x3e	; 62
    2998:	2b 97       	sbiw	r28, 0x0b	; 11
    299a:	0f b6       	in	r0, 0x3f	; 63
    299c:	f8 94       	cli
    299e:	de bf       	out	0x3e, r29	; 62
    29a0:	0f be       	out	0x3f, r0	; 63
    29a2:	cd bf       	out	0x3d, r28	; 61
    29a4:	6c 01       	movw	r12, r24
    29a6:	7b 01       	movw	r14, r22
    29a8:	8a 01       	movw	r16, r20
    29aa:	fc 01       	movw	r30, r24
    29ac:	17 82       	std	Z+7, r1	; 0x07
    29ae:	16 82       	std	Z+6, r1	; 0x06
    29b0:	83 81       	ldd	r24, Z+3	; 0x03
    29b2:	81 ff       	sbrs	r24, 1
    29b4:	bf c1       	rjmp	.+894    	; 0x2d34 <vfprintf+0x3c4>
    29b6:	ce 01       	movw	r24, r28
    29b8:	01 96       	adiw	r24, 0x01	; 1
    29ba:	3c 01       	movw	r6, r24
    29bc:	f6 01       	movw	r30, r12
    29be:	93 81       	ldd	r25, Z+3	; 0x03
    29c0:	f7 01       	movw	r30, r14
    29c2:	93 fd       	sbrc	r25, 3
    29c4:	85 91       	lpm	r24, Z+
    29c6:	93 ff       	sbrs	r25, 3
    29c8:	81 91       	ld	r24, Z+
    29ca:	7f 01       	movw	r14, r30
    29cc:	88 23       	and	r24, r24
    29ce:	09 f4       	brne	.+2      	; 0x29d2 <vfprintf+0x62>
    29d0:	ad c1       	rjmp	.+858    	; 0x2d2c <vfprintf+0x3bc>
    29d2:	85 32       	cpi	r24, 0x25	; 37
    29d4:	39 f4       	brne	.+14     	; 0x29e4 <vfprintf+0x74>
    29d6:	93 fd       	sbrc	r25, 3
    29d8:	85 91       	lpm	r24, Z+
    29da:	93 ff       	sbrs	r25, 3
    29dc:	81 91       	ld	r24, Z+
    29de:	7f 01       	movw	r14, r30
    29e0:	85 32       	cpi	r24, 0x25	; 37
    29e2:	21 f4       	brne	.+8      	; 0x29ec <vfprintf+0x7c>
    29e4:	b6 01       	movw	r22, r12
    29e6:	90 e0       	ldi	r25, 0x00	; 0
    29e8:	d6 d1       	rcall	.+940    	; 0x2d96 <fputc>
    29ea:	e8 cf       	rjmp	.-48     	; 0x29bc <vfprintf+0x4c>
    29ec:	91 2c       	mov	r9, r1
    29ee:	21 2c       	mov	r2, r1
    29f0:	31 2c       	mov	r3, r1
    29f2:	ff e1       	ldi	r31, 0x1F	; 31
    29f4:	f3 15       	cp	r31, r3
    29f6:	d8 f0       	brcs	.+54     	; 0x2a2e <vfprintf+0xbe>
    29f8:	8b 32       	cpi	r24, 0x2B	; 43
    29fa:	79 f0       	breq	.+30     	; 0x2a1a <vfprintf+0xaa>
    29fc:	38 f4       	brcc	.+14     	; 0x2a0c <vfprintf+0x9c>
    29fe:	80 32       	cpi	r24, 0x20	; 32
    2a00:	79 f0       	breq	.+30     	; 0x2a20 <vfprintf+0xb0>
    2a02:	83 32       	cpi	r24, 0x23	; 35
    2a04:	a1 f4       	brne	.+40     	; 0x2a2e <vfprintf+0xbe>
    2a06:	23 2d       	mov	r18, r3
    2a08:	20 61       	ori	r18, 0x10	; 16
    2a0a:	1d c0       	rjmp	.+58     	; 0x2a46 <vfprintf+0xd6>
    2a0c:	8d 32       	cpi	r24, 0x2D	; 45
    2a0e:	61 f0       	breq	.+24     	; 0x2a28 <vfprintf+0xb8>
    2a10:	80 33       	cpi	r24, 0x30	; 48
    2a12:	69 f4       	brne	.+26     	; 0x2a2e <vfprintf+0xbe>
    2a14:	23 2d       	mov	r18, r3
    2a16:	21 60       	ori	r18, 0x01	; 1
    2a18:	16 c0       	rjmp	.+44     	; 0x2a46 <vfprintf+0xd6>
    2a1a:	83 2d       	mov	r24, r3
    2a1c:	82 60       	ori	r24, 0x02	; 2
    2a1e:	38 2e       	mov	r3, r24
    2a20:	e3 2d       	mov	r30, r3
    2a22:	e4 60       	ori	r30, 0x04	; 4
    2a24:	3e 2e       	mov	r3, r30
    2a26:	2a c0       	rjmp	.+84     	; 0x2a7c <vfprintf+0x10c>
    2a28:	f3 2d       	mov	r31, r3
    2a2a:	f8 60       	ori	r31, 0x08	; 8
    2a2c:	1d c0       	rjmp	.+58     	; 0x2a68 <vfprintf+0xf8>
    2a2e:	37 fc       	sbrc	r3, 7
    2a30:	2d c0       	rjmp	.+90     	; 0x2a8c <vfprintf+0x11c>
    2a32:	20 ed       	ldi	r18, 0xD0	; 208
    2a34:	28 0f       	add	r18, r24
    2a36:	2a 30       	cpi	r18, 0x0A	; 10
    2a38:	40 f0       	brcs	.+16     	; 0x2a4a <vfprintf+0xda>
    2a3a:	8e 32       	cpi	r24, 0x2E	; 46
    2a3c:	b9 f4       	brne	.+46     	; 0x2a6c <vfprintf+0xfc>
    2a3e:	36 fc       	sbrc	r3, 6
    2a40:	75 c1       	rjmp	.+746    	; 0x2d2c <vfprintf+0x3bc>
    2a42:	23 2d       	mov	r18, r3
    2a44:	20 64       	ori	r18, 0x40	; 64
    2a46:	32 2e       	mov	r3, r18
    2a48:	19 c0       	rjmp	.+50     	; 0x2a7c <vfprintf+0x10c>
    2a4a:	36 fe       	sbrs	r3, 6
    2a4c:	06 c0       	rjmp	.+12     	; 0x2a5a <vfprintf+0xea>
    2a4e:	8a e0       	ldi	r24, 0x0A	; 10
    2a50:	98 9e       	mul	r9, r24
    2a52:	20 0d       	add	r18, r0
    2a54:	11 24       	eor	r1, r1
    2a56:	92 2e       	mov	r9, r18
    2a58:	11 c0       	rjmp	.+34     	; 0x2a7c <vfprintf+0x10c>
    2a5a:	ea e0       	ldi	r30, 0x0A	; 10
    2a5c:	2e 9e       	mul	r2, r30
    2a5e:	20 0d       	add	r18, r0
    2a60:	11 24       	eor	r1, r1
    2a62:	22 2e       	mov	r2, r18
    2a64:	f3 2d       	mov	r31, r3
    2a66:	f0 62       	ori	r31, 0x20	; 32
    2a68:	3f 2e       	mov	r3, r31
    2a6a:	08 c0       	rjmp	.+16     	; 0x2a7c <vfprintf+0x10c>
    2a6c:	8c 36       	cpi	r24, 0x6C	; 108
    2a6e:	21 f4       	brne	.+8      	; 0x2a78 <vfprintf+0x108>
    2a70:	83 2d       	mov	r24, r3
    2a72:	80 68       	ori	r24, 0x80	; 128
    2a74:	38 2e       	mov	r3, r24
    2a76:	02 c0       	rjmp	.+4      	; 0x2a7c <vfprintf+0x10c>
    2a78:	88 36       	cpi	r24, 0x68	; 104
    2a7a:	41 f4       	brne	.+16     	; 0x2a8c <vfprintf+0x11c>
    2a7c:	f7 01       	movw	r30, r14
    2a7e:	93 fd       	sbrc	r25, 3
    2a80:	85 91       	lpm	r24, Z+
    2a82:	93 ff       	sbrs	r25, 3
    2a84:	81 91       	ld	r24, Z+
    2a86:	7f 01       	movw	r14, r30
    2a88:	81 11       	cpse	r24, r1
    2a8a:	b3 cf       	rjmp	.-154    	; 0x29f2 <vfprintf+0x82>
    2a8c:	98 2f       	mov	r25, r24
    2a8e:	9f 7d       	andi	r25, 0xDF	; 223
    2a90:	95 54       	subi	r25, 0x45	; 69
    2a92:	93 30       	cpi	r25, 0x03	; 3
    2a94:	28 f4       	brcc	.+10     	; 0x2aa0 <vfprintf+0x130>
    2a96:	0c 5f       	subi	r16, 0xFC	; 252
    2a98:	1f 4f       	sbci	r17, 0xFF	; 255
    2a9a:	9f e3       	ldi	r25, 0x3F	; 63
    2a9c:	99 83       	std	Y+1, r25	; 0x01
    2a9e:	0d c0       	rjmp	.+26     	; 0x2aba <vfprintf+0x14a>
    2aa0:	83 36       	cpi	r24, 0x63	; 99
    2aa2:	31 f0       	breq	.+12     	; 0x2ab0 <vfprintf+0x140>
    2aa4:	83 37       	cpi	r24, 0x73	; 115
    2aa6:	71 f0       	breq	.+28     	; 0x2ac4 <vfprintf+0x154>
    2aa8:	83 35       	cpi	r24, 0x53	; 83
    2aaa:	09 f0       	breq	.+2      	; 0x2aae <vfprintf+0x13e>
    2aac:	55 c0       	rjmp	.+170    	; 0x2b58 <vfprintf+0x1e8>
    2aae:	20 c0       	rjmp	.+64     	; 0x2af0 <vfprintf+0x180>
    2ab0:	f8 01       	movw	r30, r16
    2ab2:	80 81       	ld	r24, Z
    2ab4:	89 83       	std	Y+1, r24	; 0x01
    2ab6:	0e 5f       	subi	r16, 0xFE	; 254
    2ab8:	1f 4f       	sbci	r17, 0xFF	; 255
    2aba:	88 24       	eor	r8, r8
    2abc:	83 94       	inc	r8
    2abe:	91 2c       	mov	r9, r1
    2ac0:	53 01       	movw	r10, r6
    2ac2:	12 c0       	rjmp	.+36     	; 0x2ae8 <vfprintf+0x178>
    2ac4:	28 01       	movw	r4, r16
    2ac6:	f2 e0       	ldi	r31, 0x02	; 2
    2ac8:	4f 0e       	add	r4, r31
    2aca:	51 1c       	adc	r5, r1
    2acc:	f8 01       	movw	r30, r16
    2ace:	a0 80       	ld	r10, Z
    2ad0:	b1 80       	ldd	r11, Z+1	; 0x01
    2ad2:	36 fe       	sbrs	r3, 6
    2ad4:	03 c0       	rjmp	.+6      	; 0x2adc <vfprintf+0x16c>
    2ad6:	69 2d       	mov	r22, r9
    2ad8:	70 e0       	ldi	r23, 0x00	; 0
    2ada:	02 c0       	rjmp	.+4      	; 0x2ae0 <vfprintf+0x170>
    2adc:	6f ef       	ldi	r22, 0xFF	; 255
    2ade:	7f ef       	ldi	r23, 0xFF	; 255
    2ae0:	c5 01       	movw	r24, r10
    2ae2:	4e d1       	rcall	.+668    	; 0x2d80 <strnlen>
    2ae4:	4c 01       	movw	r8, r24
    2ae6:	82 01       	movw	r16, r4
    2ae8:	f3 2d       	mov	r31, r3
    2aea:	ff 77       	andi	r31, 0x7F	; 127
    2aec:	3f 2e       	mov	r3, r31
    2aee:	15 c0       	rjmp	.+42     	; 0x2b1a <vfprintf+0x1aa>
    2af0:	28 01       	movw	r4, r16
    2af2:	22 e0       	ldi	r18, 0x02	; 2
    2af4:	42 0e       	add	r4, r18
    2af6:	51 1c       	adc	r5, r1
    2af8:	f8 01       	movw	r30, r16
    2afa:	a0 80       	ld	r10, Z
    2afc:	b1 80       	ldd	r11, Z+1	; 0x01
    2afe:	36 fe       	sbrs	r3, 6
    2b00:	03 c0       	rjmp	.+6      	; 0x2b08 <vfprintf+0x198>
    2b02:	69 2d       	mov	r22, r9
    2b04:	70 e0       	ldi	r23, 0x00	; 0
    2b06:	02 c0       	rjmp	.+4      	; 0x2b0c <vfprintf+0x19c>
    2b08:	6f ef       	ldi	r22, 0xFF	; 255
    2b0a:	7f ef       	ldi	r23, 0xFF	; 255
    2b0c:	c5 01       	movw	r24, r10
    2b0e:	2d d1       	rcall	.+602    	; 0x2d6a <strnlen_P>
    2b10:	4c 01       	movw	r8, r24
    2b12:	f3 2d       	mov	r31, r3
    2b14:	f0 68       	ori	r31, 0x80	; 128
    2b16:	3f 2e       	mov	r3, r31
    2b18:	82 01       	movw	r16, r4
    2b1a:	33 fc       	sbrc	r3, 3
    2b1c:	19 c0       	rjmp	.+50     	; 0x2b50 <vfprintf+0x1e0>
    2b1e:	82 2d       	mov	r24, r2
    2b20:	90 e0       	ldi	r25, 0x00	; 0
    2b22:	88 16       	cp	r8, r24
    2b24:	99 06       	cpc	r9, r25
    2b26:	a0 f4       	brcc	.+40     	; 0x2b50 <vfprintf+0x1e0>
    2b28:	b6 01       	movw	r22, r12
    2b2a:	80 e2       	ldi	r24, 0x20	; 32
    2b2c:	90 e0       	ldi	r25, 0x00	; 0
    2b2e:	33 d1       	rcall	.+614    	; 0x2d96 <fputc>
    2b30:	2a 94       	dec	r2
    2b32:	f5 cf       	rjmp	.-22     	; 0x2b1e <vfprintf+0x1ae>
    2b34:	f5 01       	movw	r30, r10
    2b36:	37 fc       	sbrc	r3, 7
    2b38:	85 91       	lpm	r24, Z+
    2b3a:	37 fe       	sbrs	r3, 7
    2b3c:	81 91       	ld	r24, Z+
    2b3e:	5f 01       	movw	r10, r30
    2b40:	b6 01       	movw	r22, r12
    2b42:	90 e0       	ldi	r25, 0x00	; 0
    2b44:	28 d1       	rcall	.+592    	; 0x2d96 <fputc>
    2b46:	21 10       	cpse	r2, r1
    2b48:	2a 94       	dec	r2
    2b4a:	21 e0       	ldi	r18, 0x01	; 1
    2b4c:	82 1a       	sub	r8, r18
    2b4e:	91 08       	sbc	r9, r1
    2b50:	81 14       	cp	r8, r1
    2b52:	91 04       	cpc	r9, r1
    2b54:	79 f7       	brne	.-34     	; 0x2b34 <vfprintf+0x1c4>
    2b56:	e1 c0       	rjmp	.+450    	; 0x2d1a <vfprintf+0x3aa>
    2b58:	84 36       	cpi	r24, 0x64	; 100
    2b5a:	11 f0       	breq	.+4      	; 0x2b60 <vfprintf+0x1f0>
    2b5c:	89 36       	cpi	r24, 0x69	; 105
    2b5e:	39 f5       	brne	.+78     	; 0x2bae <vfprintf+0x23e>
    2b60:	f8 01       	movw	r30, r16
    2b62:	37 fe       	sbrs	r3, 7
    2b64:	07 c0       	rjmp	.+14     	; 0x2b74 <vfprintf+0x204>
    2b66:	60 81       	ld	r22, Z
    2b68:	71 81       	ldd	r23, Z+1	; 0x01
    2b6a:	82 81       	ldd	r24, Z+2	; 0x02
    2b6c:	93 81       	ldd	r25, Z+3	; 0x03
    2b6e:	0c 5f       	subi	r16, 0xFC	; 252
    2b70:	1f 4f       	sbci	r17, 0xFF	; 255
    2b72:	08 c0       	rjmp	.+16     	; 0x2b84 <vfprintf+0x214>
    2b74:	60 81       	ld	r22, Z
    2b76:	71 81       	ldd	r23, Z+1	; 0x01
    2b78:	07 2e       	mov	r0, r23
    2b7a:	00 0c       	add	r0, r0
    2b7c:	88 0b       	sbc	r24, r24
    2b7e:	99 0b       	sbc	r25, r25
    2b80:	0e 5f       	subi	r16, 0xFE	; 254
    2b82:	1f 4f       	sbci	r17, 0xFF	; 255
    2b84:	f3 2d       	mov	r31, r3
    2b86:	ff 76       	andi	r31, 0x6F	; 111
    2b88:	3f 2e       	mov	r3, r31
    2b8a:	97 ff       	sbrs	r25, 7
    2b8c:	09 c0       	rjmp	.+18     	; 0x2ba0 <vfprintf+0x230>
    2b8e:	90 95       	com	r25
    2b90:	80 95       	com	r24
    2b92:	70 95       	com	r23
    2b94:	61 95       	neg	r22
    2b96:	7f 4f       	sbci	r23, 0xFF	; 255
    2b98:	8f 4f       	sbci	r24, 0xFF	; 255
    2b9a:	9f 4f       	sbci	r25, 0xFF	; 255
    2b9c:	f0 68       	ori	r31, 0x80	; 128
    2b9e:	3f 2e       	mov	r3, r31
    2ba0:	2a e0       	ldi	r18, 0x0A	; 10
    2ba2:	30 e0       	ldi	r19, 0x00	; 0
    2ba4:	a3 01       	movw	r20, r6
    2ba6:	33 d1       	rcall	.+614    	; 0x2e0e <__ultoa_invert>
    2ba8:	88 2e       	mov	r8, r24
    2baa:	86 18       	sub	r8, r6
    2bac:	44 c0       	rjmp	.+136    	; 0x2c36 <vfprintf+0x2c6>
    2bae:	85 37       	cpi	r24, 0x75	; 117
    2bb0:	31 f4       	brne	.+12     	; 0x2bbe <vfprintf+0x24e>
    2bb2:	23 2d       	mov	r18, r3
    2bb4:	2f 7e       	andi	r18, 0xEF	; 239
    2bb6:	b2 2e       	mov	r11, r18
    2bb8:	2a e0       	ldi	r18, 0x0A	; 10
    2bba:	30 e0       	ldi	r19, 0x00	; 0
    2bbc:	25 c0       	rjmp	.+74     	; 0x2c08 <vfprintf+0x298>
    2bbe:	93 2d       	mov	r25, r3
    2bc0:	99 7f       	andi	r25, 0xF9	; 249
    2bc2:	b9 2e       	mov	r11, r25
    2bc4:	8f 36       	cpi	r24, 0x6F	; 111
    2bc6:	c1 f0       	breq	.+48     	; 0x2bf8 <vfprintf+0x288>
    2bc8:	18 f4       	brcc	.+6      	; 0x2bd0 <vfprintf+0x260>
    2bca:	88 35       	cpi	r24, 0x58	; 88
    2bcc:	79 f0       	breq	.+30     	; 0x2bec <vfprintf+0x27c>
    2bce:	ae c0       	rjmp	.+348    	; 0x2d2c <vfprintf+0x3bc>
    2bd0:	80 37       	cpi	r24, 0x70	; 112
    2bd2:	19 f0       	breq	.+6      	; 0x2bda <vfprintf+0x26a>
    2bd4:	88 37       	cpi	r24, 0x78	; 120
    2bd6:	21 f0       	breq	.+8      	; 0x2be0 <vfprintf+0x270>
    2bd8:	a9 c0       	rjmp	.+338    	; 0x2d2c <vfprintf+0x3bc>
    2bda:	e9 2f       	mov	r30, r25
    2bdc:	e0 61       	ori	r30, 0x10	; 16
    2bde:	be 2e       	mov	r11, r30
    2be0:	b4 fe       	sbrs	r11, 4
    2be2:	0d c0       	rjmp	.+26     	; 0x2bfe <vfprintf+0x28e>
    2be4:	fb 2d       	mov	r31, r11
    2be6:	f4 60       	ori	r31, 0x04	; 4
    2be8:	bf 2e       	mov	r11, r31
    2bea:	09 c0       	rjmp	.+18     	; 0x2bfe <vfprintf+0x28e>
    2bec:	34 fe       	sbrs	r3, 4
    2bee:	0a c0       	rjmp	.+20     	; 0x2c04 <vfprintf+0x294>
    2bf0:	29 2f       	mov	r18, r25
    2bf2:	26 60       	ori	r18, 0x06	; 6
    2bf4:	b2 2e       	mov	r11, r18
    2bf6:	06 c0       	rjmp	.+12     	; 0x2c04 <vfprintf+0x294>
    2bf8:	28 e0       	ldi	r18, 0x08	; 8
    2bfa:	30 e0       	ldi	r19, 0x00	; 0
    2bfc:	05 c0       	rjmp	.+10     	; 0x2c08 <vfprintf+0x298>
    2bfe:	20 e1       	ldi	r18, 0x10	; 16
    2c00:	30 e0       	ldi	r19, 0x00	; 0
    2c02:	02 c0       	rjmp	.+4      	; 0x2c08 <vfprintf+0x298>
    2c04:	20 e1       	ldi	r18, 0x10	; 16
    2c06:	32 e0       	ldi	r19, 0x02	; 2
    2c08:	f8 01       	movw	r30, r16
    2c0a:	b7 fe       	sbrs	r11, 7
    2c0c:	07 c0       	rjmp	.+14     	; 0x2c1c <vfprintf+0x2ac>
    2c0e:	60 81       	ld	r22, Z
    2c10:	71 81       	ldd	r23, Z+1	; 0x01
    2c12:	82 81       	ldd	r24, Z+2	; 0x02
    2c14:	93 81       	ldd	r25, Z+3	; 0x03
    2c16:	0c 5f       	subi	r16, 0xFC	; 252
    2c18:	1f 4f       	sbci	r17, 0xFF	; 255
    2c1a:	06 c0       	rjmp	.+12     	; 0x2c28 <vfprintf+0x2b8>
    2c1c:	60 81       	ld	r22, Z
    2c1e:	71 81       	ldd	r23, Z+1	; 0x01
    2c20:	80 e0       	ldi	r24, 0x00	; 0
    2c22:	90 e0       	ldi	r25, 0x00	; 0
    2c24:	0e 5f       	subi	r16, 0xFE	; 254
    2c26:	1f 4f       	sbci	r17, 0xFF	; 255
    2c28:	a3 01       	movw	r20, r6
    2c2a:	f1 d0       	rcall	.+482    	; 0x2e0e <__ultoa_invert>
    2c2c:	88 2e       	mov	r8, r24
    2c2e:	86 18       	sub	r8, r6
    2c30:	fb 2d       	mov	r31, r11
    2c32:	ff 77       	andi	r31, 0x7F	; 127
    2c34:	3f 2e       	mov	r3, r31
    2c36:	36 fe       	sbrs	r3, 6
    2c38:	0d c0       	rjmp	.+26     	; 0x2c54 <vfprintf+0x2e4>
    2c3a:	23 2d       	mov	r18, r3
    2c3c:	2e 7f       	andi	r18, 0xFE	; 254
    2c3e:	a2 2e       	mov	r10, r18
    2c40:	89 14       	cp	r8, r9
    2c42:	58 f4       	brcc	.+22     	; 0x2c5a <vfprintf+0x2ea>
    2c44:	34 fe       	sbrs	r3, 4
    2c46:	0b c0       	rjmp	.+22     	; 0x2c5e <vfprintf+0x2ee>
    2c48:	32 fc       	sbrc	r3, 2
    2c4a:	09 c0       	rjmp	.+18     	; 0x2c5e <vfprintf+0x2ee>
    2c4c:	83 2d       	mov	r24, r3
    2c4e:	8e 7e       	andi	r24, 0xEE	; 238
    2c50:	a8 2e       	mov	r10, r24
    2c52:	05 c0       	rjmp	.+10     	; 0x2c5e <vfprintf+0x2ee>
    2c54:	b8 2c       	mov	r11, r8
    2c56:	a3 2c       	mov	r10, r3
    2c58:	03 c0       	rjmp	.+6      	; 0x2c60 <vfprintf+0x2f0>
    2c5a:	b8 2c       	mov	r11, r8
    2c5c:	01 c0       	rjmp	.+2      	; 0x2c60 <vfprintf+0x2f0>
    2c5e:	b9 2c       	mov	r11, r9
    2c60:	a4 fe       	sbrs	r10, 4
    2c62:	0f c0       	rjmp	.+30     	; 0x2c82 <vfprintf+0x312>
    2c64:	fe 01       	movw	r30, r28
    2c66:	e8 0d       	add	r30, r8
    2c68:	f1 1d       	adc	r31, r1
    2c6a:	80 81       	ld	r24, Z
    2c6c:	80 33       	cpi	r24, 0x30	; 48
    2c6e:	21 f4       	brne	.+8      	; 0x2c78 <vfprintf+0x308>
    2c70:	9a 2d       	mov	r25, r10
    2c72:	99 7e       	andi	r25, 0xE9	; 233
    2c74:	a9 2e       	mov	r10, r25
    2c76:	09 c0       	rjmp	.+18     	; 0x2c8a <vfprintf+0x31a>
    2c78:	a2 fe       	sbrs	r10, 2
    2c7a:	06 c0       	rjmp	.+12     	; 0x2c88 <vfprintf+0x318>
    2c7c:	b3 94       	inc	r11
    2c7e:	b3 94       	inc	r11
    2c80:	04 c0       	rjmp	.+8      	; 0x2c8a <vfprintf+0x31a>
    2c82:	8a 2d       	mov	r24, r10
    2c84:	86 78       	andi	r24, 0x86	; 134
    2c86:	09 f0       	breq	.+2      	; 0x2c8a <vfprintf+0x31a>
    2c88:	b3 94       	inc	r11
    2c8a:	a3 fc       	sbrc	r10, 3
    2c8c:	10 c0       	rjmp	.+32     	; 0x2cae <vfprintf+0x33e>
    2c8e:	a0 fe       	sbrs	r10, 0
    2c90:	06 c0       	rjmp	.+12     	; 0x2c9e <vfprintf+0x32e>
    2c92:	b2 14       	cp	r11, r2
    2c94:	80 f4       	brcc	.+32     	; 0x2cb6 <vfprintf+0x346>
    2c96:	28 0c       	add	r2, r8
    2c98:	92 2c       	mov	r9, r2
    2c9a:	9b 18       	sub	r9, r11
    2c9c:	0d c0       	rjmp	.+26     	; 0x2cb8 <vfprintf+0x348>
    2c9e:	b2 14       	cp	r11, r2
    2ca0:	58 f4       	brcc	.+22     	; 0x2cb8 <vfprintf+0x348>
    2ca2:	b6 01       	movw	r22, r12
    2ca4:	80 e2       	ldi	r24, 0x20	; 32
    2ca6:	90 e0       	ldi	r25, 0x00	; 0
    2ca8:	76 d0       	rcall	.+236    	; 0x2d96 <fputc>
    2caa:	b3 94       	inc	r11
    2cac:	f8 cf       	rjmp	.-16     	; 0x2c9e <vfprintf+0x32e>
    2cae:	b2 14       	cp	r11, r2
    2cb0:	18 f4       	brcc	.+6      	; 0x2cb8 <vfprintf+0x348>
    2cb2:	2b 18       	sub	r2, r11
    2cb4:	02 c0       	rjmp	.+4      	; 0x2cba <vfprintf+0x34a>
    2cb6:	98 2c       	mov	r9, r8
    2cb8:	21 2c       	mov	r2, r1
    2cba:	a4 fe       	sbrs	r10, 4
    2cbc:	0f c0       	rjmp	.+30     	; 0x2cdc <vfprintf+0x36c>
    2cbe:	b6 01       	movw	r22, r12
    2cc0:	80 e3       	ldi	r24, 0x30	; 48
    2cc2:	90 e0       	ldi	r25, 0x00	; 0
    2cc4:	68 d0       	rcall	.+208    	; 0x2d96 <fputc>
    2cc6:	a2 fe       	sbrs	r10, 2
    2cc8:	16 c0       	rjmp	.+44     	; 0x2cf6 <vfprintf+0x386>
    2cca:	a1 fc       	sbrc	r10, 1
    2ccc:	03 c0       	rjmp	.+6      	; 0x2cd4 <vfprintf+0x364>
    2cce:	88 e7       	ldi	r24, 0x78	; 120
    2cd0:	90 e0       	ldi	r25, 0x00	; 0
    2cd2:	02 c0       	rjmp	.+4      	; 0x2cd8 <vfprintf+0x368>
    2cd4:	88 e5       	ldi	r24, 0x58	; 88
    2cd6:	90 e0       	ldi	r25, 0x00	; 0
    2cd8:	b6 01       	movw	r22, r12
    2cda:	0c c0       	rjmp	.+24     	; 0x2cf4 <vfprintf+0x384>
    2cdc:	8a 2d       	mov	r24, r10
    2cde:	86 78       	andi	r24, 0x86	; 134
    2ce0:	51 f0       	breq	.+20     	; 0x2cf6 <vfprintf+0x386>
    2ce2:	a1 fe       	sbrs	r10, 1
    2ce4:	02 c0       	rjmp	.+4      	; 0x2cea <vfprintf+0x37a>
    2ce6:	8b e2       	ldi	r24, 0x2B	; 43
    2ce8:	01 c0       	rjmp	.+2      	; 0x2cec <vfprintf+0x37c>
    2cea:	80 e2       	ldi	r24, 0x20	; 32
    2cec:	a7 fc       	sbrc	r10, 7
    2cee:	8d e2       	ldi	r24, 0x2D	; 45
    2cf0:	b6 01       	movw	r22, r12
    2cf2:	90 e0       	ldi	r25, 0x00	; 0
    2cf4:	50 d0       	rcall	.+160    	; 0x2d96 <fputc>
    2cf6:	89 14       	cp	r8, r9
    2cf8:	30 f4       	brcc	.+12     	; 0x2d06 <vfprintf+0x396>
    2cfa:	b6 01       	movw	r22, r12
    2cfc:	80 e3       	ldi	r24, 0x30	; 48
    2cfe:	90 e0       	ldi	r25, 0x00	; 0
    2d00:	4a d0       	rcall	.+148    	; 0x2d96 <fputc>
    2d02:	9a 94       	dec	r9
    2d04:	f8 cf       	rjmp	.-16     	; 0x2cf6 <vfprintf+0x386>
    2d06:	8a 94       	dec	r8
    2d08:	f3 01       	movw	r30, r6
    2d0a:	e8 0d       	add	r30, r8
    2d0c:	f1 1d       	adc	r31, r1
    2d0e:	80 81       	ld	r24, Z
    2d10:	b6 01       	movw	r22, r12
    2d12:	90 e0       	ldi	r25, 0x00	; 0
    2d14:	40 d0       	rcall	.+128    	; 0x2d96 <fputc>
    2d16:	81 10       	cpse	r8, r1
    2d18:	f6 cf       	rjmp	.-20     	; 0x2d06 <vfprintf+0x396>
    2d1a:	22 20       	and	r2, r2
    2d1c:	09 f4       	brne	.+2      	; 0x2d20 <vfprintf+0x3b0>
    2d1e:	4e ce       	rjmp	.-868    	; 0x29bc <vfprintf+0x4c>
    2d20:	b6 01       	movw	r22, r12
    2d22:	80 e2       	ldi	r24, 0x20	; 32
    2d24:	90 e0       	ldi	r25, 0x00	; 0
    2d26:	37 d0       	rcall	.+110    	; 0x2d96 <fputc>
    2d28:	2a 94       	dec	r2
    2d2a:	f7 cf       	rjmp	.-18     	; 0x2d1a <vfprintf+0x3aa>
    2d2c:	f6 01       	movw	r30, r12
    2d2e:	86 81       	ldd	r24, Z+6	; 0x06
    2d30:	97 81       	ldd	r25, Z+7	; 0x07
    2d32:	02 c0       	rjmp	.+4      	; 0x2d38 <vfprintf+0x3c8>
    2d34:	8f ef       	ldi	r24, 0xFF	; 255
    2d36:	9f ef       	ldi	r25, 0xFF	; 255
    2d38:	2b 96       	adiw	r28, 0x0b	; 11
    2d3a:	0f b6       	in	r0, 0x3f	; 63
    2d3c:	f8 94       	cli
    2d3e:	de bf       	out	0x3e, r29	; 62
    2d40:	0f be       	out	0x3f, r0	; 63
    2d42:	cd bf       	out	0x3d, r28	; 61
    2d44:	df 91       	pop	r29
    2d46:	cf 91       	pop	r28
    2d48:	1f 91       	pop	r17
    2d4a:	0f 91       	pop	r16
    2d4c:	ff 90       	pop	r15
    2d4e:	ef 90       	pop	r14
    2d50:	df 90       	pop	r13
    2d52:	cf 90       	pop	r12
    2d54:	bf 90       	pop	r11
    2d56:	af 90       	pop	r10
    2d58:	9f 90       	pop	r9
    2d5a:	8f 90       	pop	r8
    2d5c:	7f 90       	pop	r7
    2d5e:	6f 90       	pop	r6
    2d60:	5f 90       	pop	r5
    2d62:	4f 90       	pop	r4
    2d64:	3f 90       	pop	r3
    2d66:	2f 90       	pop	r2
    2d68:	08 95       	ret

00002d6a <strnlen_P>:
    2d6a:	fc 01       	movw	r30, r24
    2d6c:	05 90       	lpm	r0, Z+
    2d6e:	61 50       	subi	r22, 0x01	; 1
    2d70:	70 40       	sbci	r23, 0x00	; 0
    2d72:	01 10       	cpse	r0, r1
    2d74:	d8 f7       	brcc	.-10     	; 0x2d6c <strnlen_P+0x2>
    2d76:	80 95       	com	r24
    2d78:	90 95       	com	r25
    2d7a:	8e 0f       	add	r24, r30
    2d7c:	9f 1f       	adc	r25, r31
    2d7e:	08 95       	ret

00002d80 <strnlen>:
    2d80:	fc 01       	movw	r30, r24
    2d82:	61 50       	subi	r22, 0x01	; 1
    2d84:	70 40       	sbci	r23, 0x00	; 0
    2d86:	01 90       	ld	r0, Z+
    2d88:	01 10       	cpse	r0, r1
    2d8a:	d8 f7       	brcc	.-10     	; 0x2d82 <strnlen+0x2>
    2d8c:	80 95       	com	r24
    2d8e:	90 95       	com	r25
    2d90:	8e 0f       	add	r24, r30
    2d92:	9f 1f       	adc	r25, r31
    2d94:	08 95       	ret

00002d96 <fputc>:
    2d96:	0f 93       	push	r16
    2d98:	1f 93       	push	r17
    2d9a:	cf 93       	push	r28
    2d9c:	df 93       	push	r29
    2d9e:	fb 01       	movw	r30, r22
    2da0:	23 81       	ldd	r18, Z+3	; 0x03
    2da2:	21 fd       	sbrc	r18, 1
    2da4:	03 c0       	rjmp	.+6      	; 0x2dac <fputc+0x16>
    2da6:	8f ef       	ldi	r24, 0xFF	; 255
    2da8:	9f ef       	ldi	r25, 0xFF	; 255
    2daa:	2c c0       	rjmp	.+88     	; 0x2e04 <fputc+0x6e>
    2dac:	22 ff       	sbrs	r18, 2
    2dae:	16 c0       	rjmp	.+44     	; 0x2ddc <fputc+0x46>
    2db0:	46 81       	ldd	r20, Z+6	; 0x06
    2db2:	57 81       	ldd	r21, Z+7	; 0x07
    2db4:	24 81       	ldd	r18, Z+4	; 0x04
    2db6:	35 81       	ldd	r19, Z+5	; 0x05
    2db8:	42 17       	cp	r20, r18
    2dba:	53 07       	cpc	r21, r19
    2dbc:	44 f4       	brge	.+16     	; 0x2dce <fputc+0x38>
    2dbe:	a0 81       	ld	r26, Z
    2dc0:	b1 81       	ldd	r27, Z+1	; 0x01
    2dc2:	9d 01       	movw	r18, r26
    2dc4:	2f 5f       	subi	r18, 0xFF	; 255
    2dc6:	3f 4f       	sbci	r19, 0xFF	; 255
    2dc8:	31 83       	std	Z+1, r19	; 0x01
    2dca:	20 83       	st	Z, r18
    2dcc:	8c 93       	st	X, r24
    2dce:	26 81       	ldd	r18, Z+6	; 0x06
    2dd0:	37 81       	ldd	r19, Z+7	; 0x07
    2dd2:	2f 5f       	subi	r18, 0xFF	; 255
    2dd4:	3f 4f       	sbci	r19, 0xFF	; 255
    2dd6:	37 83       	std	Z+7, r19	; 0x07
    2dd8:	26 83       	std	Z+6, r18	; 0x06
    2dda:	14 c0       	rjmp	.+40     	; 0x2e04 <fputc+0x6e>
    2ddc:	8b 01       	movw	r16, r22
    2dde:	ec 01       	movw	r28, r24
    2de0:	fb 01       	movw	r30, r22
    2de2:	00 84       	ldd	r0, Z+8	; 0x08
    2de4:	f1 85       	ldd	r31, Z+9	; 0x09
    2de6:	e0 2d       	mov	r30, r0
    2de8:	09 95       	icall
    2dea:	89 2b       	or	r24, r25
    2dec:	e1 f6       	brne	.-72     	; 0x2da6 <fputc+0x10>
    2dee:	d8 01       	movw	r26, r16
    2df0:	16 96       	adiw	r26, 0x06	; 6
    2df2:	8d 91       	ld	r24, X+
    2df4:	9c 91       	ld	r25, X
    2df6:	17 97       	sbiw	r26, 0x07	; 7
    2df8:	01 96       	adiw	r24, 0x01	; 1
    2dfa:	17 96       	adiw	r26, 0x07	; 7
    2dfc:	9c 93       	st	X, r25
    2dfe:	8e 93       	st	-X, r24
    2e00:	16 97       	sbiw	r26, 0x06	; 6
    2e02:	ce 01       	movw	r24, r28
    2e04:	df 91       	pop	r29
    2e06:	cf 91       	pop	r28
    2e08:	1f 91       	pop	r17
    2e0a:	0f 91       	pop	r16
    2e0c:	08 95       	ret

00002e0e <__ultoa_invert>:
    2e0e:	fa 01       	movw	r30, r20
    2e10:	aa 27       	eor	r26, r26
    2e12:	28 30       	cpi	r18, 0x08	; 8
    2e14:	51 f1       	breq	.+84     	; 0x2e6a <__ultoa_invert+0x5c>
    2e16:	20 31       	cpi	r18, 0x10	; 16
    2e18:	81 f1       	breq	.+96     	; 0x2e7a <__ultoa_invert+0x6c>
    2e1a:	e8 94       	clt
    2e1c:	6f 93       	push	r22
    2e1e:	6e 7f       	andi	r22, 0xFE	; 254
    2e20:	6e 5f       	subi	r22, 0xFE	; 254
    2e22:	7f 4f       	sbci	r23, 0xFF	; 255
    2e24:	8f 4f       	sbci	r24, 0xFF	; 255
    2e26:	9f 4f       	sbci	r25, 0xFF	; 255
    2e28:	af 4f       	sbci	r26, 0xFF	; 255
    2e2a:	b1 e0       	ldi	r27, 0x01	; 1
    2e2c:	3e d0       	rcall	.+124    	; 0x2eaa <__ultoa_invert+0x9c>
    2e2e:	b4 e0       	ldi	r27, 0x04	; 4
    2e30:	3c d0       	rcall	.+120    	; 0x2eaa <__ultoa_invert+0x9c>
    2e32:	67 0f       	add	r22, r23
    2e34:	78 1f       	adc	r23, r24
    2e36:	89 1f       	adc	r24, r25
    2e38:	9a 1f       	adc	r25, r26
    2e3a:	a1 1d       	adc	r26, r1
    2e3c:	68 0f       	add	r22, r24
    2e3e:	79 1f       	adc	r23, r25
    2e40:	8a 1f       	adc	r24, r26
    2e42:	91 1d       	adc	r25, r1
    2e44:	a1 1d       	adc	r26, r1
    2e46:	6a 0f       	add	r22, r26
    2e48:	71 1d       	adc	r23, r1
    2e4a:	81 1d       	adc	r24, r1
    2e4c:	91 1d       	adc	r25, r1
    2e4e:	a1 1d       	adc	r26, r1
    2e50:	20 d0       	rcall	.+64     	; 0x2e92 <__ultoa_invert+0x84>
    2e52:	09 f4       	brne	.+2      	; 0x2e56 <__ultoa_invert+0x48>
    2e54:	68 94       	set
    2e56:	3f 91       	pop	r19
    2e58:	2a e0       	ldi	r18, 0x0A	; 10
    2e5a:	26 9f       	mul	r18, r22
    2e5c:	11 24       	eor	r1, r1
    2e5e:	30 19       	sub	r19, r0
    2e60:	30 5d       	subi	r19, 0xD0	; 208
    2e62:	31 93       	st	Z+, r19
    2e64:	de f6       	brtc	.-74     	; 0x2e1c <__ultoa_invert+0xe>
    2e66:	cf 01       	movw	r24, r30
    2e68:	08 95       	ret
    2e6a:	46 2f       	mov	r20, r22
    2e6c:	47 70       	andi	r20, 0x07	; 7
    2e6e:	40 5d       	subi	r20, 0xD0	; 208
    2e70:	41 93       	st	Z+, r20
    2e72:	b3 e0       	ldi	r27, 0x03	; 3
    2e74:	0f d0       	rcall	.+30     	; 0x2e94 <__ultoa_invert+0x86>
    2e76:	c9 f7       	brne	.-14     	; 0x2e6a <__ultoa_invert+0x5c>
    2e78:	f6 cf       	rjmp	.-20     	; 0x2e66 <__ultoa_invert+0x58>
    2e7a:	46 2f       	mov	r20, r22
    2e7c:	4f 70       	andi	r20, 0x0F	; 15
    2e7e:	40 5d       	subi	r20, 0xD0	; 208
    2e80:	4a 33       	cpi	r20, 0x3A	; 58
    2e82:	18 f0       	brcs	.+6      	; 0x2e8a <__ultoa_invert+0x7c>
    2e84:	49 5d       	subi	r20, 0xD9	; 217
    2e86:	31 fd       	sbrc	r19, 1
    2e88:	40 52       	subi	r20, 0x20	; 32
    2e8a:	41 93       	st	Z+, r20
    2e8c:	02 d0       	rcall	.+4      	; 0x2e92 <__ultoa_invert+0x84>
    2e8e:	a9 f7       	brne	.-22     	; 0x2e7a <__ultoa_invert+0x6c>
    2e90:	ea cf       	rjmp	.-44     	; 0x2e66 <__ultoa_invert+0x58>
    2e92:	b4 e0       	ldi	r27, 0x04	; 4
    2e94:	a6 95       	lsr	r26
    2e96:	97 95       	ror	r25
    2e98:	87 95       	ror	r24
    2e9a:	77 95       	ror	r23
    2e9c:	67 95       	ror	r22
    2e9e:	ba 95       	dec	r27
    2ea0:	c9 f7       	brne	.-14     	; 0x2e94 <__ultoa_invert+0x86>
    2ea2:	00 97       	sbiw	r24, 0x00	; 0
    2ea4:	61 05       	cpc	r22, r1
    2ea6:	71 05       	cpc	r23, r1
    2ea8:	08 95       	ret
    2eaa:	9b 01       	movw	r18, r22
    2eac:	ac 01       	movw	r20, r24
    2eae:	0a 2e       	mov	r0, r26
    2eb0:	06 94       	lsr	r0
    2eb2:	57 95       	ror	r21
    2eb4:	47 95       	ror	r20
    2eb6:	37 95       	ror	r19
    2eb8:	27 95       	ror	r18
    2eba:	ba 95       	dec	r27
    2ebc:	c9 f7       	brne	.-14     	; 0x2eb0 <__ultoa_invert+0xa2>
    2ebe:	62 0f       	add	r22, r18
    2ec0:	73 1f       	adc	r23, r19
    2ec2:	84 1f       	adc	r24, r20
    2ec4:	95 1f       	adc	r25, r21
    2ec6:	a0 1d       	adc	r26, r0
    2ec8:	08 95       	ret

00002eca <_exit>:
    2eca:	f8 94       	cli

00002ecc <__stop_program>:
    2ecc:	ff cf       	rjmp	.-2      	; 0x2ecc <__stop_program>
